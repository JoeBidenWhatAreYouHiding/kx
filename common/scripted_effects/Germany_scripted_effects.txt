GER_add_to_mitteleuropa = {
	if = {
		limit = { GER_is_in_mitteleuropa = no }
		custom_effect_tooltip = GER_add_to_mitteleuropa
		set_country_flag = GER_is_in_mitteleuropa
		add_to_array = { GER.GER_mitteleuropa_members = THIS }
		if = {
			limit = {
				GER = { has_idea = GER_mitteleuropa_empire_10 }
				NOT = {
					tag = GER
				}
			}
			custom_effect_tooltip = GER_add_to_mitteleuropa_effects
			custom_effect_tooltip = KR_mitteleuropa_tooltip_europakommission
			hidden_effect = { add_ideas = GER_mitteleuropa_10 }
		}
		else_if = {
			limit = {
				GER = { has_idea = GER_mitteleuropa_empire_9 }
				NOT = {
					tag = GER
				}
			}
			custom_effect_tooltip = GER_add_to_mitteleuropa_effects
			custom_effect_tooltip = KR_mitteleuropa_tooltip_europakommission
			hidden_effect = { add_ideas = GER_mitteleuropa_9 }
		}
		else_if = {
			limit = {
				GER = { has_idea = GER_mitteleuropa_empire_8 }
				NOT = {
					tag = GER
				}
			}
			custom_effect_tooltip = GER_add_to_mitteleuropa_effects
			custom_effect_tooltip = KR_mitteleuropa_tooltip_europakommission
			hidden_effect = { add_ideas = GER_mitteleuropa_8 }
		}
		else_if = {
			limit = {
				GER = { has_idea = GER_mitteleuropa_empire_7 }
				NOT = {
					tag = GER
				}
			}
			custom_effect_tooltip = GER_add_to_mitteleuropa_effects
			custom_effect_tooltip = KR_mitteleuropa_tooltip_europakommission
			hidden_effect = { add_ideas = GER_mitteleuropa_7 }
		}
		else_if = {
			limit = {
				GER = { has_idea = GER_mitteleuropa_empire_6 }
				NOT = {
					tag = GER
				}
			}
			custom_effect_tooltip = GER_add_to_mitteleuropa_effects
			custom_effect_tooltip = KR_mitteleuropa_tooltip_europakommission
			hidden_effect = { add_ideas = GER_mitteleuropa_6 }
		}
		else_if = {
			limit = {
				GER = { has_idea = GER_mitteleuropa_empire_5 }
				NOT = {
					tag = GER
				}
			}
			custom_effect_tooltip = GER_add_to_mitteleuropa_effects
			custom_effect_tooltip = KR_mitteleuropa_tooltip_europakommission
			hidden_effect = { add_ideas = GER_mitteleuropa_5 }
		}
		else_if = {
			limit = {
				GER = { has_idea = GER_mitteleuropa_empire_4 }
				NOT = {
					tag = GER
				}
			}
			custom_effect_tooltip = GER_add_to_mitteleuropa_effects
			custom_effect_tooltip = KR_mitteleuropa_tooltip_europakommission
			hidden_effect = { add_ideas = GER_mitteleuropa_4 }
		}
		else_if = {
			limit = {
				GER = { has_idea = GER_mitteleuropa_empire_3 }
				NOT = {
					tag = GER
				}
			}
			custom_effect_tooltip = GER_add_to_mitteleuropa_effects
			custom_effect_tooltip = KR_mitteleuropa_tooltip_EER
			hidden_effect = { add_ideas = GER_mitteleuropa_3 }
		}
		else_if = {
			limit = {
				GER = { has_idea = GER_mitteleuropa_empire_2 }
				NOT = {
					tag = GER
				}
			}
			custom_effect_tooltip = GER_add_to_mitteleuropa_effects
			custom_effect_tooltip = KR_mitteleuropa_tooltip_europarat
			hidden_effect = { add_ideas = GER_mitteleuropa_2 }
		}
		else_if = {
			limit = {
				GER = { has_idea = GER_mitteleuropa_empire_1 }
				NOT = {
					tag = GER
				}
			}
			custom_effect_tooltip = GER_add_to_mitteleuropa_effects
			custom_effect_tooltip = KR_mitteleuropa_tooltip_common_currency
			hidden_effect = { add_ideas = GER_mitteleuropa_1 }
		}
	}
}

GER_remove_from_mitteleuropa = {
	if = {
		limit = { GER_is_in_mitteleuropa = yes }
		custom_effect_tooltip = GER_remove_from_mitteleuropa
		hidden_effect = {
			remove_from_array = { GER.GER_mitteleuropa_members = ROOT }
			remove_ideas = {
				GER_mitteleuropa_10
				GER_mitteleuropa_9
				GER_mitteleuropa_8
				GER_mitteleuropa_7
				GER_mitteleuropa_6
				GER_mitteleuropa_5
				GER_mitteleuropa_4
				GER_mitteleuropa_3
				GER_mitteleuropa_2
				GER_mitteleuropa_1
			}
		}
	}
}

GER_leave_mitteleuropa = {
	if = {
		limit = { GER_is_in_mitteleuropa = yes }
		GER_remove_from_mitteleuropa = yes
		country_event = germit.5
	}
}

GER_kick_from_mitteleuropa = {
	if = {
		limit = { GER_is_in_mitteleuropa = yes }
		set_country_flag = GER_kicked_from_mitteleuropa
		country_event = germit.4
	}
}

GER_increase_mitteleuropa_buff = {

	every_country = {
		if = {
			limit = {
				NOT = { tag = GER }
				GER_is_in_mitteleuropa = yes
			}
			custom_effect_tooltip = GER_increase_mittel_buff_tt
			if = {
				limit = {
					GER = { has_idea = GER_mitteleuropa_empire_10 }
				}
				hidden_effect = {
					swap_ideas = {
						remove_idea = GER_mitteleuropa_9
						add_idea = GER_mitteleuropa_10
					}
				}
			}
			else_if = {
				limit = {
					GER = { has_idea = GER_mitteleuropa_empire_9 }
				}
				hidden_effect = {
					swap_ideas = {
						remove_idea = GER_mitteleuropa_8
						add_idea = GER_mitteleuropa_9
					}
				}
			}
			else_if = {
				limit = {
					GER = { has_idea = GER_mitteleuropa_empire_8 }
				}
				hidden_effect = {
					swap_ideas = {
						remove_idea = GER_mitteleuropa_7
						add_idea = GER_mitteleuropa_8
					}
				}
			}
			else_if = {
				limit = {
					GER = { has_idea = GER_mitteleuropa_empire_7 }
				}
				hidden_effect = {
					swap_ideas = {
						remove_idea = GER_mitteleuropa_6
						add_idea = GER_mitteleuropa_7
					}
				}
			}
			else_if = {
				limit = {
					GER = { has_idea = GER_mitteleuropa_empire_6 }
				}
				hidden_effect = {
					swap_ideas = {
						remove_idea = GER_mitteleuropa_5
						add_idea = GER_mitteleuropa_6
					}
				}
			}
			else_if = {
				limit = {
					GER = { has_idea = GER_mitteleuropa_empire_5 }
				}
				hidden_effect = {
					swap_ideas = {
						remove_idea = GER_mitteleuropa_4
						add_idea = GER_mitteleuropa_5
					}
				}
			}
			else_if = {
				limit = {
					GER = { has_idea = GER_mitteleuropa_empire_4 }
				}
				hidden_effect = {
					swap_ideas = {
						remove_idea = GER_mitteleuropa_3
						add_idea = GER_mitteleuropa_4
					}
				}
			}
			else_if = {
				limit = {
					GER = { has_idea = GER_mitteleuropa_empire_3 }
				}
				hidden_effect = {
					swap_ideas = {
						remove_idea = GER_mitteleuropa_2
						add_idea = GER_mitteleuropa_3
					}
				}
			}
			else_if = {
				limit = {
					GER = { has_idea = GER_mitteleuropa_empire_2 }
				}
				hidden_effect = {
					swap_ideas = {
						remove_idea = GER_mitteleuropa_1
						add_idea = GER_mitteleuropa_2
					}
				}
			}
		}
	}
	
	if = {
		limit = {
			GER = { has_idea = GER_mitteleuropa_empire_1 }
		}
		hidden_effect = {
			swap_ideas = {
				remove_idea = GER_mitteleuropa_empire_1
				add_idea = GER_mitteleuropa_empire_2
			}
		}
	}
	else_if = {
		limit = {
			GER = { has_idea = GER_mitteleuropa_empire_2 }
		}
		hidden_effect = {
			swap_ideas = {
				remove_idea = GER_mitteleuropa_empire_2
				add_idea = GER_mitteleuropa_empire_3
			}
		}
	}
	else_if = {
		limit = {
			GER = { has_idea = GER_mitteleuropa_empire_3 }
		}
		hidden_effect = {
			swap_ideas = {
				remove_idea = GER_mitteleuropa_empire_3
				add_idea = GER_mitteleuropa_empire_4
			}
		}
	}
	else_if = {
		limit = {
			GER = { has_idea = GER_mitteleuropa_empire_4 }
		}
		hidden_effect = {
			swap_ideas = {
				remove_idea = GER_mitteleuropa_empire_4
				add_idea = GER_mitteleuropa_empire_5
			}
		}
	}
	else_if = {
		limit = {
			GER = { has_idea = GER_mitteleuropa_empire_5 }
		}
		hidden_effect = {
			swap_ideas = {
				remove_idea = GER_mitteleuropa_empire_5
				add_idea = GER_mitteleuropa_empire_6
			}
		}
	}
	else_if = {
		limit = {
			GER = { has_idea = GER_mitteleuropa_empire_6 }
		}
		hidden_effect = {
			swap_ideas = {
				remove_idea = GER_mitteleuropa_empire_6
				add_idea = GER_mitteleuropa_empire_7
			}
		}
	}
	else_if = {
		limit = {
			GER = { has_idea = GER_mitteleuropa_empire_7 }
		}
		hidden_effect = {
			swap_ideas = {
				remove_idea = GER_mitteleuropa_empire_7
				add_idea = GER_mitteleuropa_empire_8
			}
		}
	}
	else_if = {
		limit = {
			GER = { has_idea = GER_mitteleuropa_empire_8 }
		}
		hidden_effect = {
			swap_ideas = {
				remove_idea = GER_mitteleuropa_empire_8
				add_idea = GER_mitteleuropa_empire_9
			}
		}
	}
	else_if = {
		limit = {
			GER = { has_idea = GER_mitteleuropa_empire_9 }
		}
		hidden_effect = {
			swap_ideas = {
				remove_idea = GER_mitteleuropa_empire_9
				add_idea = GER_mitteleuropa_empire_10
			}
		}
	}
}

GER_decrease_mitteleuropa_buff = {

	every_country = {
		if = {
			limit = {
				NOT = { tag = GER }
				GER_is_in_mitteleuropa = yes
			}
			custom_effect_tooltip = GER_decrease_mittel_buff_tt
			if = {
				limit = {
					GER = { has_idea = GER_mitteleuropa_empire_10 }
				}
				hidden_effect = {
					swap_ideas = {
						remove_idea = GER_mitteleuropa_10
						add_idea = GER_mitteleuropa_9
					}
				}
			}
			else_if = {
				limit = {
					GER = { has_idea = GER_mitteleuropa_empire_9 }
				}
				hidden_effect = {
					swap_ideas = {
						remove_idea = GER_mitteleuropa_9
						add_idea = GER_mitteleuropa_8
					}
				}
			}
			else_if = {
				limit = {
					GER = { has_idea = GER_mitteleuropa_empire_8 }
				}
				hidden_effect = {
					swap_ideas = {
						remove_idea = GER_mitteleuropa_8
						add_idea = GER_mitteleuropa_7
					}
				}
			}
			else_if = {
				limit = {
					GER = { has_idea = GER_mitteleuropa_empire_7 }
				}
				hidden_effect = {
					swap_ideas = {
						remove_idea = GER_mitteleuropa_7
						add_idea = GER_mitteleuropa_6
					}
				}
			}
			else_if = {
				limit = {
					GER = { has_idea = GER_mitteleuropa_empire_6 }
				}
				hidden_effect = {
					swap_ideas = {
						remove_idea = GER_mitteleuropa_6
						add_idea = GER_mitteleuropa_5
					}
				}
			}
			else_if = {
				limit = {
					GER = { has_idea = GER_mitteleuropa_empire_5 }
				}
				hidden_effect = {
					swap_ideas = {
						remove_idea = GER_mitteleuropa_5
						add_idea = GER_mitteleuropa_4
					}
				}
			}
			else_if = {
				limit = {
					GER = { has_idea = GER_mitteleuropa_empire_4 }
				}
				hidden_effect = {
					swap_ideas = {
						remove_idea = GER_mitteleuropa_4
						add_idea = GER_mitteleuropa_3
					}
				}
			}
			else_if = {
				limit = {
					GER = { has_idea = GER_mitteleuropa_empire_3 }
				}
				hidden_effect = {
					swap_ideas = {
						remove_idea = GER_mitteleuropa_3
						add_idea = GER_mitteleuropa_2
					}
				}
			}
			else_if = {
				limit = {
					GER = { has_idea = GER_mitteleuropa_empire_2 }
				}
				hidden_effect = {
					swap_ideas = {
						remove_idea = GER_mitteleuropa_2
						add_idea = GER_mitteleuropa_1
					}
				}
			}
		}
	}

	if = {
		limit = {
			GER = { has_idea = GER_mitteleuropa_empire_10 }
		}
		hidden_effect = {
			swap_ideas = {
				remove_idea = GER_mitteleuropa_empire_10
				add_idea = GER_mitteleuropa_empire_9
			}
		}
	}
	else_if = {
		limit = {
			GER = { has_idea = GER_mitteleuropa_empire_9 }
		}
		hidden_effect = {
			swap_ideas = {
				remove_idea = GER_mitteleuropa_empire_9
				add_idea = GER_mitteleuropa_empire_8
			}
		}
	}
	else_if = {
		limit = {
			GER = { has_idea = GER_mitteleuropa_empire_8 }
		}
		hidden_effect = {
			swap_ideas = {
				remove_idea = GER_mitteleuropa_empire_8
				add_idea = GER_mitteleuropa_empire_7
			}
		}
	}
	else_if = {
		limit = {
			GER = { has_idea = GER_mitteleuropa_empire_7 }
		}
		hidden_effect = {
			swap_ideas = {
				remove_idea = GER_mitteleuropa_empire_7
				add_idea = GER_mitteleuropa_empire_6
			}
		}
	}
	else_if = {
		limit = {
			GER = { has_idea = GER_mitteleuropa_empire_6 }
		}
		hidden_effect = {
			swap_ideas = {
				remove_idea = GER_mitteleuropa_empire_6
				add_idea = GER_mitteleuropa_empire_5
			}
		}
	}
	else_if = {
		limit = {
			GER = { has_idea = GER_mitteleuropa_empire_5 }
		}
		hidden_effect = {
			swap_ideas = {
				remove_idea = GER_mitteleuropa_empire_5
				add_idea = GER_mitteleuropa_empire_4
			}
		}
	}
	else_if = {
		limit = {
			GER = { has_idea = GER_mitteleuropa_empire_4 }
		}
		hidden_effect = {
			swap_ideas = {
				remove_idea = GER_mitteleuropa_empire_4
				add_idea = GER_mitteleuropa_empire_3
			}
		}
	}
	else_if = {
		limit = {
			GER = { has_idea = GER_mitteleuropa_empire_3 }
		}
		hidden_effect = {
			swap_ideas = {
				remove_idea = GER_mitteleuropa_empire_3
				add_idea = GER_mitteleuropa_empire_2
			}
		}
	}
	else_if = {
		limit = {
			GER = { has_idea = GER_mitteleuropa_empire_2 }
		}
		hidden_effect = {
			swap_ideas = {
				remove_idea = GER_mitteleuropa_empire_2
				add_idea = GER_mitteleuropa_empire_1
			}
		}
	}

}

GER_recalculate_mitteleuropa_effects = {
	clamp_variable = {
		var = GER_mitteleuropa_strength_var
		min = -50
		max = 50
	}

	set_temp_variable = { GER_mitteleuropa_positive_factor = GER_mitteleuropa_strength_var }
#	if = {
#		limit = {
#		
#			check_variable = {
#				var = GER_mitteleuropa_strength_var
#				value = 50
#				compare = greater_than_or_equals
#			}
#		}
#		multiply_temp_variable = { GER_mitteleuropa_positive_factor = 0.02 }
#	}
	#if = {
		#limit = {
			#check_variable = {
			#	var = GER_mitteleuropa_strength_var
			#	value = 49
			#	compare = less_than_or_equals
			#}
		#}
		#multiply_temp_variable = { GER_mitteleuropa_positive_factor = -0.02 }
	#}
	
	multiply_temp_variable = { GER_mitteleuropa_positive_factor = 0.02 }
	
	set_variable = { GER.GER_mitteleuropa_strength_display_var = 50 }
	add_to_variable = {
			var = GER.GER_mitteleuropa_strength_display_var
			value = GER.GER_mitteleuropa_strength_var
	}

	set_variable = { GER.GER_mitteleuropa_political_power = 0.4 }
	set_variable = { GER.GER_mitteleuropa_stability = 0.25 }
	set_variable = { GER.GER_mitteleuropa_construction_speed = 0.25 }
	set_variable = { GER.GER_mitteleuropa_recruitable_pop = 0.25 }
	set_variable = { GER.GER_mitteleuropa_research_speed = 0.1 }
	set_variable = { GER.GER_mitteleuropa_max_efficiency = 0.25 }
	set_variable = { GER.GER_mitteleuropa_factory_output = 0.25 }
	multiply_variable = { GER.GER_mitteleuropa_political_power = GER_mitteleuropa_positive_factor }
	multiply_variable = { GER.GER_mitteleuropa_stability = GER_mitteleuropa_positive_factor }
	multiply_variable = { GER.GER_mitteleuropa_construction_speed = GER_mitteleuropa_positive_factor }
	multiply_variable = { GER.GER_mitteleuropa_recruitable_pop = GER_mitteleuropa_positive_factor }
	multiply_variable = { GER.GER_mitteleuropa_research_speed = GER_mitteleuropa_positive_factor }
	multiply_variable = { GER.GER_mitteleuropa_max_efficiency = GER_mitteleuropa_positive_factor }
	multiply_variable = { GER.GER_mitteleuropa_factory_output = GER_mitteleuropa_positive_factor }
	
	if = {
		limit = { has_country_flag = GER_Birds_Free_flag }
		add_to_variable = { GER.GER_mitteleuropa_stability = 0.05 }
		add_to_variable = { GER.GER_mitteleuropa_political_power = 0.1 }
	}
	
	if = {
		limit = { has_country_flag = GER_Fatherland_Guides_flag }
		add_to_variable = { GER.GER_mitteleuropa_construction_speed = 0.05 }
		add_to_variable = { GER.GER_mitteleuropa_factory_output = 0.03 }
		add_to_variable = { GER.GER_mitteleuropa_political_power = -0.1 }
	}
	
	if = {
		limit = { has_country_flag = GER_mitteleuropa_high_tariffs }
		add_to_variable = { GER.GER_mitteleuropa_stability = 0.03 }
		add_to_variable = { GER.GER_mitteleuropa_max_efficiency = 0.05 }
		add_to_variable = { GER.GER_mitteleuropa_research_speed = -0.04 }
	}
	
	if = {
		limit = { has_country_flag = GER_mitteleuropa_modest_tariffs }
		add_to_variable = { GER.GER_mitteleuropa_stability = 0.03 }
		add_to_variable = { GER.GER_mitteleuropa_political_power = -0.03 }
		add_to_variable = { GER.GER_mitteleuropa_factory_output = 0.02 }
	}
	
	if = {
		limit = { has_country_flag = GER_mitteleuropa_low_tariffs }
		add_to_variable = { GER.GER_mitteleuropa_stability = -0.05 }
		add_to_variable = { GER.GER_mitteleuropa_political_power = -0.15 }
		add_to_variable = { GER.GER_mitteleuropa_construction_speed = 0.06 }
		add_to_variable = { GER.GER_mitteleuropa_factory_output = 0.08 }
	}
	
	if = {
		limit = { has_country_flag = GER_Mitteleuropan_Army_flag }
		add_to_variable = { GER.GER_mitteleuropa_recruitable_pop = 0.1 }
	}
	
	if = {
		limit = { has_country_flag = GER_Europa_der_Nationen_flag } #WIP
		add_to_variable = { GER.GER_mitteleuropa_factory_output = -0.12 }
		add_to_variable = { GER.GER_mitteleuropa_recruitable_pop = -0.08 }
		add_to_variable = { GER.GER_mitteleuropa_political_power = -0.08 }
	}
	
	if = {
		limit = { has_country_flag = GER_All_Roads_Lead_to_Berlin_flag } #WIP
		add_to_variable = { GER.GER_mitteleuropa_factory_output = 0.1 }
		add_to_variable = { GER.GER_mitteleuropa_research_speed = 0.06 }
		add_to_variable = { GER.GER_mitteleuropa_construction_speed = 0.08 }
	}

}

GER_electoral_reform_effect = {

	set_variable = { GER.GER_electoral_political_power = 0.02 }
	set_variable = { GER.GER_electoral_stability = 0.0 }
	set_variable = { GER.GER_electoral_war_support = 0.0 }
	set_variable = { GER.GER_electoral_construction_speed = 0.0 }
	set_variable = { GER.GER_electoral_research_speed = 0.0 }
	set_variable = { GER.GER_electoral_factory_output = 0.0 }
	set_variable = { GER.GER_electoral_recruitable_pop = 0.0 }
	set_variable = { GER.GER_electoral_drift_defense = 0.0 }
	set_variable = { GER.GER_electoral_max_factories = 0.0 }
	set_variable = { GER.GER_electoral_local_resources = 0.0 }
	set_variable = { GER.GER_electoral_monthly_population = 0.0 }

	if = {
		limit = { has_country_flag = GER_reactionary_voting }
		add_to_variable = { GER.GER_electoral_construction_speed = 0.03 }
		add_to_variable = { GER.GER_electoral_stability = -0.03 }
		add_to_variable = { GER.GER_electoral_recruitable_pop = 0.05 }
	}
	
	else_if = {
		limit = { has_country_flag = GER_conservative_voting }
		add_to_variable = { GER.GER_electoral_political_power = 0.05 }
		add_to_variable = { GER.GER_electoral_stability = 0.05 }
		add_to_variable = { GER.GER_electoral_research_speed = 0.02 }
	}
	
	else_if = {
		limit = { has_country_flag = GER_liberal_voting }
		add_to_variable = { GER.GER_electoral_war_support = -0.05 }
		add_to_variable = { GER.GER_electoral_stability = 0.02 }
		add_to_variable = { GER.GER_electoral_factory_output = 0.04 }
	}
}

GER_cartel_modifier_effect = {

	set_variable = { GER.GER_cartels_monthly_population = 0.0 }
	set_variable = { GER.GER_cartels_research_speed = 0.0 }
	set_variable = { GER.GER_cartels_local_resources = 0.0 }
	set_variable = { GER.GER_cartels_political_power = 0.05 }
	set_variable = { GER.GER_cartels_stability = 0.02 }
	set_variable = { GER.GER_cartels_war_support = 0.02 }
	set_variable = { GER.GER_cartels_supply_consumption = 0.0 }
	set_variable = { GER.GER_cartels_consumer_goods = 0.10 }
	set_variable = { GER.GER_cartels_building_slots = 0.0 }
	set_variable = { GER.GER_cartels_factory_output = 0.05 }
	set_variable = { GER.GER_cartels_production_oil = 0.0 }
	set_variable = { GER.GER_cartels_construction_speed = 0.0 }
	set_variable = { GER.GER_cartels_efficiency_gain = 0.0 }
	set_variable = { GER.GER_cartels_efficiency_max = 0.0 }
	set_variable = { GER.GER_cartels_efficiency_retention = 0.0 }
	set_variable = { GER.GER_cartels_lack_resource_penalty = 0.0 }
	
}

GER_wilhelm_ii_dies = {
	create_country_leader = {
		name = "Wilhelm III"
		desc = "POLITICS_WILLY_3_DESC"
		picture = "gfx/leaders/GER/Portrait_Germany_Wilhelm_III.png"
		expire = "1.1.1"
		ideology = revisionist_marxism_subtype
	}
	create_country_leader = {
		name = "Wilhelm III"
		desc = "POLITICS_WILLY_3_DESC"
		picture = "gfx/leaders/GER/Portrait_Germany_Wilhelm_III.png"
		expire = "1.1.1"
		ideology = centrist_subtype
	}
	create_country_leader = {
		name = "Wilhelm III"
		desc = "POLITICS_WILLY_3_DESC"
		picture = "gfx/leaders/GER/Portrait_Germany_Wilhelm_III.png"
		expire = "1.1.1"
		ideology = marlib_national_liberalism_subtype
	}
	create_country_leader = {
		name = "Wilhelm III"
		desc = "POLITICS_WILLY_3_DESC"
		picture = "gfx/leaders/GER/Portrait_Germany_Wilhelm_III.png"
		expire = "1.1.1"
		ideology = christian_democracy_subtype
	}
	create_country_leader = {
		name = "Wilhelm III"
		desc = "POLITICS_WILLY_3_DESC"
		picture = "gfx/leaders/GER/Portrait_Germany_Wilhelm_III.png"
		expire = "1.1.1"
		ideology = prussian_constitutionalism_subtype
	}
	create_country_leader = {
		name = "Wilhelm III"
		desc = "POLITICS_WILLY_3_DESC"
		picture = "gfx/leaders/GER/Portrait_Germany_Wilhelm_III.png"
		expire = "1.1.1"
		ideology = paternal_autocrat_subtype
	}
	create_country_leader = {
		name = "Wilhelm III"
		desc = "POLITICS_WILLY_3_DESC"
		picture = "gfx/leaders/GER/Portrait_Germany_Wilhelm_III.png"
		expire = "1.1.1"
		ideology = national_populist_subtype
	}
	set_global_flag = Wilhelm_II_Dead
	if = {
		limit = {
			LEP = {
				has_country_leader = {
					name = "Weilian"
					ruling_only = yes
				}
			}
		}
		LEP = {
			AOG_wilhelm_ii_dies = yes
		}
	}
	if = {
		limit = {
			MAF = {
				has_country_leader = {
					name = "Wilhelm I"
					ruling_only = yes
				}
			}
		}
		MAF = {
			MAF_wilhelm_ii_dies = yes
		}
	}
	if = {
		limit = {
			KTX = {
				has_country_leader = {
					name = "Wilhelm II"
					ruling_only = yes
				}
			}
		}
		KTX = {
			TXS_wilhelm_ii_dies = yes
		}
	}
	if = {
		limit = {
			DKB = {
				has_country_leader = {
					name = "Vilgelm I"
					ruling_only = yes
				}
			}
		}
		DKB = {
			country_event = germans.23
		}
	}
}

create_socialist_german_government = {
	set_politics = {
		ruling_party = radical_socialist
		last_election = "1936.1.1"
		election_frequency = 48
		elections_allowed = no
	}
	hidden_effect = {
		set_popularities = {
			totalist = 3
			syndicalist = 10
			radical_socialist = 35
			social_democrat = 16
			social_liberal = 6
			market_liberal = 2
			social_conservative = 14
			authoritarian_democrat = 9
			paternal_autocrat = 0
			national_populist = 5
		}
		hidden_effect = {
			remove_all_ministers = yes
			set_puppet_minister = yes
		}
	}
}
create_leftist_democratic_german_government= {
	set_politics = {
		ruling_party = social_democrat
		last_election = "1936.1.1"
		election_frequency = 48
		elections_allowed = no
	}
	hidden_effect = {
		set_popularities = {
			totalist = 0
			syndicalist = 0
			radical_socialist = 5
			social_democrat = 40
			social_liberal = 9
			market_liberal = 6
			social_conservative = 15
			authoritarian_democrat = 18
			paternal_autocrat = 2
			national_populist = 5
		}
		hidden_effect = {
			remove_all_ministers = yes
			set_puppet_minister = yes
		}
	}
}
create_leftliberal_democratic_german_government= {
	set_politics = {
		ruling_party = social_liberal
		last_election = "1936.1.1"
		election_frequency = 48
		elections_allowed = no
	}
	hidden_effect = {
		set_popularities = {
			totalist = 0
			syndicalist = 0
			radical_socialist = 0
			social_democrat = 19
			social_liberal = 40
			market_liberal = 6
			social_conservative = 17
			authoritarian_democrat = 11
			paternal_autocrat = 2
			national_populist = 5
		}
		hidden_effect = {
			remove_all_ministers = yes
			set_puppet_minister = yes
		}
	}
}
create_natliberal_democratic_german_government= {
	set_politics = {
		ruling_party = market_liberal
		last_election = "1936.1.1"
		election_frequency = 48
		elections_allowed = no
	}
	hidden_effect = {
		set_popularities = {
			totalist = 0
			syndicalist = 0
			radical_socialist = 0
			social_democrat = 19
			social_liberal = 6
			market_liberal = 40
			social_conservative = 17
			authoritarian_democrat = 11
			paternal_autocrat = 2
			national_populist = 5
		}
		hidden_effect = {
			remove_all_ministers = yes
			set_puppet_minister = yes
		}
	}
}
create_centrist_democratic_german_government= {
	set_politics = {
		ruling_party = social_conservative
		last_election = "1936.1.1"
		election_frequency = 48
		elections_allowed = no
	}
	hidden_effect = {
		set_popularities = {
			totalist = 0
			syndicalist = 0
			radical_socialist = 0
			social_democrat = 19
			social_liberal = 3
			market_liberal = 9
			social_conservative = 45
			authoritarian_democrat = 17
			paternal_autocrat = 2
			national_populist = 5
		}
		hidden_effect = {
			remove_all_ministers = yes
			set_puppet_minister = yes
		}
	}
}
create_rightist_democratic_german_government= {
	set_politics = {
		ruling_party = authoritarian_democrat
		last_election = "1936.1.1"
		election_frequency = 48
		elections_allowed = no
	}
	hidden_effect = {
		set_popularities = {
			totalist = 0
			syndicalist = 0
			radical_socialist = 0
			social_democrat = 19
			social_liberal = 3
			market_liberal = 9
			social_conservative = 17
			authoritarian_democrat = 45
			paternal_autocrat = 2
			national_populist = 5
		}
		hidden_effect = {
			remove_all_ministers = yes
			set_puppet_minister = yes
		}
	}
}
create_autocratic_german_government = {
	set_politics = {
		ruling_party = paternal_autocrat
		last_election = "1936.1.1"
		election_frequency = 48
		elections_allowed = no
	}
	hidden_effect = {
		set_popularities = {
			totalist = 0
			syndicalist = 0
			radical_socialist = 0
			social_democrat = 18
			social_liberal = 3
			market_liberal = 6
			social_conservative = 12
			authoritarian_democrat = 16
			paternal_autocrat = 42
			national_populist = 3
		}
		hidden_effect = {
			remove_all_ministers = yes
			set_puppet_minister = yes
		}
	}
}

MAF_wilhelm_ii_dies = {
	create_country_leader = {
		name = "Wilhelm II"
		picture = "gfx/leaders/MAF/Portrait_Mittelafrika_Wilhelm_III.png"
		expire = "1.1.1"
		ideology = socdem_colonial_govt_subtype
	}
	create_country_leader = {
		name = "Wilhelm II"
		picture = "gfx/leaders/MAF/Portrait_Mittelafrika_Wilhelm_III.png"
		expire = "1.1.1"
		ideology = soclib_colonial_govt_subtype
	}
	create_country_leader = {
		name = "Wilhelm II"
		picture = "gfx/leaders/MAF/Portrait_Mittelafrika_Wilhelm_III.png"
		expire = "1.1.1"
		ideology = marlib_colonial_govt_subtype
	}
	create_country_leader = {
		name = "Wilhelm II"
		picture = "gfx/leaders/MAF/Portrait_Mittelafrika_Wilhelm_III.png"
		expire = "1.1.1"
		ideology = soccon_prussian_constitutionalism_subtype
	}
	create_country_leader = {
		name = "Wilhelm II"
		picture = "gfx/leaders/MAF/Portrait_Mittelafrika_Wilhelm_III.png"
		expire = "1.1.1"
		ideology = prussian_constitutionalism_subtype
	}
	create_country_leader = {
		name = "Wilhelm II"
		picture = "gfx/leaders/MAF/Portrait_Mittelafrika_Wilhelm_III.png"
		expire = "1.1.1"
		ideology = autocratic_colonial_govt_subtype
	}
}

AOG_wilhelm_ii_dies = {
	if = {
		limit = {
			has_completed_focus = LEP_krupp_victory
			has_global_flag = Wilhelm_II_Dead
		}
		clr_country_flag = AOG_willyii_gang
		create_country_leader = {
			name = "Weilian "
			picture = "gfx/leaders/AOG/Portrait_AOG_Wilhelm_III.png"
			expire = "1.1.1"
			ideology = corporatocracy_subtype
		}
		create_country_leader = {
			name = "Weilian "
			picture = "gfx/leaders/AOG/Portrait_AOG_Wilhelm_III.png"
			expire = "1.1.1"
			ideology = oligarchy_subtype
		}
	}
	else_if = {
		limit = { has_global_flag = Wilhelm_II_Dead }
		clr_country_flag = AOG_willyii_gang
		create_country_leader = {
			name = "Weilian "
			picture = "gfx/leaders/AOG/Portrait_AOG_Wilhelm_III.png"
			expire = "1.1.1"
			ideology = prussian_constitutionalism_subtype
		}
		create_country_leader = {
			name = "Weilian "
			picture = "gfx/leaders/AOG/Portrait_AOG_Wilhelm_III.png"
			expire = "1.1.1"
			ideology = absolute_monarchy_subtype
		}
	}
}

TXS_wilhelm_ii_dies = {
	create_country_leader = {
		name = "Wilhelm III"
		desc = "POLITICS_WILLY_3_DESC"
		picture = "gfx/leaders/TXS/Portrait_Texas_Wilhelm_III.png"
		expire = "1.1.1"
		ideology = prussian_constitutionalism_subtype
	}
	create_country_leader = {
		name = "Wilhelm III"
		desc = "POLITICS_WILLY_3_DESC"
		picture = "gfx/leaders/TXS/Portrait_Texas_Wilhelm_III.png"
		expire = "1.1.1"
		ideology = absolute_monarchy_subtype
	}
}

Hohenstaufen_click_effect = {
	if = {
		limit = {
			NOT = {
				has_country_flag = HOHENSTAUFEN_OPEN
			}
		}
		set_country_flag = HOHENSTAUFEN_OPEN
		clr_country_flag = ARMINIUS_OPEN
		clr_country_flag = BRUNHILDE_OPEN
		clr_country_flag = GOTTERDAMMERUNG_OPEN
	}
	
	else_if = {
		limit = {
			has_country_flag = HOHENSTAUFEN_OPEN
		}
		clr_country_flag = HOHENSTAUFEN_OPEN
	}
}

Arminius_click_effect = {
	if = {
		limit = {
			NOT = {
				has_country_flag = ARMINIUS_OPEN
			}
		}
		set_country_flag = ARMINIUS_OPEN
		clr_country_flag = HOHENSTAUFEN_OPEN
		clr_country_flag = BRUNHILDE_OPEN
		clr_country_flag = GOTTERDAMMERUNG_OPEN
	}
	
	else_if = {
		limit = {
			has_country_flag = ARMINIUS_OPEN
		}
		clr_country_flag = ARMINIUS_OPEN
	}
}

Brunhilde_click_effect = {
	if = {
		limit = {
			NOT = {
				has_country_flag = BRUNHILDE_OPEN
			}
		}
		set_country_flag = BRUNHILDE_OPEN
		clr_country_flag = HOHENSTAUFEN_OPEN
		clr_country_flag = ARMINIUS_OPEN
		clr_country_flag = GOTTERDAMMERUNG_OPEN
	}
	
	else_if = {
		limit = {
			has_country_flag = BRUNHILDE_OPEN
		}
		clr_country_flag = BRUNHILDE_OPEN
	}
}

Gotterdammerung_click_effect = {
	if = {
		limit = {
			NOT = {
				has_country_flag = GOTTERDAMMERUNG_OPEN
			}
		}
		set_country_flag = GOTTERDAMMERUNG_OPEN
		clr_country_flag = HOHENSTAUFEN_OPEN
		clr_country_flag = BRUNHILDE_OPEN
		clr_country_flag = ARMINIUS_OPEN
	}
	
	else_if = {
		limit = {
			has_country_flag = GOTTERDAMMERUNG_OPEN
		}
		clr_country_flag = GOTTERDAMMERUNG_OPEN
	}
}

Mitteleuropa_Arrow_Right_click_effect = {
	if = {
		limit = {
			has_country_flag = GER_Mitteleuropa_OpenRegion_EuropeWest
		}
		
		clr_country_flag = GER_Mitteleuropa_OpenRegion_EuropeWest
		clr_country_flag = GER_Mitteleuropa_OpenSubregion_Benelux
		clr_country_flag = GER_Mitteleuropa_OpenSubregion_Britain
		clr_country_flag = GER_Mitteleuropa_OpenSubregion_France
		clr_country_flag = GER_Mitteleuropa_OpenSubregion_Germany
		clr_country_flag = GER_Mitteleuropa_OpenSubregion_Iberia
		clr_country_flag = GER_Mitteleuropa_OpenSubregion_Italy
		clr_country_flag = GER_Mitteleuropa_OpenSubregion_Scandinavia
		set_country_flag = GER_Mitteleuropa_OpenRegion_EuropeEast
	}
	
	else_if = {
		limit = {
			has_country_flag = GER_Mitteleuropa_OpenRegion_EuropeEast
		}
		
		clr_country_flag = GER_Mitteleuropa_OpenRegion_EuropeEast
		clr_country_flag = GER_Mitteleuropa_OpenSubregion_Anatolia
		clr_country_flag = GER_Mitteleuropa_OpenSubregion_Balkans
		clr_country_flag = GER_Mitteleuropa_OpenSubregion_Caucasia
		clr_country_flag = GER_Mitteleuropa_OpenSubregion_Habsburgs
		clr_country_flag = GER_Mitteleuropa_OpenSubregion_Oststaats
		clr_country_flag = GER_Mitteleuropa_OpenSubregion_Russia
		clr_country_flag = GER_Mitteleuropa_OpenSubregion_Ukraine
		set_country_flag = GER_Mitteleuropa_OpenRegion_Africa
	}
	
	else_if = {
		limit = {
			has_country_flag = GER_Mitteleuropa_OpenRegion_Africa
		}
		
		clr_country_flag = GER_Mitteleuropa_OpenRegion_Africa
		clr_country_flag = GER_Mitteleuropa_OpenSubregion_Abyssinia
		clr_country_flag = GER_Mitteleuropa_OpenSubregion_Cape
		clr_country_flag = GER_Mitteleuropa_OpenSubregion_Egypt
		clr_country_flag = GER_Mitteleuropa_OpenSubregion_Francafrique
		clr_country_flag = GER_Mitteleuropa_OpenSubregion_Mittelafrika
		clr_country_flag = GER_Mitteleuropa_OpenSubregion_Morocco
		clr_country_flag = GER_Mitteleuropa_OpenSubregion_Near_East
		set_country_flag = GER_Mitteleuropa_OpenRegion_Asia
	}
	
	else_if = {
		limit = {
			has_country_flag = GER_Mitteleuropa_OpenRegion_Asia
		}
		
		clr_country_flag = GER_Mitteleuropa_OpenRegion_Asia
		clr_country_flag = GER_Mitteleuropa_OpenSubregion_Central_Asia
		clr_country_flag = GER_Mitteleuropa_OpenSubregion_China
		clr_country_flag = GER_Mitteleuropa_OpenSubregion_Japan
		clr_country_flag = GER_Mitteleuropa_OpenSubregion_Mongolia
		clr_country_flag = GER_Mitteleuropa_OpenSubregion_Persia
		clr_country_flag = GER_Mitteleuropa_OpenSubregion_South_Asia
		set_country_flag = GER_Mitteleuropa_OpenRegion_SundalandOceania
	}
	
	else_if = {
		limit = {
			has_country_flag = GER_Mitteleuropa_OpenRegion_SundalandOceania
		}
		
		clr_country_flag = GER_Mitteleuropa_OpenRegion_SundalandOceania
		clr_country_flag = GER_Mitteleuropa_OpenSubregion_Australasia
		clr_country_flag = GER_Mitteleuropa_OpenSubregion_Ostasia
		set_country_flag = GER_Mitteleuropa_OpenRegion_NorthAmerica
	}
	
	else_if = {
		limit = {
			has_country_flag = GER_Mitteleuropa_OpenRegion_NorthAmerica
		}
	
		clr_country_flag = GER_Mitteleuropa_OpenRegion_NorthAmerica
		clr_country_flag = GER_Mitteleuropa_OpenSubregion_Canada
		clr_country_flag = GER_Mitteleuropa_OpenSubregion_Caribbean
		clr_country_flag = GER_Mitteleuropa_OpenSubregion_Central_America
		clr_country_flag = GER_Mitteleuropa_OpenSubregion_Mexico
		clr_country_flag = GER_Mitteleuropa_OpenSubregion_USA
		set_country_flag = GER_Mitteleuropa_OpenRegion_SouthAmerica
	}
	
	else_if = {
		limit = {
			has_country_flag = GER_Mitteleuropa_OpenRegion_SouthAmerica
		}
		
		clr_country_flag = GER_Mitteleuropa_OpenRegion_SouthAmerica
		clr_country_flag = GER_Mitteleuropa_OpenSubregion_Brazil
		clr_country_flag = GER_Mitteleuropa_OpenSubregion_Gran_Colombia
		clr_country_flag = GER_Mitteleuropa_OpenSubregion_La_Plata
		clr_country_flag = GER_Mitteleuropa_OpenSubregion_Peru_Bolivia
		set_country_flag = GER_Mitteleuropa_OpenRegion_EuropeWest
	}
}

Mitteleuropa_Arrow_Left_click_effect = {

	if = {
		limit = {
			has_country_flag = GER_Mitteleuropa_OpenRegion_EuropeWest
		}
		
		clr_country_flag = GER_Mitteleuropa_OpenRegion_EuropeWest
		clr_country_flag = GER_Mitteleuropa_OpenSubregion_Benelux
		clr_country_flag = GER_Mitteleuropa_OpenSubregion_Britain
		clr_country_flag = GER_Mitteleuropa_OpenSubregion_France
		clr_country_flag = GER_Mitteleuropa_OpenSubregion_Germany
		clr_country_flag = GER_Mitteleuropa_OpenSubregion_Iberia
		clr_country_flag = GER_Mitteleuropa_OpenSubregion_Italy
		clr_country_flag = GER_Mitteleuropa_OpenSubregion_Scandinavia
		set_country_flag = GER_Mitteleuropa_OpenRegion_SouthAmerica
	}
	
	else_if = {
		limit = {
			has_country_flag = GER_Mitteleuropa_OpenRegion_SouthAmerica
		}
		
		clr_country_flag = GER_Mitteleuropa_OpenRegion_SouthAmerica
		clr_country_flag = GER_Mitteleuropa_OpenSubregion_Brazil
		clr_country_flag = GER_Mitteleuropa_OpenSubregion_Gran_Colombia
		clr_country_flag = GER_Mitteleuropa_OpenSubregion_La_Plata
		clr_country_flag = GER_Mitteleuropa_OpenSubregion_Peru_Bolivia
		set_country_flag = GER_Mitteleuropa_OpenRegion_NorthAmerica
	}
	
	else_if = {
		limit = {
			has_country_flag = GER_Mitteleuropa_OpenRegion_NorthAmerica
		}
		
		clr_country_flag = GER_Mitteleuropa_OpenRegion_NorthAmerica
		clr_country_flag = GER_Mitteleuropa_OpenSubregion_Canada
		clr_country_flag = GER_Mitteleuropa_OpenSubregion_Caribbean
		clr_country_flag = GER_Mitteleuropa_OpenSubregion_Central_America
		clr_country_flag = GER_Mitteleuropa_OpenSubregion_Mexico
		clr_country_flag = GER_Mitteleuropa_OpenSubregion_USA
		set_country_flag = GER_Mitteleuropa_OpenRegion_SundalandOceania
	}
	
	else_if = {
		limit = {
			has_country_flag = GER_Mitteleuropa_OpenRegion_SundalandOceania
		}
		
		clr_country_flag = GER_Mitteleuropa_OpenRegion_SundalandOceania
		clr_country_flag = GER_Mitteleuropa_OpenSubregion_Australasia
		clr_country_flag = GER_Mitteleuropa_OpenSubregion_Ostasia
		set_country_flag = GER_Mitteleuropa_OpenRegion_Asia
	}
	
	else_if = {
		limit = {
			has_country_flag = GER_Mitteleuropa_OpenRegion_Asia
		}
		
		clr_country_flag = GER_Mitteleuropa_OpenRegion_Asia
		clr_country_flag = GER_Mitteleuropa_OpenSubregion_Central_Asia
		clr_country_flag = GER_Mitteleuropa_OpenSubregion_China
		clr_country_flag = GER_Mitteleuropa_OpenSubregion_Japan
		clr_country_flag = GER_Mitteleuropa_OpenSubregion_Mongolia
		clr_country_flag = GER_Mitteleuropa_OpenSubregion_Persia
		clr_country_flag = GER_Mitteleuropa_OpenSubregion_South_Asia
		set_country_flag = GER_Mitteleuropa_OpenRegion_Africa
	}
	
	else_if = {
		limit = {
			has_country_flag = GER_Mitteleuropa_OpenRegion_Africa
		}
		
		clr_country_flag = GER_Mitteleuropa_OpenRegion_Africa
		clr_country_flag = GER_Mitteleuropa_OpenSubregion_Abyssinia
		clr_country_flag = GER_Mitteleuropa_OpenSubregion_Cape
		clr_country_flag = GER_Mitteleuropa_OpenSubregion_Egypt
		clr_country_flag = GER_Mitteleuropa_OpenSubregion_Francafrique
		clr_country_flag = GER_Mitteleuropa_OpenSubregion_Mittelafrika
		clr_country_flag = GER_Mitteleuropa_OpenSubregion_Morocco
		clr_country_flag = GER_Mitteleuropa_OpenSubregion_Near_East
		set_country_flag = GER_Mitteleuropa_OpenRegion_EuropeEast
	}
	
	else_if = {
		limit = {
			has_country_flag = GER_Mitteleuropa_OpenRegion_EuropeEast
		}
		
		clr_country_flag = GER_Mitteleuropa_OpenRegion_EuropeEast
		clr_country_flag = GER_Mitteleuropa_OpenSubregion_Anatolia
		clr_country_flag = GER_Mitteleuropa_OpenSubregion_Balkans
		clr_country_flag = GER_Mitteleuropa_OpenSubregion_Caucasia
		clr_country_flag = GER_Mitteleuropa_OpenSubregion_Habsburgs
		clr_country_flag = GER_Mitteleuropa_OpenSubregion_Oststaats
		clr_country_flag = GER_Mitteleuropa_OpenSubregion_Russia
		clr_country_flag = GER_Mitteleuropa_OpenSubregion_Ukraine
		set_country_flag = GER_Mitteleuropa_OpenRegion_EuropeWest
	}
}

Mitteleuropa_Subregion_Europe_West_Benelux_click_effect = {
	clr_country_flag = GER_Mitteleuropa_OpenSubregion_Britain
	clr_country_flag = GER_Mitteleuropa_OpenSubregion_France
	clr_country_flag = GER_Mitteleuropa_OpenSubregion_Germany
	clr_country_flag = GER_Mitteleuropa_OpenSubregion_Iberia
	clr_country_flag = GER_Mitteleuropa_OpenSubregion_Italy
	clr_country_flag = GER_Mitteleuropa_OpenSubregion_Scandinavia
	set_country_flag = GER_Mitteleuropa_OpenSubregion_Benelux
}

Mitteleuropa_Subregion_Europe_West_Britain_click_effect = {
	clr_country_flag = GER_Mitteleuropa_OpenSubregion_Benelux
	clr_country_flag = GER_Mitteleuropa_OpenSubregion_France
	clr_country_flag = GER_Mitteleuropa_OpenSubregion_Germany
	clr_country_flag = GER_Mitteleuropa_OpenSubregion_Iberia
	clr_country_flag = GER_Mitteleuropa_OpenSubregion_Italy
	clr_country_flag = GER_Mitteleuropa_OpenSubregion_Scandinavia
	set_country_flag = GER_Mitteleuropa_OpenSubregion_Britain
}

Mitteleuropa_Subregion_Europe_West_France_click_effect = {
	clr_country_flag = GER_Mitteleuropa_OpenSubregion_Benelux
	clr_country_flag = GER_Mitteleuropa_OpenSubregion_Britain
	clr_country_flag = GER_Mitteleuropa_OpenSubregion_Germany
	clr_country_flag = GER_Mitteleuropa_OpenSubregion_Iberia
	clr_country_flag = GER_Mitteleuropa_OpenSubregion_Italy
	clr_country_flag = GER_Mitteleuropa_OpenSubregion_Scandinavia
	set_country_flag = GER_Mitteleuropa_OpenSubregion_France
}

Mitteleuropa_Subregion_Europe_West_Germany_click_effect = {
	clr_country_flag = GER_Mitteleuropa_OpenSubregion_Benelux
	clr_country_flag = GER_Mitteleuropa_OpenSubregion_Britain
	clr_country_flag = GER_Mitteleuropa_OpenSubregion_France
	clr_country_flag = GER_Mitteleuropa_OpenSubregion_Iberia
	clr_country_flag = GER_Mitteleuropa_OpenSubregion_Italy
	clr_country_flag = GER_Mitteleuropa_OpenSubregion_Scandinavia
	set_country_flag = GER_Mitteleuropa_OpenSubregion_Germany
}

Mitteleuropa_Subregion_Europe_West_Iberia_click_effect = {
	clr_country_flag = GER_Mitteleuropa_OpenSubregion_Benelux
	clr_country_flag = GER_Mitteleuropa_OpenSubregion_Britain
	clr_country_flag = GER_Mitteleuropa_OpenSubregion_France
	clr_country_flag = GER_Mitteleuropa_OpenSubregion_Germany
	clr_country_flag = GER_Mitteleuropa_OpenSubregion_Italy
	clr_country_flag = GER_Mitteleuropa_OpenSubregion_Scandinavia
	set_country_flag = GER_Mitteleuropa_OpenSubregion_Iberia
}

Mitteleuropa_Subregion_Europe_West_Italy_click_effect = {
	clr_country_flag = GER_Mitteleuropa_OpenSubregion_Benelux
	clr_country_flag = GER_Mitteleuropa_OpenSubregion_Britain
	clr_country_flag = GER_Mitteleuropa_OpenSubregion_France
	clr_country_flag = GER_Mitteleuropa_OpenSubregion_Germany
	clr_country_flag = GER_Mitteleuropa_OpenSubregion_Iberia
	clr_country_flag = GER_Mitteleuropa_OpenSubregion_Scandinavia
	set_country_flag = GER_Mitteleuropa_OpenSubregion_Italy
}

Mitteleuropa_Subregion_Europe_West_Scandinavia_click_effect = {
	clr_country_flag = GER_Mitteleuropa_OpenSubregion_Benelux
	clr_country_flag = GER_Mitteleuropa_OpenSubregion_Britain
	clr_country_flag = GER_Mitteleuropa_OpenSubregion_France
	clr_country_flag = GER_Mitteleuropa_OpenSubregion_Germany
	clr_country_flag = GER_Mitteleuropa_OpenSubregion_Iberia
	clr_country_flag = GER_Mitteleuropa_OpenSubregion_Italy
	set_country_flag = GER_Mitteleuropa_OpenSubregion_Scandinavia
}

Mitteleuropa_Subregion_Europe_East_Anatolia_click_effect = {
	clr_country_flag = GER_Mitteleuropa_OpenSubregion_Balkans
	clr_country_flag = GER_Mitteleuropa_OpenSubregion_Caucasia
	clr_country_flag = GER_Mitteleuropa_OpenSubregion_Habsburgs
	clr_country_flag = GER_Mitteleuropa_OpenSubregion_Oststaats
	clr_country_flag = GER_Mitteleuropa_OpenSubregion_Russia
	clr_country_flag = GER_Mitteleuropa_OpenSubregion_Ukraine
	set_country_flag = GER_Mitteleuropa_OpenSubregion_Anatolia
}

Mitteleuropa_Subregion_Europe_East_Balkans_click_effect = {
	clr_country_flag = GER_Mitteleuropa_OpenSubregion_Anatolia
	clr_country_flag = GER_Mitteleuropa_OpenSubregion_Caucasia
	clr_country_flag = GER_Mitteleuropa_OpenSubregion_Habsburgs
	clr_country_flag = GER_Mitteleuropa_OpenSubregion_Oststaats
	clr_country_flag = GER_Mitteleuropa_OpenSubregion_Russia
	clr_country_flag = GER_Mitteleuropa_OpenSubregion_Ukraine
	set_country_flag = GER_Mitteleuropa_OpenSubregion_Balkans
}

Mitteleuropa_Subregion_Europe_East_Caucasia_click_effect = {
	clr_country_flag = GER_Mitteleuropa_OpenSubregion_Anatolia
	clr_country_flag = GER_Mitteleuropa_OpenSubregion_Balkans
	clr_country_flag = GER_Mitteleuropa_OpenSubregion_Habsburgs
	clr_country_flag = GER_Mitteleuropa_OpenSubregion_Oststaats
	clr_country_flag = GER_Mitteleuropa_OpenSubregion_Russia
	clr_country_flag = GER_Mitteleuropa_OpenSubregion_Ukraine
	set_country_flag = GER_Mitteleuropa_OpenSubregion_Caucasia
}

Mitteleuropa_Subregion_Europe_East_Habsburgs_click_effect = {
	clr_country_flag = GER_Mitteleuropa_OpenSubregion_Anatolia
	clr_country_flag = GER_Mitteleuropa_OpenSubregion_Balkans
	clr_country_flag = GER_Mitteleuropa_OpenSubregion_Caucasia
	clr_country_flag = GER_Mitteleuropa_OpenSubregion_Oststaats
	clr_country_flag = GER_Mitteleuropa_OpenSubregion_Russia
	clr_country_flag = GER_Mitteleuropa_OpenSubregion_Ukraine
	set_country_flag = GER_Mitteleuropa_OpenSubregion_Habsburgs
}

Mitteleuropa_Subregion_Europe_East_Oststaats_click_effect = {
	clr_country_flag = GER_Mitteleuropa_OpenSubregion_Anatolia
	clr_country_flag = GER_Mitteleuropa_OpenSubregion_Balkans
	clr_country_flag = GER_Mitteleuropa_OpenSubregion_Caucasia
	clr_country_flag = GER_Mitteleuropa_OpenSubregion_Habsburgs
	clr_country_flag = GER_Mitteleuropa_OpenSubregion_Russia
	clr_country_flag = GER_Mitteleuropa_OpenSubregion_Ukraine
	set_country_flag = GER_Mitteleuropa_OpenSubregion_Oststaats
}

Mitteleuropa_Subregion_Europe_East_Russia_click_effect = {
	clr_country_flag = GER_Mitteleuropa_OpenSubregion_Anatolia
	clr_country_flag = GER_Mitteleuropa_OpenSubregion_Balkans
	clr_country_flag = GER_Mitteleuropa_OpenSubregion_Caucasia
	clr_country_flag = GER_Mitteleuropa_OpenSubregion_Habsburgs
	clr_country_flag = GER_Mitteleuropa_OpenSubregion_Oststaats
	clr_country_flag = GER_Mitteleuropa_OpenSubregion_Ukraine
	set_country_flag = GER_Mitteleuropa_OpenSubregion_Russia
}

Mitteleuropa_Subregion_Europe_East_Ukraine_click_effect = {
	clr_country_flag = GER_Mitteleuropa_OpenSubregion_Anatolia
	clr_country_flag = GER_Mitteleuropa_OpenSubregion_Balkans
	clr_country_flag = GER_Mitteleuropa_OpenSubregion_Caucasia
	clr_country_flag = GER_Mitteleuropa_OpenSubregion_Habsburgs
	clr_country_flag = GER_Mitteleuropa_OpenSubregion_Oststaats
	clr_country_flag = GER_Mitteleuropa_OpenSubregion_Russia
	set_country_flag = GER_Mitteleuropa_OpenSubregion_Ukraine
}

Mitteleuropa_Subregion_Africa_Abyssinia_click_effect = {
	clr_country_flag = GER_Mitteleuropa_OpenSubregion_Cape
	clr_country_flag = GER_Mitteleuropa_OpenSubregion_Egypt
	clr_country_flag = GER_Mitteleuropa_OpenSubregion_Francafrique
	clr_country_flag = GER_Mitteleuropa_OpenSubregion_Mittelafrika
	clr_country_flag = GER_Mitteleuropa_OpenSubregion_Morocco
	clr_country_flag = GER_Mitteleuropa_OpenSubregion_Near_East
	set_country_flag = GER_Mitteleuropa_OpenSubregion_Abyssinia
}

Mitteleuropa_Subregion_Africa_Cape_click_effect = {
	clr_country_flag = GER_Mitteleuropa_OpenSubregion_Abyssinia
	clr_country_flag = GER_Mitteleuropa_OpenSubregion_Egypt
	clr_country_flag = GER_Mitteleuropa_OpenSubregion_Francafrique
	clr_country_flag = GER_Mitteleuropa_OpenSubregion_Mittelafrika
	clr_country_flag = GER_Mitteleuropa_OpenSubregion_Morocco
	clr_country_flag = GER_Mitteleuropa_OpenSubregion_Near_East
	set_country_flag = GER_Mitteleuropa_OpenSubregion_Cape
}

Mitteleuropa_Subregion_Africa_Egypt_click_effect = {
	clr_country_flag = GER_Mitteleuropa_OpenSubregion_Abyssinia
	clr_country_flag = GER_Mitteleuropa_OpenSubregion_Cape
	clr_country_flag = GER_Mitteleuropa_OpenSubregion_Francafrique
	clr_country_flag = GER_Mitteleuropa_OpenSubregion_Mittelafrika
	clr_country_flag = GER_Mitteleuropa_OpenSubregion_Morocco
	clr_country_flag = GER_Mitteleuropa_OpenSubregion_Near_East
	set_country_flag = GER_Mitteleuropa_OpenSubregion_Egypt
}

Mitteleuropa_Subregion_Africa_Francafrique_click_effect = {
	clr_country_flag = GER_Mitteleuropa_OpenSubregion_Abyssinia
	clr_country_flag = GER_Mitteleuropa_OpenSubregion_Cape
	clr_country_flag = GER_Mitteleuropa_OpenSubregion_Egypt
	clr_country_flag = GER_Mitteleuropa_OpenSubregion_Mittelafrika
	clr_country_flag = GER_Mitteleuropa_OpenSubregion_Morocco
	clr_country_flag = GER_Mitteleuropa_OpenSubregion_Near_East
	set_country_flag = GER_Mitteleuropa_OpenSubregion_Francafrique
}

Mitteleuropa_Subregion_Africa_Mittelafrika_click_effect = {
	clr_country_flag = GER_Mitteleuropa_OpenSubregion_Abyssinia
	clr_country_flag = GER_Mitteleuropa_OpenSubregion_Cape
	clr_country_flag = GER_Mitteleuropa_OpenSubregion_Egypt
	clr_country_flag = GER_Mitteleuropa_OpenSubregion_Francafrique
	clr_country_flag = GER_Mitteleuropa_OpenSubregion_Morocco
	clr_country_flag = GER_Mitteleuropa_OpenSubregion_Near_East
	set_country_flag = GER_Mitteleuropa_OpenSubregion_Mittelafrika
}

Mitteleuropa_Subregion_Africa_Morocco_click_effect = {
	clr_country_flag = GER_Mitteleuropa_OpenSubregion_Abyssinia
	clr_country_flag = GER_Mitteleuropa_OpenSubregion_Cape
	clr_country_flag = GER_Mitteleuropa_OpenSubregion_Egypt
	clr_country_flag = GER_Mitteleuropa_OpenSubregion_Francafrique
	clr_country_flag = GER_Mitteleuropa_OpenSubregion_Mittelafrika
	clr_country_flag = GER_Mitteleuropa_OpenSubregion_Near_East
	set_country_flag = GER_Mitteleuropa_OpenSubregion_Morocco
}

Mitteleuropa_Subregion_Africa_Near_East_click_effect = {
	clr_country_flag = GER_Mitteleuropa_OpenSubregion_Abyssinia
	clr_country_flag = GER_Mitteleuropa_OpenSubregion_Cape
	clr_country_flag = GER_Mitteleuropa_OpenSubregion_Egypt
	clr_country_flag = GER_Mitteleuropa_OpenSubregion_Francafrique
	clr_country_flag = GER_Mitteleuropa_OpenSubregion_Mittelafrika
	clr_country_flag = GER_Mitteleuropa_OpenSubregion_Morocco
	set_country_flag = GER_Mitteleuropa_OpenSubregion_Near_East
}

Mitteleuropa_Subregion_Asia_Central_Asia_click_effect = {
	clr_country_flag = GER_Mitteleuropa_OpenSubregion_South_Asia
	clr_country_flag = GER_Mitteleuropa_OpenSubregion_China
	clr_country_flag = GER_Mitteleuropa_OpenSubregion_Japan
	clr_country_flag = GER_Mitteleuropa_OpenSubregion_Mongolia
	clr_country_flag = GER_Mitteleuropa_OpenSubregion_Persia
	set_country_flag = GER_Mitteleuropa_OpenSubregion_Central_Asia
}

Mitteleuropa_Subregion_Asia_China_click_effect = {
	clr_country_flag = GER_Mitteleuropa_OpenSubregion_South_Asia
	clr_country_flag = GER_Mitteleuropa_OpenSubregion_Central_Asia
	clr_country_flag = GER_Mitteleuropa_OpenSubregion_Japan
	clr_country_flag = GER_Mitteleuropa_OpenSubregion_Mongolia
	clr_country_flag = GER_Mitteleuropa_OpenSubregion_Persia
	set_country_flag = GER_Mitteleuropa_OpenSubregion_China
}

Mitteleuropa_Subregion_Asia_Japan_click_effect = {
	clr_country_flag = GER_Mitteleuropa_OpenSubregion_South_Asia
	clr_country_flag = GER_Mitteleuropa_OpenSubregion_Central_Asia
	clr_country_flag = GER_Mitteleuropa_OpenSubregion_China
	clr_country_flag = GER_Mitteleuropa_OpenSubregion_Mongolia
	clr_country_flag = GER_Mitteleuropa_OpenSubregion_Persia
	set_country_flag = GER_Mitteleuropa_OpenSubregion_Japan
}

Mitteleuropa_Subregion_Asia_Mongolia_click_effect = {
	clr_country_flag = GER_Mitteleuropa_OpenSubregion_South_Asia
	clr_country_flag = GER_Mitteleuropa_OpenSubregion_Central_Asia
	clr_country_flag = GER_Mitteleuropa_OpenSubregion_China
	clr_country_flag = GER_Mitteleuropa_OpenSubregion_Japan
	clr_country_flag = GER_Mitteleuropa_OpenSubregion_Persia
	set_country_flag = GER_Mitteleuropa_OpenSubregion_Mongolia
}

Mitteleuropa_Subregion_Asia_Persia_click_effect = {
	clr_country_flag = GER_Mitteleuropa_OpenSubregion_South_Asia
	clr_country_flag = GER_Mitteleuropa_OpenSubregion_Central_Asia
	clr_country_flag = GER_Mitteleuropa_OpenSubregion_China
	clr_country_flag = GER_Mitteleuropa_OpenSubregion_Japan
	clr_country_flag = GER_Mitteleuropa_OpenSubregion_Mongolia
	set_country_flag = GER_Mitteleuropa_OpenSubregion_Persia
}

Mitteleuropa_Subregion_Asia_South_Asia_click_effect = {
	clr_country_flag = GER_Mitteleuropa_OpenSubregion_Persia
	clr_country_flag = GER_Mitteleuropa_OpenSubregion_Central_Asia
	clr_country_flag = GER_Mitteleuropa_OpenSubregion_China
	clr_country_flag = GER_Mitteleuropa_OpenSubregion_Japan
	clr_country_flag = GER_Mitteleuropa_OpenSubregion_Mongolia
	set_country_flag = GER_Mitteleuropa_OpenSubregion_South_Asia
}

Mitteleuropa_Subregion_Sundaland_Oceania_Australasia_click_effect = {
	clr_country_flag = GER_Mitteleuropa_OpenSubregion_Ostasia
	set_country_flag = GER_Mitteleuropa_OpenSubregion_Australasia
}

Mitteleuropa_Subregion_Sundaland_Oceania_Ostasia_click_effect = {
	clr_country_flag = GER_Mitteleuropa_OpenSubregion_Australasia
	set_country_flag = GER_Mitteleuropa_OpenSubregion_Ostasia
}

Mitteleuropa_Subregion_North_America_Canada_click_effect = {
	clr_country_flag = GER_Mitteleuropa_OpenSubregion_Caribbean
	clr_country_flag = GER_Mitteleuropa_OpenSubregion_Central_America
	clr_country_flag = GER_Mitteleuropa_OpenSubregion_Mexico
	clr_country_flag = GER_Mitteleuropa_OpenSubregion_USA
	set_country_flag = GER_Mitteleuropa_OpenSubregion_Canada
}

Mitteleuropa_Subregion_North_America_Caribbean_click_effect = {
	clr_country_flag = GER_Mitteleuropa_OpenSubregion_Canada
	clr_country_flag = GER_Mitteleuropa_OpenSubregion_Central_America
	clr_country_flag = GER_Mitteleuropa_OpenSubregion_Mexico
	clr_country_flag = GER_Mitteleuropa_OpenSubregion_USA
	set_country_flag = GER_Mitteleuropa_OpenSubregion_Caribbean
}

Mitteleuropa_Subregion_North_America_Central_America_click_effect = {
	clr_country_flag = GER_Mitteleuropa_OpenSubregion_Canada
	clr_country_flag = GER_Mitteleuropa_OpenSubregion_Caribbean
	clr_country_flag = GER_Mitteleuropa_OpenSubregion_Mexico
	clr_country_flag = GER_Mitteleuropa_OpenSubregion_USA
	set_country_flag = GER_Mitteleuropa_OpenSubregion_Central_America
}

Mitteleuropa_Subregion_North_America_Mexico_click_effect = {
	clr_country_flag = GER_Mitteleuropa_OpenSubregion_Canada
	clr_country_flag = GER_Mitteleuropa_OpenSubregion_Caribbean
	clr_country_flag = GER_Mitteleuropa_OpenSubregion_Central_America
	clr_country_flag = GER_Mitteleuropa_OpenSubregion_USA
	set_country_flag = GER_Mitteleuropa_OpenSubregion_Mexico
}

Mitteleuropa_Subregion_North_America_USA_click_effect = {
	clr_country_flag = GER_Mitteleuropa_OpenSubregion_Canada
	clr_country_flag = GER_Mitteleuropa_OpenSubregion_Caribbean
	clr_country_flag = GER_Mitteleuropa_OpenSubregion_Central_America
	clr_country_flag = GER_Mitteleuropa_OpenSubregion_Mexico
	set_country_flag = GER_Mitteleuropa_OpenSubregion_USA
}

Mitteleuropa_Subregion_South_America_Brazil_click_effect = {
	clr_country_flag = GER_Mitteleuropa_OpenSubregion_Gran_Colombia
	clr_country_flag = GER_Mitteleuropa_OpenSubregion_La_Plata
	clr_country_flag = GER_Mitteleuropa_OpenSubregion_Peru_Bolivia
	set_country_flag = GER_Mitteleuropa_OpenSubregion_Brazil
}

Mitteleuropa_Subregion_South_America_Gran_Colombia_click_effect = {
	clr_country_flag = GER_Mitteleuropa_OpenSubregion_Brazil
	clr_country_flag = GER_Mitteleuropa_OpenSubregion_La_Plata
	clr_country_flag = GER_Mitteleuropa_OpenSubregion_Peru_Bolivia
	set_country_flag = GER_Mitteleuropa_OpenSubregion_Gran_Colombia
}

Mitteleuropa_Subregion_South_America_La_Plata_click_effect = {
	clr_country_flag = GER_Mitteleuropa_OpenSubregion_Brazil
	clr_country_flag = GER_Mitteleuropa_OpenSubregion_Gran_Colombia
	clr_country_flag = GER_Mitteleuropa_OpenSubregion_Peru_Bolivia
	set_country_flag = GER_Mitteleuropa_OpenSubregion_La_Plata
}

Mitteleuropa_Subregion_South_America_Peru_Bolivia_click_effect = {
	clr_country_flag = GER_Mitteleuropa_OpenSubregion_Brazil
	clr_country_flag = GER_Mitteleuropa_OpenSubregion_Gran_Colombia
	clr_country_flag = GER_Mitteleuropa_OpenSubregion_La_Plata
	set_country_flag = GER_Mitteleuropa_OpenSubregion_Peru_Bolivia
}

GER_improve_eagle_effect = {
	custom_effect_tooltip = GER_improve_eagle_effect_tt
	if = {
		limit = { has_idea = GER_Untamed_Eagle }
		swap_ideas = {
			remove_idea = GER_Untamed_Eagle
			add_idea = GER_Training_the_EagleA
		}
	}
	else_if = {
		limit = { has_idea = GER_Training_the_EagleA }
		swap_ideas = {
			remove_idea = GER_Training_the_EagleA
			add_idea = GER_Training_the_EagleB
		}
	}
	else_if = {
		limit = { has_idea = GER_Training_the_EagleB }
		swap_ideas = {
			remove_idea = GER_Training_the_EagleB
			add_idea = GER_Training_the_EagleC
		}
	}
	else_if = {
		limit = { has_idea = GER_Training_the_EagleC }
		swap_ideas = {
			remove_idea = GER_Training_the_EagleC
			add_idea = GER_Loyal_Eagle
		}
	}
}

GER_garden_economy_effect = {
	if = {
		limit = {
			OR = {
				NOT = { has_idea = GER_Garden_Economic1_idea }
				NOT = { has_idea = GER_Garden_Economic2_idea }
				NOT = { has_idea = GER_Garden_Economic3_idea }
			}
		}
		add_ideas = GER_Garden_Economic1_idea
	}
	
	else_if = {
		limit = { has_idea = GER_Garden_Economic1_idea }
		swap_ideas = {
			remove_idea = GER_Garden_Economic1_idea
			add_idea = GER_Garden_Economic2_idea
		}
	}
	
	else_if = {
		limit = { has_idea = GER_Garden_Economic2_idea }
		swap_ideas = {
			remove_idea = GER_Garden_Economic2_idea
			add_idea = GER_Garden_Economic3_idea
		}
	}
	
	else_if = {
		limit = { has_idea = GER_Garden_Economic3_idea }
		GER_garden_economy_minor_effect = yes
	}
}

GER_garden_economy_minor_effect = {
	random_owned_state = {
			limit = {
				free_building_slots = {
					building = industrial_complex
					size > 1
					include_locked = yes
				}
				OR = {
					is_in_home_area = yes
					NOT = {
						owner = {
							any_owned_state = {
								free_building_slots = {
									building = industrial_complex
									size > 1
									include_locked = yes
								}
								is_in_home_area = yes
							}
						}
					}
				}
			}
			add_extra_state_shared_building_slots = 1
			add_building_construction = {
				type = industrial_complex
				level = 1
				instant_build = yes
			}
		}
		random_owned_state = {
			limit = {
				free_building_slots = {
					building = industrial_complex
					size > 1
					include_locked = yes
				}
				OR = {
					is_in_home_area = yes
					NOT = {
						owner = {
							any_owned_state = {
								free_building_slots = {
									building = industrial_complex
									size > 1
									include_locked = yes
								}
								is_in_home_area = yes
							}
						}
					}
				}
			}
			add_extra_state_shared_building_slots = 1
			add_building_construction = {
				type = industrial_complex
				level = 1
				instant_build = yes
			}
		}
}

GER_garden_military_effect = {
	if = {
		limit = {
			OR = {
				NOT = { has_idea = GER_Garden_Military1_idea }
				NOT = { has_idea = GER_Garden_Military2_idea }
				NOT = { has_idea = GER_Garden_Military3_idea }
			}
		}
		add_ideas = GER_Garden_Military1_idea
	}
	
	else_if = {
		limit = { has_idea = GER_Garden_Military1_idea }
		swap_ideas = {
			remove_idea = GER_Garden_Military1_idea
			add_idea = GER_Garden_Military2_idea
		}
	}
	
	else_if = {
		limit = { has_idea = GER_Garden_Military2_idea }
		swap_ideas = {
			remove_idea = GER_Garden_Military2_idea
			add_idea = GER_Garden_Military3_idea
		}
	}
	
	else_if = {
		limit = { has_idea = GER_Garden_Military3_idea }
		GER_garden_military_minor_effect = yes
	}
}

GER_garden_military_minor_effect = {
	random_owned_state = {
			limit = {
				free_building_slots = {
					building = arms_factory
					size > 1
					include_locked = yes
				}
				OR = {
					is_in_home_area = yes
					NOT = {
						owner = {
							any_owned_state = {
								free_building_slots = {
									building = arms_factory
									size > 1
									include_locked = yes
								}
								is_in_home_area = yes
							}
						}
					}
				}
			}
			add_extra_state_shared_building_slots = 1
			add_building_construction = {
				type = arms_factory
				level = 1
				instant_build = yes
			}
		}
		random_owned_state = {
			limit = {
				free_building_slots = {
					building = arms_factory
					size > 1
					include_locked = yes
				}
				OR = {
					is_in_home_area = yes
					NOT = {
						owner = {
							any_owned_state = {
								free_building_slots = {
									building = arms_factory
									size > 1
									include_locked = yes
								}
								is_in_home_area = yes
							}
						}
					}
				}
			}
			add_extra_state_shared_building_slots = 1
			add_building_construction = {
				type = arms_factory
				level = 1
				instant_build = yes
			}
		}
}

GER_improve_militarism_effect = {
	if = {
		limit = { has_idea = GER_quenched_militarism }
		swap_ideas = {
			remove_idea = GER_quenched_militarism
			add_idea = GER_quenched_militarism2
		}
	}
	else_if = {
		limit = { has_idea = GER_quenched_militarism2 }
		swap_ideas = {
			remove_idea = GER_quenched_militarism2
			add_idea = GER_quenched_militarism3
		}
	}
	else_if = {
		limit = { has_idea = GER_quenched_militarism3 }
		swap_ideas = {
			remove_idea = GER_quenched_militarism3
			add_idea = GER_renewed_militarism
		}
	}
}

GER_improve_helgoland_effect = {
	if = {
		limit = {
			NOT = {
				has_idea = GER_Helgoland_Tier1
				has_idea = GER_Helgoland_Tier2
				has_idea = GER_Helgoland_Tier3
				has_idea = GER_Helgoland_Tier4
				has_idea = GER_Helgoland_Tier5
				has_idea = GER_Helgoland_Tier6
			}
		}
		add_ideas = GER_Helgoland_Tier1
	}
	else_if = {
		limit = { has_idea = GER_Helgoland_Tier1 }
		swap_ideas = {
			remove_idea = GER_Helgoland_Tier1
			add_idea = GER_Helgoland_Tier2
		}
	}
	else_if = {
		limit = { has_idea = GER_Helgoland_Tier2 }
		swap_ideas = {
			remove_idea = GER_Helgoland_Tier2
			add_idea = GER_Helgoland_Tier3
		}
	}
	else_if = {
		limit = { has_idea = GER_Helgoland_Tier3 }
		swap_ideas = {
			remove_idea = GER_Helgoland_Tier3
			add_idea = GER_Helgoland_Tier4
		}
	}
	else_if = {
		limit = { has_idea = GER_Helgoland_Tier4 }
		swap_ideas = {
			remove_idea = GER_Helgoland_Tier4
			add_idea = GER_Helgoland_Tier5
		}
	}
	else_if = {
		limit = { has_idea = GER_Helgoland_Tier5 }
		swap_ideas = {
			remove_idea = GER_Helgoland_Tier5
			add_idea = GER_Helgoland_Tier6
		}
	}
}

GER_Increase_Bifrost_Preparation = {
	custom_effect_tooltip = GER_Bifrost_Increased
	add_to_variable = { GER_Bifrost_Level = 1 }
}

GER_Setup_French_Collabos_President = {
	FRP = {
		set_party_name = {
			ideology = social_democrat
			long_name = GER_Administration_France_party_long
			name = GER_Administration_France_party
		}
		set_party_name = {
			ideology = social_liberal
			long_name = GER_Administration_France_party_long
			name = GER_Administration_France_party
		}
		set_party_name = {
			ideology = market_liberal
			long_name = GER_Administration_France_party_long
			name = GER_Administration_France_party
		}
		set_party_name = {
			ideology = social_conservative
			long_name = GER_Administration_France_party_long
			name = GER_Administration_France_party
		}
		set_party_name = {
			ideology = authoritarian_democrat
			long_name = GER_Administration_France_party_long
			name = GER_Administration_France_party
		}
		set_party_name = {
			ideology = paternal_autocrat
			long_name = GER_Administration_France_party_long
			name = GER_Administration_France_party
		}
		set_party_name = {
			ideology = national_populist
			long_name = GER_Administration_France_party_long
			name = GER_Administration_France_party
		}
	}
	if = {
		limit = { has_idea = GER_Paul_Lensch_hog_sde }
		FRP = { 
			set_politics = { ruling_party = social_democrat }
			create_country_leader = {
				name = "Francis Delaisi"
				picture = "gfx/leaders/FRP/Portrait_France_Francis_Delaisi.png"
				expire = "1.1.1"
				ideology = socdem_utopian_technocracy_subtype
				traits = { for_committed_internationalist }
			}
			add_popularity = { ideology = social_democrat popularity = 0.3 }
		}
	}
	else_if = {
		limit = { 
			OR = {
			has_idea = GER_Otto_Wels_hog_sde 
			has_idea = GER_Hans_Vogel_hog_sde 
			}
		}
		FRP = { 
			set_politics = { ruling_party = social_democrat }
			create_country_leader = {
				name = "Victor Dalbiez"
				picture = "gfx/leaders/OCC/Portrait_OCC_Victor_Dalbiez.png"
				expire = "1.1.1"
				ideology = socdem_democratic_socialism_subtype
				traits = { hog_moderate_socialist }
			}
			add_popularity = { ideology = social_democrat popularity = 0.3 }
		}
	}
	else_if = {
		limit = { has_idea = GER_Gustav_Noske_hog_sde }
		FRP = { 
			set_politics = { ruling_party = social_liberal }
			create_country_leader = {
				name = "Maurice Papon"
				picture = "gfx/leaders/FRP/Portrait_France_Maurice_Papon.png"
				expire = "1.1.1"
				ideology = soclib_popular_patriotism_subtype
				traits = { hog_the_minister }
			}
			add_popularity = { ideology = social_liberal popularity = 0.3 }
		}
	}
	else_if = {
		limit = { has_idea = GER_Friedrich_Meinecke_hog_sli }
		FRP = { 
			set_politics = { ruling_party = social_liberal }
			create_country_leader = {
				name = "Jean Médecin"
				picture = "gfx/leaders/OCC/Portrait_OCC_Jean_Medecin.png"
				expire = "1.1.1"
				ideology = centrist_subtype
				traits = { hog_naive_optimist }
			}
			add_popularity = { ideology = social_liberal popularity = 0.3 }
		}
	}
	else_if = {
		limit = { has_idea = GER_Thomas_Mann_hog_sli }
		FRP = { 
			set_politics = { ruling_party = market_liberal }
			create_country_leader = {
				name = "Paul Morand"
				picture = "gfx/leaders/FRP/Portrait_France_Paul_Morand.png"
				expire = "1.1.1"
				ideology = futuriblesisme_subtype
				traits = { lobe_poet_and_a_gentleman }
			}
			add_popularity = { ideology = market_liberal popularity = 0.3 }
		}
	}
	else_if = {
		limit = { 
			OR = {
			has_idea = GER_Max_Weber_hog_mli 
			has_idea = GER_Marianne_Weber_hog_mli  
			has_idea = GER_Carl_Schmitt_hog_ade  
			}
		}
		FRP = { 
			set_politics = { ruling_party = market_liberal }
			create_country_leader = {
				name = "Georges Palante"
				picture = "gfx/leaders/FRP/Portrait_France_Georges_Palante.png"
				expire = "1.1.1"
				ideology = weberian_liberalism_subtype
				traits = { hog_influential_intellectual }
			}
			add_popularity = { ideology = market_liberal popularity = 0.3 }
		}
	}
	else_if = {
		limit = { 
			OR = {
			has_idea = GER_Ludwig_Kaas_hog_sco 
			has_idea = GER_Konrad_Adenauer_hog_sco 
			has_idea = GER_Franz_von_Papen_hog_sco 
			}
		}
		FRP = { 
			set_politics = { ruling_party = market_liberal }
			create_country_leader = {
				name = "Joseph Barthélemy"
				picture = "gfx/leaders/FRP/Portrait_France_Joseph_Barthelemy.png"
				expire = "1.1.1"
				ideology = liberal_conservative_subtype
				traits = { hog_political_protege }
			}
			add_popularity = { ideology = market_liberal popularity = 0.3 }
		}
	}
	else_if = {
		limit = { has_idea = GER_Walther_Rathenau_hog_sli }
		FRP = { 
			set_politics = { ruling_party = social_conservative }
			create_country_leader = {
				name = "Georges Claude"
				picture = "gfx/leaders/FRP/Portrait_France_Georges_Claude.png"
				expire = "1.1.1"
				ideology = christian_technocracy_subtype
				traits = { eco_master_engineer }
			}
			add_popularity = { ideology = social_conservative popularity = 0.3 }
		}
	}
	else_if = {
		limit = { 
			OR = {
			has_idea = GER_Matthias_Erzberger_hog_sco 
			has_idea = GER_Heinrich_Bruening_hog_sco 
			}
		}
		FRP = { 
			set_politics = { ruling_party = social_conservative }
			create_country_leader = {
				name = "Francisque Gay"
				picture = "gfx/leaders/OCC/Portrait_OCC_Francisque_Gay.png"
				expire = "1.1.1"
				ideology = paternal_socialism_subtype
				traits = { hog_humanitarian }
			}
			add_popularity = { ideology = social_conservative popularity = 0.3 }
		}
	}
	else_if = {
		limit = { 
			OR = {
			has_idea = GER_Hans_Schlange_Schoningen_hog_ade 
			has_idea = GER_Moeller_van_den_Bruck_hog_npo 
			}
		}
		FRP = { 
			set_politics = { ruling_party = authoritarian_democrat }
			create_country_leader = {
				name = "Henri Dorgères"
				picture = "gfx/leaders/FRP/Portrait_France_Henri_Dorgeres.png"
				expire = "1.1.1"
				ideology = authdem_agrarianism_subtype
				traits = { hog_agrarian_activist }
			}
			add_popularity = { ideology = authoritarian_democrat popularity = 0.3 }
		}
	}
	else_if = {
		limit = { 
			OR = {
			has_idea = GER_Gustav_Stresemann_hog_mli 
			has_idea = GER_Kuno_von_Westarp_hog_ade 
			}
		}
		FRP = { 
			set_politics = { ruling_party = paternal_autocrat }
			create_country_leader = {
				name = "François Lehideux"
				picture = "gfx/leaders/FRP/Portrait_France_Francois_Lehideux.png"
				expire = "1.1.1"
				ideology = right_technocracy_subtype
				traits = { eco_technocrat } 
			}
			add_popularity = { ideology = paternal_autocrat popularity = 0.3 }
		}
	}
	else_if = {
		limit = { has_idea = GER_Kurt_von_Schleicher_hog_pau }
		FRP = { 
			set_politics = { ruling_party = paternal_autocrat }
			create_country_leader = {
				name = "Pierre Loutrel"
				picture = "gfx/leaders/FRP/Portrait_France_Pierre_Loutrel.png"
				expire = "1.1.1"
				ideology = crime_syndicate_subtype
				traits = { boss_ruthless_killer }
			}
			add_popularity = { ideology = paternal_autocrat popularity = 0.3 }
		}
	}
	else_if = {
		limit = { 
			OR = {
			has_idea = GER_Manfred_Freiherr_von_Richthofen_hog_ade 
			has_idea = GER_Paul_von_Lettow_Vorbeck_hog_ade 
			}
		}
		FRP = { 
			set_politics = { ruling_party = national_populist }
			create_country_leader = {
				name = "Pierre Costantini"
				picture = "gfx/leaders/FRP/Portrait_France_Pierre_Costantini.png"
				expire = "1.1.1"
				ideology = natpop_bonapartism_subtype
				traits = { hog_ultranationalist_agitator }
			}
			add_popularity = { ideology = national_populist popularity = 0.3 }
		}
	}
	else_if = {
		limit = { has_idea = GER_Alfred_Hugenberg_hog_pau }
		FRP = { 
			set_politics = { ruling_party = national_populist }
			create_country_leader = {
				name = "Alphonse de Châteaubriant"
				picture = "gfx/leaders/FRP/Portrait_France_Alphonse_de_Chateaubriant.png"
				expire = "1.1.1"
				ideology = legionarism_subtype
				traits = { hog_catholic_firebrand }
			}
			add_popularity = { ideology = national_populist popularity = 0.3 }
		}
	}
	else_if = {
		limit = { 
			OR = {
			has_idea = GER_Erich_Ludendorff_hog_npo 
			has_idea = GER_Mathilde_Ludendorff_hog_npo 
			}
		}
		FRP = { 
			set_politics = { ruling_party = national_populist }
			create_country_leader = {
				name = "Henry Coston"
				picture = "gfx/leaders/NRM/Portrait_Normandy_Henry_Georges_Coston.png"
				expire = "1.1.1"
				ideology = natpop_paneuropeanism_subtype
				traits = { hog_militant_reactionary }
			}
			add_popularity = { ideology = national_populist popularity = 0.3 }
		}
	}
	FRP = { add_ideas = FRP_Franz_von_Roques_hog_pau }
}

GER_Setup_French_Collabos_PM = {
	FRP = {
		set_party_name = {
			ideology = social_democrat
			long_name = GER_Administration_France_party_long
			name = GER_Administration_France_party
		}
		set_party_name = {
			ideology = social_liberal
			long_name = GER_Administration_France_party_long
			name = GER_Administration_France_party
		}
		set_party_name = {
			ideology = market_liberal
			long_name = GER_Administration_France_party_long
			name = GER_Administration_France_party
		}
		set_party_name = {
			ideology = social_conservative
			long_name = GER_Administration_France_party_long
			name = GER_Administration_France_party
		}
		set_party_name = {
			ideology = authoritarian_democrat
			long_name = GER_Administration_France_party_long
			name = GER_Administration_France_party
		}
		set_party_name = {
			ideology = paternal_autocrat
			long_name = GER_Administration_France_party_long
			name = GER_Administration_France_party
		}
		set_party_name = {
			ideology = national_populist
			long_name = GER_Administration_France_party_long
			name = GER_Administration_France_party
		}
		if = {
			limit = { has_cosmetic_tag = FRP_GER }
			create_country_leader = {
				name = "Lothaire II"
				picture = "gfx/leaders/GER/Portrait_Germany_Lothar_Arnauld_Periere_kr.png"
				expire = "1.1.1"
				ideology = social_democrat_subtype
				traits = { hog_old_admiral }
			}
			create_country_leader = {
				name = "Lothaire II"
				picture = "gfx/leaders/GER/Portrait_Germany_Lothar_Arnauld_Periere_kr.png"
				expire = "1.1.1"
				ideology = social_liberal_subtype
				traits = { hog_old_admiral }
			}
			create_country_leader = {
				name = "Lothaire II"
				picture = "gfx/leaders/GER/Portrait_Germany_Lothar_Arnauld_Periere_kr.png"
				expire = "1.1.1"
				ideology = market_liberal_subtype
				traits = { hog_old_admiral }
			}
			create_country_leader = {
				name = "Lothaire II"
				picture = "gfx/leaders/GER/Portrait_Germany_Lothar_Arnauld_Periere_kr.png"
				expire = "1.1.1"
				ideology = social_conservative_subtype
				traits = { hog_old_admiral }
			}
			create_country_leader = {
				name = "Lothaire II"
				picture = "gfx/leaders/GER/Portrait_Germany_Lothar_Arnauld_Periere_kr.png"
				expire = "1.1.1"
				ideology = authoritarian_democrat_subtype
				traits = { hog_old_admiral }
			}
			create_country_leader = {
				name = "Lothaire II"
				picture = "gfx/leaders/GER/Portrait_Germany_Lothar_Arnauld_Periere_kr.png"
				expire = "1.1.1"
				ideology = paternal_autocrat_subtype
				traits = { hog_old_admiral }
			}
			create_country_leader = {
				name = "Lothaire II"
				picture = "gfx/leaders/GER/Portrait_Germany_Lothar_Arnauld_Periere_kr.png"
				expire = "1.1.1"
				ideology = national_populist_subtype
				traits = { hog_old_admiral }
			}
		}
		else_if = {
			limit = { has_cosmetic_tag = FRP_VIC }
			create_country_leader = {
				name = "Victoria-Louise I"
				picture = "gfx/leaders/FRP/Portrait_France_Victoria_Louise_Civilian.png"
				expire = "1.1.1"
				ideology = social_democrat_subtype
				traits = { hog_popular_nobleman }
			}
			create_country_leader = {
				name = "Victoria-Louise I"
				picture = "gfx/leaders/FRP/Portrait_France_Victoria_Louise_Civilian.png"
				expire = "1.1.1"
				ideology = social_liberal_subtype
				traits = { hog_popular_nobleman }
			}
			create_country_leader = {
				name = "Victoria-Louise I"
				picture = "gfx/leaders/FRP/Portrait_France_Victoria_Louise_Aristocratic.png"
				expire = "1.1.1"
				ideology = market_liberal_subtype
				traits = { hog_popular_nobleman }
			}
			create_country_leader = {
				name = "Victoria-Louise I"
				picture = "gfx/leaders/FRP/Portrait_France_Victoria_Louise_Aristocratic.png"
				expire = "1.1.1"
				ideology = social_conservative_subtype
				traits = { hog_popular_nobleman }
			}
			create_country_leader = {
				name = "Victoria-Louise I"
				picture = "gfx/leaders/FRP/Portrait_France_Victoria_Louise_Aristocratic.png"
				expire = "1.1.1"
				ideology = authoritarian_democrat_subtype
				traits = { hog_popular_nobleman }
			}
			create_country_leader = {
				name = "Victoria-Louise I"
				picture = "gfx/leaders/FRP/Portrait_France_Victoria_Louise_Military.png"
				expire = "1.1.1"
				ideology = paternal_autocrat_subtype
				traits = { hog_popular_nobleman }
			}
			create_country_leader = {
				name = "Victoria-Louise I"
				picture = "gfx/leaders/FRP/Portrait_France_Victoria_Louise_Military.png"
				expire = "1.1.1"
				ideology = national_populist_subtype
				traits = { hog_popular_nobleman }
			}
		}
		else = {
			create_country_leader = {
				name = "Franz von Roques"
				picture = "gfx/leaders/GER/Portrait_Germany_Franz_von_Roques.png"
				expire = "1.1.1"
				ideology = social_democrat_subtype
				traits = { hog_respected_war_hero }
			}
			create_country_leader = {
				name = "Franz von Roques"
				picture = "gfx/leaders/GER/Portrait_Germany_Franz_von_Roques.png"
				expire = "1.1.1"
				ideology = social_liberal_subtype
				traits = { hog_respected_war_hero }
			}
			create_country_leader = {
				name = "Franz von Roques"
				picture = "gfx/leaders/GER/Portrait_Germany_Franz_von_Roques.png"
				expire = "1.1.1"
				ideology = market_liberal_subtype
				traits = { hog_respected_war_hero }
			}
			create_country_leader = {
				name = "Franz von Roques"
				picture = "gfx/leaders/GER/Portrait_Germany_Franz_von_Roques.png"
				expire = "1.1.1"
				ideology = social_conservative_subtype
				traits = { hog_respected_war_hero }
			}
			create_country_leader = {
				name = "Franz von Roques"
				picture = "gfx/leaders/GER/Portrait_Germany_Franz_von_Roques.png"
				expire = "1.1.1"
				ideology = authoritarian_democrat_subtype
				traits = { hog_respected_war_hero }
			}
			create_country_leader = {
				name = "Franz von Roques"
				picture = "gfx/leaders/GER/Portrait_Germany_Franz_von_Roques.png"
				expire = "1.1.1"
				ideology = paternal_autocrat_subtype
				traits = { hog_respected_war_hero }
			}
			create_country_leader = {
				name = "Franz von Roques"
				picture = "gfx/leaders/GER/Portrait_Germany_Franz_von_Roques.png"
				expire = "1.1.1"
				ideology = national_populist_subtype
				traits = { hog_respected_war_hero }
			}
		}
	}
	if = {
		limit = { has_idea = GER_Paul_Lensch_hog_sde }
		FRP = { 
			set_politics = { ruling_party = social_democrat }
			set_country_leader_ideology = socdem_utopian_technocracy_subtype
			add_ideas = FRP_Francis_Delaisi_hog_sde
			add_popularity = { ideology = social_democrat popularity = 0.3 }
			if = {
				limit = { has_cosmetic_tag = FRP_VIC }
				set_country_leader_portrait = { portrait = "gfx/leaders/FRP/Portrait_France_Victoria_Louise_Civilian.png" }
			}
		}
	}
	else_if = {
		limit = { 
			OR = {
			has_idea = GER_Otto_Wels_hog_sde 
			has_idea = GER_Hans_Vogel_hog_sde 
			}
		}
		FRP = { 
			set_politics = { ruling_party = social_democrat }
			set_country_leader_ideology = socdem_democratic_socialism_subtype
			add_ideas = FRP_Victor_Dalbiez_hog_sde
			add_popularity = { ideology = social_democrat popularity = 0.3 }
			if = {
				limit = { has_cosmetic_tag = FRP_VIC }
				set_country_leader_portrait = { portrait = "gfx/leaders/FRP/Portrait_France_Victoria_Louise_Civilian.png" }
			}
		}
	}
	else_if = {
		limit = { has_idea = GER_Gustav_Noske_hog_sde }
		FRP = { 
			set_politics = { ruling_party = social_liberal }
			set_country_leader_ideology = soclib_popular_patriotism_subtype
			add_ideas = FRP_Maurice_Papon_hog_sli
			add_popularity = { ideology = social_liberal popularity = 0.3 }
			if = {
				limit = { has_cosmetic_tag = FRP_VIC }
				set_country_leader_portrait = { portrait = "gfx/leaders/FRP/Portrait_France_Victoria_Louise_Civilian.png" }
			}
		}
	}
	else_if = {
		limit = { has_idea = GER_Friedrich_Meinecke_hog_sli }
		FRP = { 
			set_politics = { ruling_party = social_liberal }
			set_country_leader_ideology = centrist_subtype
			add_ideas = FRP_Jean_Medecin_hog_sli
			add_popularity = { ideology = social_liberal popularity = 0.3 }
			if = {
				limit = { has_cosmetic_tag = FRP_VIC }
				set_country_leader_portrait = { portrait = "gfx/leaders/FRP/Portrait_France_Victoria_Louise_Civilian.png" }
			}
		}
	}
	else_if = {
		limit = { has_idea = GER_Thomas_Mann_hog_sli }
		FRP = { 
			set_politics = { ruling_party = market_liberal }
			set_country_leader_ideology = futuriblesisme_subtype
			add_ideas = FRP_Paul_Morand_hog_mli
			add_popularity = { ideology = market_liberal popularity = 0.3 }
			if = {
				limit = { has_cosmetic_tag = FRP_VIC }
				set_country_leader_portrait = { portrait = "gfx/leaders/FRP/Portrait_France_Victoria_Louise_Aristocratic.png" }
			}
		}
	}
	else_if = {
		limit = { 
			OR = {
			has_idea = GER_Max_Weber_hog_mli 
			has_idea = GER_Marianne_Weber_hog_mli  
			has_idea = GER_Carl_Schmitt_hog_ade  
			}
		}
		FRP = { 
			set_politics = { ruling_party = market_liberal }
			set_country_leader_ideology = weberian_liberalism_subtype
			add_ideas = FRP_Georges_Palante_hog_mli
			add_popularity = { ideology = market_liberal popularity = 0.3 }
			if = {
				limit = { has_cosmetic_tag = FRP_VIC }
				set_country_leader_portrait = { portrait = "gfx/leaders/FRP/Portrait_France_Victoria_Louise_Aristocratic.png" }
			}
		}
	}
	else_if = {
		limit = { 
			OR = {
			has_idea = GER_Ludwig_Kaas_hog_sco 
			has_idea = GER_Konrad_Adenauer_hog_sco 
			has_idea = GER_Franz_von_Papen_hog_sco 
			}
		}
		FRP = { 
			set_politics = { ruling_party = market_liberal }
			set_country_leader_ideology = liberal_conservative_subtype
			add_ideas = FRP_Joseph_Barthelemy_hog_mli
			add_popularity = { ideology = market_liberal popularity = 0.3 }
			if = {
				limit = { has_cosmetic_tag = FRP_VIC }
				set_country_leader_portrait = { portrait = "gfx/leaders/FRP/Portrait_France_Victoria_Louise_Aristocratic.png" }
			}
		}
	}
	else_if = {
		limit = { has_idea = GER_Walther_Rathenau_hog_sli }
		FRP = { 
			set_politics = { ruling_party = social_conservative }
			set_country_leader_ideology = christian_technocracy_subtype
			add_ideas = FRP_Georges_Claude_hog_sco
			add_popularity = { ideology = social_conservative popularity = 0.3 }
			if = {
				limit = { has_cosmetic_tag = FRP_VIC }
				set_country_leader_portrait = { portrait = "gfx/leaders/FRP/Portrait_France_Victoria_Louise_Aristocratic.png" }
			}
		}
	}
	else_if = {
		limit = { 
			OR = {
			has_idea = GER_Matthias_Erzberger_hog_sco 
			has_idea = GER_Heinrich_Bruening_hog_sco 
			}
		}
		FRP = { 
			set_politics = { ruling_party = social_conservative }
			set_country_leader_ideology = paternal_socialism_subtype
			add_ideas = FRP_Francisque_Gay_hog_sco
			add_popularity = { ideology = social_conservative popularity = 0.3 }
			if = {
				limit = { has_cosmetic_tag = FRP_VIC }
				set_country_leader_portrait = { portrait = "gfx/leaders/FRP/Portrait_France_Victoria_Louise_Aristocratic.png" }
			}
		}
	}
	else_if = {
		limit = { 
			OR = {
			has_idea = GER_Hans_Schlange_Schoningen_hog_ade 
			has_idea = GER_Moeller_van_den_Bruck_hog_npo 
			}
		}
		FRP = { 
			set_politics = { ruling_party = authoritarian_democrat }
			set_country_leader_ideology = authdem_agrarianism_subtype
			add_ideas = FRP_Henry_Dorgeres_hog_ade
			add_popularity = { ideology = authoritarian_democrat popularity = 0.3 }
			if = {
				limit = { has_cosmetic_tag = FRP_VIC }
				set_country_leader_portrait = { portrait = "gfx/leaders/FRP/Portrait_France_Victoria_Louise_Aristocratic.png" }
			}
		}
	}
	else_if = {
		limit = { 
			OR = {
			has_idea = GER_Gustav_Stresemann_hog_mli 
			has_idea = GER_Kuno_von_Westarp_hog_ade 
			}
		}
		FRP = { 
			set_politics = { ruling_party = paternal_autocrat }
			set_country_leader_ideology = right_technocracy_subtype
			add_ideas = FRP_Francois_Lehideux_hog_pau
			add_popularity = { ideology = paternal_autocrat popularity = 0.3 }
		}
	}
	else_if = {
		limit = { has_idea = GER_Kurt_von_Schleicher_hog_pau }
		FRP = { 
			set_politics = { ruling_party = paternal_autocrat }
			set_country_leader_ideology = crime_syndicate_subtype
			add_ideas = FRP_Pierre_Loutrel_hog_pau
			add_popularity = { ideology = paternal_autocrat popularity = 0.3 }
		}
	}
	else_if = {
		limit = { 
			OR = {
			has_idea = GER_Manfred_Freiherr_von_Richthofen_hog_ade 
			has_idea = GER_Paul_von_Lettow_Vorbeck_hog_ade 
			}
		}
		FRP = { 
			set_politics = { ruling_party = national_populist }
			set_country_leader_ideology = natpop_bonapartism_subtype
			add_ideas = FRP_Pierre_Costantini_hog_npo
			add_popularity = { ideology = national_populist popularity = 0.3 }
		}
	}
	else_if = {
		limit = { has_idea = GER_Alfred_Hugenberg_hog_pau }
		FRP = { 
			set_politics = { ruling_party = national_populist }
			set_country_leader_ideology = legionarism_subtype
			add_ideas = FRP_Alphonse_de_Chateaubriant_hog_npo
			add_popularity = { ideology = national_populist popularity = 0.3 }
		}
	}
	else_if = {
		limit = { 
			OR = {
			has_idea = GER_Erich_Ludendorff_hog_npo 
			has_idea = GER_Mathilde_Ludendorff_hog_npo 
			}
		}
		FRP = { 
			set_politics = { ruling_party = national_populist }
			set_country_leader_ideology = natpop_paneuropeanism_subtype
			add_ideas = FRP_Henry_Coston_hog_npo
			add_popularity = { ideology = national_populist popularity = 0.3 }
		}
	}
}

GER_Setup_French_Balkanized_President = {
	FRP = {
		set_party_name = {
			ideology = social_democrat
			long_name = GER_Administration_France_party_long
			name = GER_Administration_France_party
		}
		set_party_name = {
			ideology = social_liberal
			long_name = GER_Administration_France_party_long
			name = GER_Administration_France_party
		}
		set_party_name = {
			ideology = market_liberal
			long_name = GER_Administration_France_party_long
			name = GER_Administration_France_party
		}
		set_party_name = {
			ideology = social_conservative
			long_name = GER_Administration_France_party_long
			name = GER_Administration_France_party
		}
		set_party_name = {
			ideology = authoritarian_democrat
			long_name = GER_Administration_France_party_long
			name = GER_Administration_France_party
		}
		set_party_name = {
			ideology = paternal_autocrat
			long_name = GER_Administration_France_party_long
			name = GER_Administration_France_party
		}
		set_party_name = {
			ideology = national_populist
			long_name = GER_Administration_France_party_long
			name = GER_Administration_France_party
		}
		create_country_leader = {
			name = "Eugène Frot"
			picture = "gfx/leaders/FRP/Portrait_France_Eugene_Frot.png"
			expire = "1.1.1"
			ideology = authoritarian_social_democracy_subtype 
		}
		create_country_leader = {
			name = "Maurice Papon"
			picture = "gfx/leaders/FRP/Portrait_France_Maurice_Papon.png"
			expire = "1.1.1"
			ideology = soclib_popular_patriotism_subtype 
		}
		create_country_leader = {
			name = "Joseph Barthélemy"
			picture = "gfx/leaders/FRP/Portrait_France_Joseph_Barthelemy.png"
			expire = "1.1.1"
			ideology = liberal_conservative_subtype 
		}
		create_country_leader = {
			name = "Jacques Le Roy Ladurie"
			picture = "gfx/leaders/FRP/Portrait_France_Jacques_Roy_Ladurie.png"
			expire = "1.1.1"
			ideology = soccon_agrarianism_subtype 
		}
		create_country_leader = {
			name = "Henri Dorgères"
			picture = "gfx/leaders/FRP/Portrait_France_Henri_Dorgeres.png"
			expire = "1.1.1"
			ideology = authdem_agrarianism_subtype 
		}
		create_country_leader = {
			name = "François Lehideux"
			picture = "gfx/leaders/FRP/Portrait_France_Francois_Lehideux.png"
			expire = "1.1.1"
			ideology = right_technocracy_subtype 
		}
		create_country_leader = {
			name = "Pierre Costantini"
			picture = "gfx/leaders/FRP/Portrait_France_Pierre_Costantini.png"
			expire = "1.1.1"
			ideology = natpop_bonapartism_subtype 
		}
	}
	if = {
		limit = { has_government = social_democrat }
		FRP = { set_politics = { ruling_party = social_democrat } add_popularity = { ideology = social_democrat popularity = 0.3 } }
	}
	else_if = {
		limit = { has_government = social_liberal }
		FRP = { set_politics = { ruling_party = social_liberal } add_popularity = { ideology = social_liberal popularity = 0.3 } }
	}
	else_if = {
		limit = { has_government = market_liberal }
		FRP = { set_politics = { ruling_party = market_liberal } add_popularity = { ideology = market_liberal popularity = 0.3 } }
	}
	else_if = {
		limit = { has_government = social_conservative }
		FRP = { set_politics = { ruling_party = social_conservative } add_popularity = { ideology = social_conservative popularity = 0.3 } }
	}
	else_if = {
		limit = { has_government = authoritarian_democrat }
		FRP = { set_politics = { ruling_party = authoritarian_democrat } add_popularity = { ideology = authoritarian_democrat popularity = 0.3 } }
	}
	else_if = {
		limit = { has_government = paternal_autocrat }
		FRP = { set_politics = { ruling_party = paternal_autocrat } add_popularity = { ideology = paternal_autocrat popularity = 0.3 } }
	}
	else_if = {
		limit = { has_government = national_populist }
		FRP = { set_politics = { ruling_party = national_populist } add_popularity = { ideology = national_populist popularity = 0.3 } }
	}
	FRP = { add_ideas = FRP_Franz_von_Roques_hog_pau }
}

GER_Setup_French_Balkanized_PM = {
	FRP = {
		set_party_name = {
			ideology = social_democrat
			long_name = GER_Administration_France_party_long
			name = GER_Administration_France_party
		}
		set_party_name = {
			ideology = social_liberal
			long_name = GER_Administration_France_party_long
			name = GER_Administration_France_party
		}
		set_party_name = {
			ideology = market_liberal
			long_name = GER_Administration_France_party_long
			name = GER_Administration_France_party
		}
		set_party_name = {
			ideology = social_conservative
			long_name = GER_Administration_France_party_long
			name = GER_Administration_France_party
		}
		set_party_name = {
			ideology = authoritarian_democrat
			long_name = GER_Administration_France_party_long
			name = GER_Administration_France_party
		}
		set_party_name = {
			ideology = paternal_autocrat
			long_name = GER_Administration_France_party_long
			name = GER_Administration_France_party
		}
		set_party_name = {
			ideology = national_populist
			long_name = GER_Administration_France_party_long
			name = GER_Administration_France_party
		}
        if = {
			limit = { has_cosmetic_tag = FRP_GER }
			create_country_leader = {
				name = "Lothaire II"
				picture = "gfx/leaders/GER/Portrait_Germany_Lothar_Arnauld_Periere_kr.png"
				expire = "1.1.1"
				ideology = social_democrat_subtype
				traits = { hog_old_admiral }
			}
			create_country_leader = {
				name = "Lothaire II"
				picture = "gfx/leaders/GER/Portrait_Germany_Lothar_Arnauld_Periere_kr.png"
				expire = "1.1.1"
				ideology = social_liberal_subtype
				traits = { hog_old_admiral }
			}
			create_country_leader = {
				name = "Lothaire II"
				picture = "gfx/leaders/GER/Portrait_Germany_Lothar_Arnauld_Periere_kr.png"
				expire = "1.1.1"
				ideology = market_liberal_subtype
				traits = { hog_old_admiral }
			}
			create_country_leader = {
				name = "Lothaire II"
				picture = "gfx/leaders/GER/Portrait_Germany_Lothar_Arnauld_Periere_kr.png"
				expire = "1.1.1"
				ideology = social_conservative_subtype
				traits = { hog_old_admiral }
			}
			create_country_leader = {
				name = "Lothaire II"
				picture = "gfx/leaders/GER/Portrait_Germany_Lothar_Arnauld_Periere_kr.png"
				expire = "1.1.1"
				ideology = authoritarian_democrat_subtype
				traits = { hog_old_admiral }
			}
			create_country_leader = {
				name = "Lothaire II"
				picture = "gfx/leaders/GER/Portrait_Germany_Lothar_Arnauld_Periere_kr.png"
				expire = "1.1.1"
				ideology = paternal_autocrat_subtype
				traits = { hog_old_admiral }
			}
			create_country_leader = {
				name = "Lothaire II"
				picture = "gfx/leaders/GER/Portrait_Germany_Lothar_Arnauld_Periere_kr.png"
				expire = "1.1.1"
				ideology = national_populist_subtype
				traits = { hog_old_admiral }
			}
		}
		else_if = {
			limit = { has_cosmetic_tag = FRP_VIC }
			create_country_leader = {
				name = "Victoria-Louise I"
				picture = "gfx/leaders/FRP/Portrait_France_Victoria_Louise_Civilian.png"
				expire = "1.1.1"
				ideology = social_democrat_subtype
				traits = { hog_popular_nobleman }
			}
			create_country_leader = {
				name = "Victoria-Louise I"
				picture = "gfx/leaders/FRP/Portrait_France_Victoria_Louise_Civilian.png"
				expire = "1.1.1"
				ideology = social_liberal_subtype
				traits = { hog_popular_nobleman }
			}
			create_country_leader = {
				name = "Victoria-Louise I"
				picture = "gfx/leaders/FRP/Portrait_France_Victoria_Louise_Aristocratic.png"
				expire = "1.1.1"
				ideology = market_liberal_subtype
				traits = { hog_popular_nobleman }
			}
			create_country_leader = {
				name = "Victoria-Louise I"
				picture = "gfx/leaders/FRP/Portrait_France_Victoria_Louise_Aristocratic.png"
				expire = "1.1.1"
				ideology = social_conservative_subtype
				traits = { hog_popular_nobleman }
			}
			create_country_leader = {
				name = "Victoria-Louise I"
				picture = "gfx/leaders/FRP/Portrait_France_Victoria_Louise_Aristocratic.png"
				expire = "1.1.1"
				ideology = authoritarian_democrat_subtype
				traits = { hog_popular_nobleman }
			}
			create_country_leader = {
				name = "Victoria-Louise I"
				picture = "gfx/leaders/FRP/Portrait_France_Victoria_Louise_Military.png"
				expire = "1.1.1"
				ideology = paternal_autocrat_subtype
				traits = { hog_popular_nobleman }
			}
			create_country_leader = {
				name = "Victoria-Louise I"
				picture = "gfx/leaders/FRP/Portrait_France_Victoria_Louise_Military.png"
				expire = "1.1.1"
				ideology = national_populist_subtype
				traits = { hog_popular_nobleman }
			}
		}
		else = {
			create_country_leader = {
				name = "Franz von Roques"
				picture = "gfx/leaders/GER/Portrait_Germany_Franz_von_Roques.png"
				expire = "1.1.1"
				ideology = social_democrat_subtype
				traits = { hog_respected_war_hero }
			}
			create_country_leader = {
				name = "Franz von Roques"
				picture = "gfx/leaders/GER/Portrait_Germany_Franz_von_Roques.png"
				expire = "1.1.1"
				ideology = social_liberal_subtype
				traits = { hog_respected_war_hero }
			}
			create_country_leader = {
				name = "Franz von Roques"
				picture = "gfx/leaders/GER/Portrait_Germany_Franz_von_Roques.png"
				expire = "1.1.1"
				ideology = market_liberal_subtype
				traits = { hog_respected_war_hero }
			}
			create_country_leader = {
				name = "Franz von Roques"
				picture = "gfx/leaders/GER/Portrait_Germany_Franz_von_Roques.png"
				expire = "1.1.1"
				ideology = social_conservative_subtype
				traits = { hog_respected_war_hero }
			}
			create_country_leader = {
				name = "Franz von Roques"
				picture = "gfx/leaders/GER/Portrait_Germany_Franz_von_Roques.png"
				expire = "1.1.1"
				ideology = authoritarian_democrat_subtype
				traits = { hog_respected_war_hero }
			}
			create_country_leader = {
				name = "Franz von Roques"
				picture = "gfx/leaders/GER/Portrait_Germany_Franz_von_Roques.png"
				expire = "1.1.1"
				ideology = paternal_autocrat_subtype
				traits = { hog_respected_war_hero }
			}
			create_country_leader = {
				name = "Franz von Roques"
				picture = "gfx/leaders/GER/Portrait_Germany_Franz_von_Roques.png"
				expire = "1.1.1"
				ideology = national_populist_subtype
				traits = { hog_respected_war_hero }
			}
		}
	}
	if = {
		limit = { has_government = social_democrat }
		FRP = { 
			set_politics = { ruling_party = social_democrat } add_popularity = { ideology = social_democrat popularity = 0.3 } 
			if = {
				limit = { has_cosmetic_tag = FRP_VIC }
				set_country_leader_portrait = { portrait = "gfx/leaders/FRP/Portrait_France_Victoria_Louise_Civilian.png" }
			}
		}
	}
	else_if = {
		limit = { has_government = social_liberal }
		FRP = { 
			set_politics = { ruling_party = social_liberal } add_popularity = { ideology = social_liberal popularity = 0.3 } 
			if = {
				limit = { has_cosmetic_tag = FRP_VIC }
				set_country_leader_portrait = { portrait = "gfx/leaders/FRP/Portrait_France_Victoria_Louise_Civilian.png" }
			}
		}
	}
	else_if = {
		limit = { has_government = market_liberal }
		FRP = { 
			set_politics = { ruling_party = market_liberal } add_popularity = { ideology = market_liberal popularity = 0.3 } 
			if = {
				limit = { has_cosmetic_tag = FRP_VIC }
				set_country_leader_portrait = { portrait = "gfx/leaders/FRP/Portrait_France_Victoria_Louise_Aristocratic.png" }
			}
		}
	}
	else_if = {
		limit = { has_government = social_conservative }
		FRP = { 
			set_politics = { ruling_party = social_conservative } add_popularity = { ideology = social_conservative popularity = 0.3 } 
			if = {
				limit = { has_cosmetic_tag = FRP_VIC }
				set_country_leader_portrait = { portrait = "gfx/leaders/FRP/Portrait_France_Victoria_Louise_Aristocratic.png" }
			}
		}
	}
	else_if = {
		limit = { has_government = authoritarian_democrat }
		FRP = { 
			set_politics = { ruling_party = authoritarian_democrat } add_popularity = { ideology = authoritarian_democrat popularity = 0.3 }
			if = {
				limit = { has_cosmetic_tag = FRP_VIC }
				set_country_leader_portrait = { portrait = "gfx/leaders/FRP/Portrait_France_Victoria_Louise_Aristocratic.png" }
			} 
		}
	}
	else_if = {
		limit = { has_government = paternal_autocrat }
		FRP = { set_politics = { ruling_party = paternal_autocrat } add_popularity = { ideology = paternal_autocrat popularity = 0.3 } }
	}
	else_if = {
		limit = { has_government = national_populist }
		FRP = { set_politics = { ruling_party = national_populist } add_popularity = { ideology = national_populist popularity = 0.3 } }
	}
}

GER_Setup_British_Collabos_President = {
	GBP = {
		set_party_name = {
			ideology = social_democrat
			long_name = GER_Administration_Britain_party_long
			name = GER_Administration_Britain_party
		}
		set_party_name = {
			ideology = social_liberal
			long_name = GER_Administration_Britain_party_long
			name = GER_Administration_Britain_party
		}
		set_party_name = {
			ideology = market_liberal
			long_name = GER_Administration_Britain_party_long
			name = GER_Administration_Britain_party
		}
		set_party_name = {
			ideology = social_conservative
			long_name = GER_Administration_Britain_party_long
			name = GER_Administration_Britain_party
		}
		set_party_name = {
			ideology = authoritarian_democrat
			long_name = GER_Administration_Britain_party_long
			name = GER_Administration_Britain_party
		}
		set_party_name = {
			ideology = paternal_autocrat
			long_name = GER_Administration_Britain_party_long
			name = GER_Administration_Britain_party
		}
		set_party_name = {
			ideology = national_populist
			long_name = GER_Administration_Britain_party_long
			name = GER_Administration_Britain_party
		}
	}
	if = {
		limit = { has_idea = GER_Paul_Lensch_hog_sde }
		GBP = { 
			set_politics = { ruling_party = social_democrat }
			create_country_leader = {
				name = "John Burns"
				picture = "gfx/leaders/ENG/Portrait_Britain_John_Burns.png"
				expire = "1.1.1"
				ideology = teetotalism_subtype
				traits = { eco_patriotic_socialist }
			}
			add_popularity = { ideology = social_democrat popularity = 0.3 }
		}
	}
	else_if = {
		limit = { has_idea = GER_Gustav_Noske_hog_sde }
		GBP = { 
			set_politics = { ruling_party = social_democrat }
			create_country_leader = {
				name = "Harold Nicolson"
				picture = "gfx/leaders/ENG/Portrait_Britain_Harold_Nicolson.png"
				expire = "1.1.1"
				ideology = authoritarian_social_democracy_subtype
				traits = { hog_plodding_bureaucrat }
			}
			add_popularity = { ideology = social_democrat popularity = 0.3 }
		}
	}
	else_if = {
		limit = { 
			OR = {
			has_idea = GER_Otto_Wels_hog_sde 
			has_idea = GER_Hans_Vogel_hog_sde 
			}
		}
		GBP = { 
			set_politics = { ruling_party = social_democrat }
			create_country_leader = {
				name = "Arthur Henderson"
				picture = "gfx/leaders/ENG/Portrait_Britain_Arthur_Henderson.png"
				expire = "1.1.1"
				ideology = social_democrat_subtype
				traits = { hog_liberal_socialist }
			}
			add_popularity = { ideology = social_democrat popularity = 0.3 }
		}
	}
	else_if = {
		limit = { has_idea = GER_Friedrich_Meinecke_hog_sli }
		GBP = { 
			set_politics = { ruling_party = social_liberal }
			create_country_leader = {
				name = "E. H. Carr"
				picture = "gfx/leaders/ENG/Portrait_Britain_E_H_Carr.png"
				expire = "1.1.1"
				ideology = soclib_internationalism_subtype
				traits = { for_master_diplomat }
			}
			add_popularity = { ideology = social_liberal popularity = 0.3 }
		}
	}
	else_if = {
		limit = { has_idea = GER_Thomas_Mann_hog_sli }
		GBP = { 
			set_politics = { ruling_party = social_liberal }
			create_country_leader = {
				name = "Erich Heller"
				picture = "gfx/leaders/ENG/Portrait_Britain_Erich_Heller.png"
				expire = "1.1.1"
				ideology = cultural_mannism_subtype
				traits = { sec_centrist_educator }
			}
			add_popularity = { ideology = social_liberal popularity = 0.3 }
		}
	}
	else_if = {
		limit = { 
			OR = {
			has_idea = GER_Max_Weber_hog_mli 
			has_idea = GER_Marianne_Weber_hog_mli  
			has_idea = GER_Carl_Schmitt_hog_ade  
			}
		}
		GBP = { 
			set_politics = { ruling_party = social_liberal }
			create_country_leader = {
				name = "T. H. Marshall"
				picture = "gfx/leaders/ENG/Portrait_Britain_T_H_Marshall.png"
				expire = "1.1.1"
				ideology = soclib_liberal_socialism_subtype
				traits = { hog_social_security_champion }
			}
			add_popularity = { ideology = social_liberal popularity = 0.3 }
		}
	}
	else_if = {
		limit = { has_idea = GER_Gustav_Stresemann_hog_mli }
		GBP = { 
			set_politics = { ruling_party = social_liberal }
			create_country_leader = {
				name = "Frederick Soddy"
				picture = "gfx/leaders/ENG/Portrait_Britain_Frederick_Soddy.png"
				expire = "1.1.1"
				ideology = soclib_utopian_technocracy_subtype
				traits = { lobe_social_credit_theorizer }
			}
			add_popularity = { ideology = social_liberal popularity = 0.3 }
		}
	}
	else_if = {
		limit = { has_idea = GER_Walther_Rathenau_hog_sli }
		GBP = { 
			set_politics = { ruling_party = market_liberal }
			create_country_leader = {
				name = "Alan Blumlein"
				picture = "gfx/leaders/ENG/Portrait_Britain_Alan_Blumlein.png"
				expire = "1.1.1"
				ideology = progressive_democracy_subtype
				traits = { eco_ambitious_engineer }
			}
			add_popularity = { ideology = market_liberal popularity = 0.3 }
		}
	}
	else_if = {
		limit = { 
			OR = {
			has_idea = GER_Matthias_Erzberger_hog_sco 
			has_idea = GER_Heinrich_Bruening_hog_sco 
			}
		}
		GBP = { 
			set_politics = { ruling_party = market_liberal }
			create_country_leader = {
				name = "Hilaire Belloc"
				picture = "gfx/leaders/BRG/Portrait_BRG_Hilaire_Belloc.png"
				expire = "1.1.1"
				ideology = marlib_christian_democracy_subtype
				traits = { hog_catholic_firebrand }
			}
			add_popularity = { ideology = market_liberal popularity = 0.3 }
		}
	}
	else_if = {
		limit = { 
			OR = {
			has_idea = GER_Ludwig_Kaas_hog_sco 
			has_idea = GER_Konrad_Adenauer_hog_sco 
			}
		}
		GBP = { 
			set_politics = { ruling_party = social_conservative }
			create_country_leader = {
				name = "Christopher Dawson"
				picture = "gfx/leaders/ENG/Portrait_Britain_Christopher_Dawson.png"
				expire = "1.1.1"
				ideology = soccon_paneuropeanism_subtype
				traits = { for_pious_intellectual }
			}
			add_popularity = { ideology = social_conservative popularity = 0.3 }
		}
	}
	else_if = {
		limit = { has_idea = GER_Hans_Schlange_Schoningen_hog_ade }
		GBP = { 
			set_politics = { ruling_party = social_conservative }
			create_country_leader = {
				name = "Herbert Matthews"
				picture = "gfx/leaders/ENG/Portrait_Britain_Herbert_Matthews.png"
				expire = "1.1.1"
				ideology = soccon_agrarianism_subtype
				traits = { eco_agrarian_expert }
			}
			add_popularity = { ideology = social_conservative popularity = 0.3 }
		}
	}
	else_if = {
		limit = { has_idea = GER_Franz_von_Papen_hog_sco }
		GBP = { 
			set_politics = { ruling_party = authoritarian_democrat }
			create_country_leader = {
				name = "Evelyn Waugh"
				picture = "gfx/leaders/ENG/Portrait_Britain_Evelyn_Waugh.png"
				expire = "1.1.1"
				ideology = oligarchy_subtype
				traits = { lobe_aristocratic_traditionalist } 
			}
			add_popularity = { ideology = authoritarian_democrat popularity = 0.3 }
		}
	}
	else_if = {
		limit = { 
			OR = {
			has_idea = GER_Kuno_von_Westarp_hog_ade 	
			has_idea = GER_Manfred_Freiherr_von_Richthofen_hog_ade 
			has_idea = GER_Paul_von_Lettow_Vorbeck_hog_ade 
			}
		}
		GBP = { 
			set_politics = { ruling_party = paternal_autocrat }
			create_country_leader = {
				name = "R. B. D. Blakeney"
				picture = "gfx/leaders/ENG/Portrait_Britain_R_B_D_Blakeney.png"
				expire = "1.1.1"
				ideology = pataut_theosophy_subtype
				traits = { sec_paramilitary_leader }
			}
			add_popularity = { ideology = paternal_autocrat popularity = 0.3 }
		}
	}
	else_if = {
		limit = { has_idea = GER_Kurt_von_Schleicher_hog_pau }
		GBP = { 
			set_politics = { ruling_party = paternal_autocrat }
			create_country_leader = {
				name = "Billy Hill"
				picture = "gfx/leaders/ENG/Portrait_Britain_Billy_Hill.png"
				expire = "1.1.1"
				ideology = crime_syndicate_subtype
				traits = { sec_crooked_kleptocrat }
			}
			add_popularity = { ideology = paternal_autocrat popularity = 0.3 }
		}
	}
	else_if = {
		limit = { has_idea = GER_Alfred_Hugenberg_hog_pau }
		GBP = { 
			set_politics = { ruling_party = national_populist }
			create_country_leader = {
				name = "Archibald Maule Ramsay"
				picture = "gfx/leaders/BRG/Portrait_BRG_Archibald_Ramsay.png"
				expire = "1.1.1"
				ideology = nordicism_subtype
				traits = { lama_reactionary_erudite }
			}
			add_popularity = { ideology = national_populist popularity = 0.3 }
		}
	}
	else_if = {
		limit = { has_idea = GER_Moeller_van_den_Bruck_hog_npo }
		GBP = { 
			set_politics = { ruling_party = national_populist }
			create_country_leader = {
				name = "Rolf Gardiner"
				picture = "gfx/leaders/ENG/Portrait_Britain_Rolf_Gardiner.png"
				expire = "1.1.1"
				ideology = natpop_social_credit_subtype
				traits = { sec_preserver_of_culture }
			}
			add_popularity = { ideology = national_populist popularity = 0.3 }
		}
	}
	else_if = {
		limit = { 
			OR = {
			has_idea = GER_Erich_Ludendorff_hog_npo 
			has_idea = GER_Mathilde_Ludendorff_hog_npo 
			}
		}
		GBP = { 
			set_politics = { ruling_party = national_populist }
			create_country_leader = {
				name = "Arnold Leese"
				picture = "gfx/leaders/BRG/Portrait_BRG_Arnold_Leese.png"
				expire = "1.1.1"
				ideology = legionarism_subtype
				traits = { lobe_nationalist_firebrand }
			}
			add_popularity = { ideology = national_populist popularity = 0.3 }
		}
	}
	GBP = { add_ideas = GBP_Hermann_Balck_hog_pau }
}

GER_Setup_British_Collabos_PM = {
	GBP = {
		set_party_name = {
			ideology = social_democrat
			long_name = GER_Administration_Britain_party_long
			name = GER_Administration_Britain_party
		}
		set_party_name = {
			ideology = social_liberal
			long_name = GER_Administration_Britain_party_long
			name = GER_Administration_Britain_party
		}
		set_party_name = {
			ideology = market_liberal
			long_name = GER_Administration_Britain_party_long
			name = GER_Administration_Britain_party
		}
		set_party_name = {
			ideology = social_conservative
			long_name = GER_Administration_Britain_party_long
			name = GER_Administration_Britain_party
		}
		set_party_name = {
			ideology = authoritarian_democrat
			long_name = GER_Administration_Britain_party_long
			name = GER_Administration_Britain_party
		}
		set_party_name = {
			ideology = paternal_autocrat
			long_name = GER_Administration_Britain_party_long
			name = GER_Administration_Britain_party
		}
		set_party_name = {
			ideology = national_populist
			long_name = GER_Administration_Britain_party_long
			name = GER_Administration_Britain_party
		}
		if = {
			limit = { OR = { has_cosmetic_tag = GBP_Charles has_cosmetic_tag = GBP_Charles_England } }
			create_country_leader = {
				name = "Charles III"
				picture = "gfx/leaders/ENG/Portrait_Britain_Charles_III.png"
				expire = "1.1.1"
				ideology = social_democrat_subtype
				traits = { sec_health_and_safety }
			}
			create_country_leader = {
				name = "Charles III"
				picture = "gfx/leaders/ENG/Portrait_Britain_Charles_III.png"
				expire = "1.1.1"
				ideology = social_liberal_subtype
				traits = { sec_health_and_safety }
			}
			create_country_leader = {
				name = "Charles III"
				picture = "gfx/leaders/ENG/Portrait_Britain_Charles_III.png"
				expire = "1.1.1"
				ideology = market_liberal_subtype
				traits = { sec_health_and_safety }
			}
			create_country_leader = {
				name = "Charles III"
				picture = "gfx/leaders/ENG/Portrait_Britain_Charles_III.png"
				expire = "1.1.1"
				ideology = social_conservative_subtype
				traits = { sec_health_and_safety }
			}
			create_country_leader = {
				name = "Charles III"
				picture = "gfx/leaders/ENG/Portrait_Britain_Charles_III.png"
				expire = "1.1.1"
				ideology = authoritarian_democrat_subtype
				traits = { sec_health_and_safety }
			}
			create_country_leader = {
				name = "Charles III"
				picture = "gfx/leaders/ENG/Portrait_Britain_Charles_III.png"
				expire = "1.1.1"
				ideology = paternal_autocrat_subtype
				traits = { sec_health_and_safety }
			}
			create_country_leader = {
				name = "Charles III"
				picture = "gfx/leaders/ENG/Portrait_Britain_Charles_III.png"
				expire = "1.1.1"
				ideology = national_populist_subtype
				traits = { sec_health_and_safety }
			}
		}
		else_if = {
			limit = { OR = { has_cosmetic_tag = GBP_Daisy has_cosmetic_tag = GBP_Daisy_England } }
			create_country_leader = {
				name = "Daisy I"
				picture = "gfx/leaders/ENG/Portrait_Britain_Daisy_Princess_of_Pless.png"
				expire = "1.1.1"
				ideology = social_democrat_subtype
				traits = { lobe_domestic_reformer }
			}
			create_country_leader = {
				name = "Daisy I"
				picture = "gfx/leaders/ENG/Portrait_Britain_Daisy_Princess_of_Pless.png"
				expire = "1.1.1"
				ideology = social_liberal_subtype
				traits = { lobe_domestic_reformer }
			}
			create_country_leader = {
				name = "Daisy I"
				picture = "gfx/leaders/ENG/Portrait_Britain_Daisy_Princess_of_Pless.png"
				expire = "1.1.1"
				ideology = market_liberal_subtype
				traits = { lobe_domestic_reformer }
			}
			create_country_leader = {
				name = "Daisy I"
				picture = "gfx/leaders/ENG/Portrait_Britain_Daisy_Princess_of_Pless.png"
				expire = "1.1.1"
				ideology = social_conservative_subtype
				traits = { lobe_domestic_reformer }
			}
			create_country_leader = {
				name = "Daisy I"
				picture = "gfx/leaders/ENG/Portrait_Britain_Daisy_Princess_of_Pless.png"
				expire = "1.1.1"
				ideology = authoritarian_democrat_subtype
				traits = { lobe_domestic_reformer }
			}
			create_country_leader = {
				name = "Daisy I"
				picture = "gfx/leaders/ENG/Portrait_Britain_Daisy_Princess_of_Pless.png"
				expire = "1.1.1"
				ideology = paternal_autocrat_subtype
				traits = { lobe_domestic_reformer }
			}
			create_country_leader = {
				name = "Daisy I"
				picture = "gfx/leaders/ENG/Portrait_Britain_Daisy_Princess_of_Pless.png"
				expire = "1.1.1"
				ideology = national_populist_subtype
				traits = { lobe_domestic_reformer }
			}
		}
		else = {
			create_country_leader = {
				name = "Hermann Balck"
				picture = "gfx/leaders/GER/Portrait_Germany_Hermann_Balck.png"
				expire = "1.1.1"
				ideology = social_democrat_subtype
				traits = { eco_tank_proponent }
			}
			create_country_leader = {
				name = "Hermann Balck"
				picture = "gfx/leaders/GER/Portrait_Germany_Hermann_Balck.png"
				expire = "1.1.1"
				ideology = social_liberal_subtype
				traits = { eco_tank_proponent }
			}
			create_country_leader = {
				name = "Hermann Balck"
				picture = "gfx/leaders/GER/Portrait_Germany_Hermann_Balck.png"
				expire = "1.1.1"
				ideology = market_liberal_subtype
				traits = { eco_tank_proponent }
			}
			create_country_leader = {
				name = "Hermann Balck"
				picture = "gfx/leaders/GER/Portrait_Germany_Hermann_Balck.png"
				expire = "1.1.1"
				ideology = social_conservative_subtype
				traits = { eco_tank_proponent }
			}
			create_country_leader = {
				name = "Hermann Balck"
				picture = "gfx/leaders/GER/Portrait_Germany_Hermann_Balck.png"
				expire = "1.1.1"
				ideology = authoritarian_democrat_subtype
				traits = { eco_tank_proponent }
			}
			create_country_leader = {
				name = "Hermann Balck"
				picture = "gfx/leaders/GER/Portrait_Germany_Hermann_Balck.png"
				expire = "1.1.1"
				ideology = paternal_autocrat_subtype
				traits = { eco_tank_proponent }
			}
			create_country_leader = {
				name = "Hermann Balck"
				picture = "gfx/leaders/GER/Portrait_Germany_Hermann_Balck.png"
				expire = "1.1.1"
				ideology = national_populist_subtype
				traits = { eco_tank_proponent }
			}
		}
	}
	if = {
		limit = { has_idea = GER_Paul_Lensch_hog_sde }
		GBP = { 
			set_politics = { ruling_party = social_democrat }
			set_country_leader_ideology = teetotalism_subtype
			add_ideas = GBP_John_Burns_hog_sde
			add_popularity = { ideology = social_democrat popularity = 0.3 }
		}
	}
	else_if = {
		limit = { has_idea = GER_Gustav_Noske_hog_sde }
		GBP = { 
			set_politics = { ruling_party = social_democrat }
			set_country_leader_ideology = authoritarian_social_democracy_subtype
			add_ideas = GBP_Harold_Nicolson_hog_sde
			add_popularity = { ideology = social_democrat popularity = 0.3 }
		}
	}
	else_if = {
		limit = { 
			OR = {
			has_idea = GER_Otto_Wels_hog_sde 
			has_idea = GER_Hans_Vogel_hog_sde 
			}
		}
		GBP = { 
			set_politics = { ruling_party = social_democrat }
			set_country_leader_ideology = social_democrat_subtype
			add_ideas = GBP_Arthur_Henderson_hog_sde
			add_popularity = { ideology = social_democrat popularity = 0.3 }
		}
	}
	else_if = {
		limit = { has_idea = GER_Friedrich_Meinecke_hog_sli }
		GBP = { 
			set_politics = { ruling_party = social_liberal }
			set_country_leader_ideology = soclib_internationalism_subtype
			add_ideas = GBP_E_H_Carr_hog_sli
			add_popularity = { ideology = social_liberal popularity = 0.3 }
		}
	}
	else_if = {
		limit = { has_idea = GER_Thomas_Mann_hog_sli }
		GBP = { 
			set_politics = { ruling_party = social_liberal }
			set_country_leader_ideology = cultural_mannism_subtype
			add_ideas = GBP_Erich_Heller_hog_sli
			add_popularity = { ideology = social_liberal popularity = 0.3 }
		}
	}
	else_if = {
		limit = { 
			OR = {
			has_idea = GER_Max_Weber_hog_mli 
			has_idea = GER_Marianne_Weber_hog_mli  
			has_idea = GER_Carl_Schmitt_hog_ade  
			}
		}
		GBP = { 
			set_politics = { ruling_party = social_liberal }
			set_country_leader_ideology = soclib_liberal_socialism_subtype
			add_ideas = GBP_T_H_Marshall_hog_sli
			add_popularity = { ideology = social_liberal popularity = 0.3 }
		}
	}
	else_if = {
		limit = { has_idea = GER_Gustav_Stresemann_hog_mli }
		GBP = { 
			set_politics = { ruling_party = social_liberal }
			set_country_leader_ideology = soclib_utopian_technocracy_subtype
			add_ideas = GBP_Frederick_Soddy_hog_sli
			add_popularity = { ideology = social_liberal popularity = 0.3 }
		}
	}
	else_if = {
		limit = { has_idea = GER_Walther_Rathenau_hog_sli }
		GBP = { 
			set_politics = { ruling_party = market_liberal }
			set_country_leader_ideology = progressive_democracy_subtype
			add_ideas = GBP_Alan_Blumlein_hog_mli
			add_popularity = { ideology = market_liberal popularity = 0.3 }
		}
	}
	else_if = {
		limit = { 
			OR = {
			has_idea = GER_Matthias_Erzberger_hog_sco 
			has_idea = GER_Heinrich_Bruening_hog_sco 
			}
		}
		GBP = { 
			set_politics = { ruling_party = market_liberal }
			set_country_leader_ideology = marlib_christian_democracy_subtype
			add_ideas = GBP_Hilaire_Belloc_hog_mli
			add_popularity = { ideology = market_liberal popularity = 0.3 }
		}
	}
	else_if = {
		limit = { 
			OR = {
			has_idea = GER_Ludwig_Kaas_hog_sco 
			has_idea = GER_Konrad_Adenauer_hog_sco 
			}
		}
		GBP = { 
			set_politics = { ruling_party = social_conservative }
			set_country_leader_ideology = soccon_paneuropeanism_subtype
			add_ideas = GBP_Christopher_Dawson_hog_sco
			add_popularity = { ideology = social_conservative popularity = 0.3 }
		}
	}
	else_if = {
		limit = { has_idea = GER_Hans_Schlange_Schoningen_hog_ade }
		GBP = { 
			set_politics = { ruling_party = social_conservative }
			set_country_leader_ideology = soccon_agrarianism_subtype
			add_ideas = GBP_Herbert_Matthews_hog_sco
			add_popularity = { ideology = social_conservative popularity = 0.3 }
		}
	}
	else_if = {
		limit = { has_idea = GER_Franz_von_Papen_hog_sco }
		GBP = { 
			set_politics = { ruling_party = authoritarian_democrat }
			set_country_leader_ideology = oligarchy_subtype
			add_ideas = GBP_Evelyn_Waugh_hog_ade
			add_popularity = { ideology = authoritarian_democrat popularity = 0.3 }
		}
	}
	else_if = {
		limit = { 
			OR = {
			has_idea = GER_Kuno_von_Westarp_hog_ade 	
			has_idea = GER_Manfred_Freiherr_von_Richthofen_hog_ade 
			has_idea = GER_Paul_von_Lettow_Vorbeck_hog_ade 
			}
		}
		GBP = { 
			set_politics = { ruling_party = paternal_autocrat }
			set_country_leader_ideology = pataut_theosophy_subtype
			add_ideas = GBP_R_B_D_Blakeney_hog_pau
			add_popularity = { ideology = paternal_autocrat popularity = 0.3 }
		}
	}
	else_if = {
		limit = { has_idea = GER_Kurt_von_Schleicher_hog_pau }
		GBP = { 
			set_politics = { ruling_party = paternal_autocrat }
			set_country_leader_ideology = crime_syndicate_subtype
			add_ideas = GBP_Billy_Hill_hog_pau
			add_popularity = { ideology = paternal_autocrat popularity = 0.3 }
		}
	}
	else_if = {
		limit = { has_idea = GER_Alfred_Hugenberg_hog_pau }
		GBP = { 
			set_politics = { ruling_party = national_populist }
			set_country_leader_ideology = nordicism_subtype
			add_ideas = GBP_Archibald_Maule_Ramsay_hog_npo
			add_popularity = { ideology = national_populist popularity = 0.3 }
		}
	}
	else_if = {
		limit = { has_idea = GER_Moeller_van_den_Bruck_hog_npo }
		GBP = { 
			set_politics = { ruling_party = national_populist }
			set_country_leader_ideology = natpop_social_credit_subtype
			add_ideas = GBP_Rolf_Gardiner_hog_npo
			add_popularity = { ideology = national_populist popularity = 0.3 }
		}
	}
	else_if = {
		limit = { 
			OR = {
			has_idea = GER_Erich_Ludendorff_hog_npo 
			has_idea = GER_Mathilde_Ludendorff_hog_npo 
			}
		}
		GBP = { 
			set_politics = { ruling_party = national_populist }
			set_country_leader_ideology = legionarism_subtype
			add_ideas = GBP_Arnold_Leese_hog_npo
			add_popularity = { ideology = national_populist popularity = 0.3 }
		}
	}
}

GER_Setup_British_Balkanized_President = {
	GBP = {
		set_party_name = {
			ideology = social_democrat
			long_name = GER_Administration_Britain_party_long
			name = GER_Administration_Britain_party
		}
		set_party_name = {
			ideology = social_liberal
			long_name = GER_Administration_Britain_party_long
			name = GER_Administration_Britain_party
		}
		set_party_name = {
			ideology = market_liberal
			long_name = GER_Administration_Britain_party_long
			name = GER_Administration_Britain_party
		}
		set_party_name = {
			ideology = social_conservative
			long_name = GER_Administration_Britain_party_long
			name = GER_Administration_Britain_party
		}
		set_party_name = {
			ideology = authoritarian_democrat
			long_name = GER_Administration_Britain_party_long
			name = GER_Administration_Britain_party
		}
		set_party_name = {
			ideology = paternal_autocrat
			long_name = GER_Administration_Britain_party_long
			name = GER_Administration_Britain_party
		}
		set_party_name = {
			ideology = national_populist
			long_name = GER_Administration_Britain_party_long
			name = GER_Administration_Britain_party
		}
		create_country_leader = {
			name = "Hugh Gaitskell"
			picture = "gfx/leaders/ENG/Portrait_Britain_Hugh_Gaitskell.png"
			expire = "1.1.1"
			ideology = liberal_socialism_subtype
		}
		create_country_leader = {
			name = "Herbert Samuel"
			picture = "gfx/leaders/ENG/Portrait_England_Herbert_Samuel.png"
			expire = "1.1.1"
			ideology = classical_liberalism_subtype
		}
		create_country_leader = {
			name = "Abraham England"
			picture = "gfx/leaders/ENG/Portrait_England_Abraham_England.png"
			expire = "1.1.1"
			ideology = marlib_classical_liberalism_subtype
		}
		create_country_leader = {
			name = "Harold MacMillan"
			picture = "gfx/leaders/ENG/Portrait_Britain_Harold_MacMillan.png"
			expire = "1.1.1"
			ideology = toryism_subtype
		}
		create_country_leader = {
			name = "Percy Hobart"
			picture = "gfx/leaders/BRG/Portrait_BRG_Percy_Hobart.png"
			expire = "1.1.1"
			ideology = authdem_toryism_subtype
		}
		create_country_leader = {
			name = "Archibald Maule Ramsay"
			picture = "gfx/leaders/BRG/Portrait_BRG_Archibald_Ramsay_Civilian.png"
			expire = "1.1.1"
			ideology = neo_feudalism_subtype 
		}
		create_country_leader = {
			name = "William Joyce"
			picture = "gfx/leaders/BRG/Portrait_BRG_William_Joyce.png"
			expire = "1.1.1"
			ideology = legionarism_subtype 
		}
	}
	if = {
		limit = { has_government = social_democrat }
		GBP = { set_politics = { ruling_party = social_democrat } add_popularity = { ideology = social_democrat popularity = 0.3 } }
	}
	else_if = {
		limit = { has_government = social_liberal }
		GBP = { set_politics = { ruling_party = social_liberal } add_popularity = { ideology = social_liberal popularity = 0.3 } }
	}
	else_if = {
		limit = { has_government = market_liberal }
		GBP = { set_politics = { ruling_party = market_liberal } add_popularity = { ideology = market_liberal popularity = 0.3 } }
	}
	else_if = {
		limit = { has_government = social_conservative }
		GBP = { set_politics = { ruling_party = social_conservative } add_popularity = { ideology = social_conservative popularity = 0.3 } }
	}
	else_if = {
		limit = { has_government = authoritarian_democrat }
		GBP = { set_politics = { ruling_party = authoritarian_democrat } add_popularity = { ideology = authoritarian_democrat popularity = 0.3 } }
	}
	else_if = {
		limit = { has_government = paternal_autocrat }
		GBP = { set_politics = { ruling_party = paternal_autocrat } add_popularity = { ideology = paternal_autocrat popularity = 0.3 } }
	}
	else_if = {
		limit = { has_government = national_populist }
		GBP = { set_politics = { ruling_party = national_populist } add_popularity = { ideology = national_populist popularity = 0.3 } }
	}
	GBP = { add_ideas = GBP_Hermann_Balck_hog_pau }
}

GER_Setup_British_Balkanized_PM = {
	GBP = {
		set_party_name = {
			ideology = social_democrat
			long_name = GER_Administration_Britain_party_long
			name = GER_Administration_Britain_party
		}
		set_party_name = {
			ideology = social_liberal
			long_name = GER_Administration_Britain_party_long
			name = GER_Administration_Britain_party
		}
		set_party_name = {
			ideology = market_liberal
			long_name = GER_Administration_Britain_party_long
			name = GER_Administration_Britain_party
		}
		set_party_name = {
			ideology = social_conservative
			long_name = GER_Administration_Britain_party_long
			name = GER_Administration_Britain_party
		}
		set_party_name = {
			ideology = authoritarian_democrat
			long_name = GER_Administration_Britain_party_long
			name = GER_Administration_Britain_party
		}
		set_party_name = {
			ideology = paternal_autocrat
			long_name = GER_Administration_Britain_party_long
			name = GER_Administration_Britain_party
		}
		set_party_name = {
			ideology = national_populist
			long_name = GER_Administration_Britain_party_long
			name = GER_Administration_Britain_party
		}
        if = {
			limit = { OR = { has_cosmetic_tag = GBP_Charles has_cosmetic_tag = GBP_Charles_England } }
			create_country_leader = {
				name = "Charles III"
				picture = "gfx/leaders/ENG/Portrait_Britain_Charles_III.png"
				expire = "1.1.1"
				ideology = social_democrat_subtype
				traits = { sec_health_and_safety }
			}
			create_country_leader = {
				name = "Charles III"
				picture = "gfx/leaders/ENG/Portrait_Britain_Charles_III.png"
				expire = "1.1.1"
				ideology = social_liberal_subtype
				traits = { sec_health_and_safety }
			}
			create_country_leader = {
				name = "Charles III"
				picture = "gfx/leaders/ENG/Portrait_Britain_Charles_III.png"
				expire = "1.1.1"
				ideology = market_liberal_subtype
				traits = { sec_health_and_safety }
			}
			create_country_leader = {
				name = "Charles III"
				picture = "gfx/leaders/ENG/Portrait_Britain_Charles_III.png"
				expire = "1.1.1"
				ideology = social_conservative_subtype
				traits = { sec_health_and_safety }
			}
			create_country_leader = {
				name = "Charles III"
				picture = "gfx/leaders/ENG/Portrait_Britain_Charles_III.png"
				expire = "1.1.1"
				ideology = authoritarian_democrat_subtype
				traits = { sec_health_and_safety }
			}
			create_country_leader = {
				name = "Charles III"
				picture = "gfx/leaders/ENG/Portrait_Britain_Charles_III.png"
				expire = "1.1.1"
				ideology = paternal_autocrat_subtype
				traits = { sec_health_and_safety }
			}
			create_country_leader = {
				name = "Charles III"
				picture = "gfx/leaders/ENG/Portrait_Britain_Charles_III.png"
				expire = "1.1.1"
				ideology = national_populist_subtype
				traits = { sec_health_and_safety }
			}
		}
		else_if = {
			limit = { OR = { has_cosmetic_tag = GBP_Daisy has_cosmetic_tag = GBP_Daisy_England } }
			create_country_leader = {
				name = "Daisy I"
				picture = "gfx/leaders/ENG/Portrait_Britain_Daisy_Princess_of_Pless.png"
				expire = "1.1.1"
				ideology = social_democrat_subtype
				traits = { lobe_domestic_reformer }
			}
			create_country_leader = {
				name = "Daisy I"
				picture = "gfx/leaders/ENG/Portrait_Britain_Daisy_Princess_of_Pless.png"
				expire = "1.1.1"
				ideology = social_liberal_subtype
				traits = { lobe_domestic_reformer }
			}
			create_country_leader = {
				name = "Daisy I"
				picture = "gfx/leaders/ENG/Portrait_Britain_Daisy_Princess_of_Pless.png"
				expire = "1.1.1"
				ideology = market_liberal_subtype
				traits = { lobe_domestic_reformer }
			}
			create_country_leader = {
				name = "Daisy I"
				picture = "gfx/leaders/ENG/Portrait_Britain_Daisy_Princess_of_Pless.png"
				expire = "1.1.1"
				ideology = social_conservative_subtype
				traits = { lobe_domestic_reformer }
			}
			create_country_leader = {
				name = "Daisy I"
				picture = "gfx/leaders/ENG/Portrait_Britain_Daisy_Princess_of_Pless.png"
				expire = "1.1.1"
				ideology = authoritarian_democrat_subtype
				traits = { lobe_domestic_reformer }
			}
			create_country_leader = {
				name = "Daisy I"
				picture = "gfx/leaders/ENG/Portrait_Britain_Daisy_Princess_of_Pless.png"
				expire = "1.1.1"
				ideology = paternal_autocrat_subtype
				traits = { lobe_domestic_reformer }
			}
			create_country_leader = {
				name = "Daisy I"
				picture = "gfx/leaders/ENG/Portrait_Britain_Daisy_Princess_of_Pless.png"
				expire = "1.1.1"
				ideology = national_populist_subtype
				traits = { lobe_domestic_reformer }
			}
		}
		else = {
			create_country_leader = {
				name = "Hermann Balck"
				picture = "gfx/leaders/GER/Portrait_Germany_Hermann_Balck.png"
				expire = "1.1.1"
				ideology = social_democrat_subtype
				traits = { eco_tank_proponent }
			}
			create_country_leader = {
				name = "Hermann Balck"
				picture = "gfx/leaders/GER/Portrait_Germany_Hermann_Balck.png"
				expire = "1.1.1"
				ideology = social_liberal_subtype
				traits = { eco_tank_proponent }
			}
			create_country_leader = {
				name = "Hermann Balck"
				picture = "gfx/leaders/GER/Portrait_Germany_Hermann_Balck.png"
				expire = "1.1.1"
				ideology = market_liberal_subtype
				traits = { eco_tank_proponent }
			}
			create_country_leader = {
				name = "Hermann Balck"
				picture = "gfx/leaders/GER/Portrait_Germany_Hermann_Balck.png"
				expire = "1.1.1"
				ideology = social_conservative_subtype
				traits = { eco_tank_proponent }
			}
			create_country_leader = {
				name = "Hermann Balck"
				picture = "gfx/leaders/GER/Portrait_Germany_Hermann_Balck.png"
				expire = "1.1.1"
				ideology = authoritarian_democrat_subtype
				traits = { eco_tank_proponent }
			}
			create_country_leader = {
				name = "Hermann Balck"
				picture = "gfx/leaders/GER/Portrait_Germany_Hermann_Balck.png"
				expire = "1.1.1"
				ideology = paternal_autocrat_subtype
				traits = { eco_tank_proponent }
			}
			create_country_leader = {
				name = "Hermann Balck"
				picture = "gfx/leaders/GER/Portrait_Germany_Hermann_Balck.png"
				expire = "1.1.1"
				ideology = national_populist_subtype
				traits = { eco_tank_proponent }
			}
		}
	}
	if = {
		limit = { has_government = social_democrat }
		GBP = { set_politics = { ruling_party = social_democrat } add_popularity = { ideology = social_democrat popularity = 0.3 } }
	}
	else_if = {
		limit = { has_government = social_liberal }
		GBP = { set_politics = { ruling_party = social_liberal } add_popularity = { ideology = social_liberal popularity = 0.3 } }
	}
	else_if = {
		limit = { has_government = market_liberal }
		GBP = { set_politics = { ruling_party = market_liberal } add_popularity = { ideology = market_liberal popularity = 0.3 } }
	}
	else_if = {
		limit = { has_government = social_conservative }
		GBP = { set_politics = { ruling_party = social_conservative } add_popularity = { ideology = social_conservative popularity = 0.3 } }
	}
	else_if = {
		limit = { has_government = authoritarian_democrat }
		GBP = { set_politics = { ruling_party = authoritarian_democrat } add_popularity = { ideology = authoritarian_democrat popularity = 0.3 } }
	}
	else_if = {
		limit = { has_government = paternal_autocrat }
		GBP = { set_politics = { ruling_party = paternal_autocrat } add_popularity = { ideology = paternal_autocrat popularity = 0.3 } }
	}
	else_if = {
		limit = { has_government = national_populist }
		GBP = { set_politics = { ruling_party = national_populist } add_popularity = { ideology = national_populist popularity = 0.3 } }
	}
}

GER_Setup_Russian_Collabos_President = {
	RPG = {
		set_party_name = {
			ideology = social_democrat
			long_name = GER_Administration_Russia_party_long
			name = GER_Administration_Russia_party
		}
		set_party_name = {
			ideology = social_liberal
			long_name = GER_Administration_Russia_party_long
			name = GER_Administration_Russia_party
		}
		set_party_name = {
			ideology = market_liberal
			long_name = GER_Administration_Russia_party_long
			name = GER_Administration_Russia_party
		}
		set_party_name = {
			ideology = social_conservative
			long_name = GER_Administration_Russia_party_long
			name = GER_Administration_Russia_party
		}
		set_party_name = {
			ideology = authoritarian_democrat
			long_name = GER_Administration_Russia_party_long
			name = GER_Administration_Russia_party
		}
		set_party_name = {
			ideology = paternal_autocrat
			long_name = GER_Administration_Russia_party_long
			name = GER_Administration_Russia_party
		}
		set_party_name = {
			ideology = national_populist
			long_name = GER_Administration_Russia_party_long
			name = GER_Administration_Russia_party
		}
	}
	if = {
		limit = { has_idea = GER_Paul_Lensch_hog_sde }
		RPG = { 
			set_politics = { ruling_party = social_democrat }
			create_country_leader = {
				name = "Alexander Parvus"
				picture = "gfx/leaders/RUS/Portrait_RUS_Alexander_Parvus.png"
				expire = "1.1.1"
				ideology = lenschian_tendency_subtype
				traits = { hog_spiritual_leader }
			}
			add_popularity = { ideology = social_democrat popularity = 0.3 }
		}
	}
	else_if = {
		limit = { has_idea = GER_Gustav_Noske_hog_sde }
		RPG = { 
			set_politics = { ruling_party = social_democrat }
			create_country_leader = {
				name = "Vladimir Groman"
				picture = "gfx/leaders/RUS/Portrait_RUS_Vladimir_Groman.png"
				expire = "1.1.1"
				ideology = socdem_agrarianism_subtype
				traits = { eco_teleological_planner }
			}
			add_popularity = { ideology = social_democrat popularity = 0.3 }
		}
	}
	else_if = {
		limit = { 
			OR = {
			has_idea = GER_Otto_Wels_hog_sde 
			has_idea = GER_Hans_Vogel_hog_sde 
			}
		}
		RPG = { 
			set_politics = { ruling_party = social_democrat }
			create_country_leader = {
				name = "Irakli Tsereteli"
				picture = "gfx/leaders/RUS/Portrait_RUS_Irakliy_Tsereteli.png"
				expire = "1.1.1"
				ideology = revisionist_marxism_subtype
				traits = { hog_reformist_socialist }
			}
			add_popularity = { ideology = social_democrat popularity = 0.3 }
		}
	}
	else_if = {
		limit = { 
			OR = {
			has_idea = GER_Friedrich_Meinecke_hog_sli
			has_idea = GER_Thomas_Mann_hog_sli
			}
		}
		RPG = { 
			set_politics = { ruling_party = social_liberal }
			create_country_leader = {
				name = "Pitirim Sorokin"
				picture = "gfx/leaders/RUS/Portrait_RUS_Pitirim_Sorokin.png"
				expire = "1.1.1"
				ideology = centrist_subtype
				traits = { hog_scholar }
			}
			add_popularity = { ideology = social_liberal popularity = 0.3 }
		}
	}
	else_if = {
		limit = { has_idea = GER_Hans_Schlange_Schoningen_hog_ade }
		RPG = { 
			set_politics = { ruling_party = social_liberal }
			create_country_leader = {
				name = "Vladimir Vernadsky"
				picture = "gfx/leaders/RUS/Portrait_RUS_Vladimir_Vernadsky.png"
				expire = "1.1.1"
				ideology = soclib_agrarianism_subtype
				traits = { eco_resource_industrialist }
			}
			add_popularity = { ideology = social_liberal popularity = 0.3 }
		}
	}
	else_if = {
		limit = { 
			OR = {
			has_idea = GER_Max_Weber_hog_mli 
			has_idea = GER_Marianne_Weber_hog_mli  
			has_idea = GER_Carl_Schmitt_hog_ade  
			}
		}
		RPG = { 
			set_politics = { ruling_party = market_liberal }
			create_country_leader = {
				name = "Nikolay Lossky"
				picture = "gfx/leaders/RUS/Portrait_RUS_Nikolay_Lossky.png"
				expire = "1.1.1"
				ideology = liberalism_spirit_subtype
				traits = { lama_natural_philosopher }
			}
			add_popularity = { ideology = market_liberal popularity = 0.3 }
		}
	}
	else_if = {
		limit = { has_idea = GER_Gustav_Stresemann_hog_mli }
		RPG = { 
			set_politics = { ruling_party = market_liberal }
			create_country_leader = {
				name = "Alexandr Fedotov"
				picture = "gfx/leaders/RUS/Portrait_RUS_Alexandr_Fedotov.png"
				expire = "1.1.1"
				ideology = humanistic_capitalism_subtype
				traits = { for_apologetic_clerk }
			}
			add_popularity = { ideology = market_liberal popularity = 0.3 }
		}
	}
	else_if = {
		limit = { 
			OR = {
			has_idea = GER_Matthias_Erzberger_hog_sco
			has_idea = GER_Heinrich_Bruening_hog_sco
			has_idea = GER_Ludwig_Kaas_hog_sco 
			has_idea = GER_Konrad_Adenauer_hog_sco 
			}
		}
		RPG = { 
			set_politics = { ruling_party = social_conservative }
			create_country_leader = {
				name = "Aloiziy Kappes"
				picture = "gfx/leaders/RUS/Portrait_RUS_Aloiziy_Kappes.png"
				expire = "1.1.1"
				ideology = christian_democracy_subtype
				traits = { eco_pious_entrepreneur }
			}
			add_popularity = { ideology = social_conservative popularity = 0.3 }
		}
	}
	else_if = {
		limit = { has_idea = GER_Kurt_von_Schleicher_hog_pau }
		RPG = { 
			set_politics = { ruling_party = authoritarian_democrat }
			create_country_leader = {
				name = "Konstantin Globachyov"
				picture = "gfx/leaders/RUS/Portrait_RUS_Konstantin_Globachyov.png"
				expire = "1.1.1"
				ideology = police_state_subtype
				traits = { sec_secret_police_chief }
			}
			add_popularity = { ideology = authoritarian_democrat popularity = 0.3 }
		}
	}
	else_if = {
		limit = { has_idea = GER_Walther_Rathenau_hog_sli }
		RPG = { 
			set_politics = { ruling_party = paternal_autocrat }
			create_country_leader = {
				name = "Genrikh Graftio"
				picture = "gfx/leaders/RUS/Portrait_RUS_Genrikh_Graftio.png"
				expire = "1.1.1"
				ideology = right_technocracy_subtype
				traits = { SOV_commissar_of_heavy_industry }
			}
			add_popularity = { ideology = paternal_autocrat popularity = 0.3 }
		}
	}
	else_if = {
		limit = { 
			OR = {
			has_idea = GER_Kuno_von_Westarp_hog_ade 
			has_idea = GER_Franz_von_Papen_hog_sco
			}
		}
		RPG = { 
			set_politics = { ruling_party = paternal_autocrat }
			create_country_leader = {
				name = "Vasily Biskupsky"
				picture = "gfx/leaders/RUS/Portrait_RUS_Vasily_Biskupsky.png"
				expire = "1.1.1"
				ideology = pataut_oligarchy_subtype
				traits = { hog_monarchist_loyalist }
			}
			add_popularity = { ideology = paternal_autocrat popularity = 0.3 }
		}
	}
	else_if = {
		limit = { 
			OR = {
			has_idea = GER_Manfred_Freiherr_von_Richthofen_hog_ade 
			has_idea = GER_Paul_von_Lettow_Vorbeck_hog_ade 
			}
		}
		RPG = { 
			set_politics = { ruling_party = paternal_autocrat }
			create_country_leader = {
				name = "Pavel Bermondt-Avalov"
				picture = "gfx/leaders/RUS/Portrait_RUS_Pavel_Bermondt_Avalov.png"
				expire = "1.1.1"
				ideology = junta_subtype
				traits = { hog_supreme_ruler }
			}
			add_popularity = { ideology = paternal_autocrat popularity = 0.3 }
		}
	}
	else_if = {
		limit = { has_idea = GER_Alfred_Hugenberg_hog_pau }
		RPG = { 
			set_politics = { ruling_party = national_populist }
			create_country_leader = {
				name = "Nikolai Markov"
				picture = "gfx/leaders/RUS/Portrait_RUS_Nikolay_Markov.png"
				expire = "1.1.1"
				ideology = legionarism_subtype
				traits = { hog_populist_reactionary }
			}
			add_popularity = { ideology = national_populist popularity = 0.3 }
		}
	}
	else_if = {
		limit = { has_idea = GER_Moeller_van_den_Bruck_hog_npo }
		RPG = { 
			set_politics = { ruling_party = national_populist }
			create_country_leader = {
				name = "Arkady Stolypin"
				picture = "gfx/leaders/RUS/Portrait_RUS_Arkady_Stolypin.png"
				expire = "1.1.1"
				ideology = solidarism_subtype
				traits = { SOV_peasant_propagandist }
			}
			add_popularity = { ideology = national_populist popularity = 0.3 }
		}
	}
	else_if = {
		limit = { 
			OR = {
			has_idea = GER_Erich_Ludendorff_hog_npo 
			has_idea = GER_Mathilde_Ludendorff_hog_npo 
			}
		}
		RPG = { 
			set_politics = { ruling_party = national_populist }
			create_country_leader = {
				name = "Nikolai Nazarenko"
				picture = "gfx/leaders/RUS/Portrait_RUS_Nikolai_Nazarenko.png"
				expire = "1.1.1"
				ideology = militarism_subtype
				traits = { RUS_cossack_ataman }
			}
			add_popularity = { ideology = national_populist popularity = 0.3 }
		}
	}
    RPG = { add_ideas = RPG_Fedor_von_Bock_hog_pau }
}

GER_Setup_Russian_Collabos_PM = {
	RPG = {
		set_party_name = {
			ideology = social_democrat
			long_name = GER_Administration_Russia_party_long
			name = GER_Administration_Russia_party
		}
		set_party_name = {
			ideology = social_liberal
			long_name = GER_Administration_Russia_party_long
			name = GER_Administration_Russia_party
		}
		set_party_name = {
			ideology = market_liberal
			long_name = GER_Administration_Russia_party_long
			name = GER_Administration_Russia_party
		}
		set_party_name = {
			ideology = social_conservative
			long_name = GER_Administration_Russia_party_long
			name = GER_Administration_Russia_party
		}
		set_party_name = {
			ideology = authoritarian_democrat
			long_name = GER_Administration_Russia_party_long
			name = GER_Administration_Russia_party
		}
		set_party_name = {
			ideology = paternal_autocrat
			long_name = GER_Administration_Russia_party_long
			name = GER_Administration_Russia_party
		}
		set_party_name = {
			ideology = national_populist
			long_name = GER_Administration_Russia_party_long
			name = GER_Administration_Russia_party
		}
		if = {
			limit = { has_cosmetic_tag = RPG_Eitel }
			create_country_leader = {
				name = "Eitel I"
				picture = "gfx/leaders/GER/Portrait_Germany_Prince_Eitel_Friedrich.png"
				expire = "1.1.1"
				ideology = social_democrat_subtype
				traits = { hog_the_prince }
			}
			create_country_leader = {
				name = "Eitel I"
				picture = "gfx/leaders/GER/Portrait_Germany_Prince_Eitel_Friedrich.png"
				expire = "1.1.1"
				ideology = social_liberal_subtype
				traits = { hog_the_prince }
			}
			create_country_leader = {
				name = "Eitel I"
				picture = "gfx/leaders/GER/Portrait_Germany_Prince_Eitel_Friedrich.png"
				expire = "1.1.1"
				ideology = market_liberal_subtype
				traits = { hog_the_prince }
			}
			create_country_leader = {
				name = "Eitel I"
				picture = "gfx/leaders/GER/Portrait_Germany_Prince_Eitel_Friedrich.png"
				expire = "1.1.1"
				ideology = social_conservative_subtype
				traits = { hog_the_prince }
			}
			create_country_leader = {
				name = "Eitel I"
				picture = "gfx/leaders/GER/Portrait_Germany_Prince_Eitel_Friedrich.png"
				expire = "1.1.1"
				ideology = authoritarian_democrat_subtype
				traits = { hog_the_prince }
			}
			create_country_leader = {
				name = "Eitel I"
				picture = "gfx/leaders/GER/Portrait_Germany_Prince_Eitel_Friedrich.png"
				expire = "1.1.1"
				ideology = paternal_autocrat_subtype
				traits = { hog_the_prince }
			}
			create_country_leader = {
				name = "Eitel I"
				picture = "gfx/leaders/GER/Portrait_Germany_Prince_Eitel_Friedrich.png"
				expire = "1.1.1"
				ideology = national_populist_subtype
				traits = { hog_the_prince }
			}
		}
		else_if = {
			limit = { has_cosmetic_tag = RPG_Louis_Ferdinand }
			create_country_leader = {
				name = "Ivan VII"
				picture = "gfx/leaders/RUS/Portrait_RUS_Louis_Ferdinand.png"
				expire = "1.1.1"
				ideology = social_democrat_subtype
				traits = { hog_imperial_prince }
			}
			create_country_leader = {
				name = "Ivan VII"
				picture = "gfx/leaders/RUS/Portrait_RUS_Louis_Ferdinand.png"
				expire = "1.1.1"
				ideology = social_liberal_subtype
				traits = { hog_imperial_prince }
			}
			create_country_leader = {
				name = "Ivan VII"
				picture = "gfx/leaders/RUS/Portrait_RUS_Louis_Ferdinand.png"
				expire = "1.1.1"
				ideology = market_liberal_subtype
				traits = { hog_imperial_prince }
			}
			create_country_leader = {
				name = "Ivan VII"
				picture = "gfx/leaders/RUS/Portrait_RUS_Louis_Ferdinand.png"
				expire = "1.1.1"
				ideology = social_conservative_subtype
				traits = { hog_imperial_prince }
			}
			create_country_leader = {
				name = "Ivan VII"
				picture = "gfx/leaders/RUS/Portrait_RUS_Louis_Ferdinand.png"
				expire = "1.1.1"
				ideology = authoritarian_democrat_subtype
				traits = { hog_imperial_prince }
			}
			create_country_leader = {
				name = "Ivan VII"
				picture = "gfx/leaders/RUS/Portrait_RUS_Louis_Ferdinand.png"
				expire = "1.1.1"
				ideology = paternal_autocrat_subtype
				traits = { hog_imperial_prince }
			}
			create_country_leader = {
				name = "Ivan VII"
				picture = "gfx/leaders/RUS/Portrait_RUS_Louis_Ferdinand.png"
				expire = "1.1.1"
				ideology = national_populist_subtype
				traits = { hog_imperial_prince }
			}
		}
		else = {
			create_country_leader = {
				name = "Fedor von Bock"
				picture = "gfx/leaders/GER/Portrait_Germany_Fedor_Bock_kr.png"
				expire = "1.1.1"
				ideology = social_democrat_subtype
				traits = { hog_the_paladin }
			}
			create_country_leader = {
				name = "Fedor von Bock"
				picture = "gfx/leaders/GER/Portrait_Germany_Fedor_Bock_kr.png"
				expire = "1.1.1"
				ideology = social_liberal_subtype
				traits = { hog_the_paladin }
			}
			create_country_leader = {
				name = "Fedor von Bock"
				picture = "gfx/leaders/GER/Portrait_Germany_Fedor_Bock_kr.png"
				expire = "1.1.1"
				ideology = market_liberal_subtype
				traits = { hog_the_paladin }
			}
			create_country_leader = {
				name = "Fedor von Bock"
				picture = "gfx/leaders/GER/Portrait_Germany_Fedor_Bock_kr.png"
				expire = "1.1.1"
				ideology = social_conservative_subtype
				traits = { hog_the_paladin }
			}
			create_country_leader = {
				name = "Fedor von Bock"
				picture = "gfx/leaders/GER/Portrait_Germany_Fedor_Bock_kr.png"
				expire = "1.1.1"
				ideology = authoritarian_democrat_subtype
				traits = { hog_the_paladin }
			}
			create_country_leader = {
				name = "Fedor von Bock"
				picture = "gfx/leaders/GER/Portrait_Germany_Fedor_Bock_kr.png"
				expire = "1.1.1"
				ideology = paternal_autocrat_subtype
				traits = { hog_the_paladin }
			}
			create_country_leader = {
				name = "Fedor von Bock"
				picture = "gfx/leaders/GER/Portrait_Germany_Fedor_Bock_kr.png"
				expire = "1.1.1"
				ideology = national_populist_subtype
				traits = { hog_the_paladin }
			}
		}
	}
	if = {
		limit = { has_idea = GER_Paul_Lensch_hog_sde }
		RPG = { 
			set_politics = { ruling_party = social_democrat }
			set_country_leader_ideology = lenschian_tendency_subtype
			add_ideas = RPG_Alexander_Parvus_hog_sde
			add_popularity = { ideology = social_democrat popularity = 0.3 }
		}
	}
	else_if = {
		limit = { has_idea = GER_Gustav_Noske_hog_sde }
		RPG = { 
			set_politics = { ruling_party = social_democrat }
			set_country_leader_ideology = socdem_agrarianism_subtype
			add_ideas = RPG_Vladimir_Groman_hog_sde
			add_popularity = { ideology = social_democrat popularity = 0.3 }
		}
	}
	else_if = {
		limit = { 
			OR = {
			has_idea = GER_Otto_Wels_hog_sde 
			has_idea = GER_Hans_Vogel_hog_sde 
			}
		}
		RPG = { 
			set_politics = { ruling_party = social_democrat }
			set_country_leader_ideology = revisionist_marxism_subtype
			add_ideas = RPG_Irakli_Tsereteli_hog_sde
			add_popularity = { ideology = social_democrat popularity = 0.3 }
		}
	}
	else_if = {
		limit = { 
			OR = {
			has_idea = GER_Friedrich_Meinecke_hog_sli
			has_idea = GER_Thomas_Mann_hog_sli
			}
		}
		RPG = { 
			set_politics = { ruling_party = social_liberal }
			set_country_leader_ideology = centrist_subtype
			add_ideas = RPG_Pitirim_Sorokin_hog_sli
			add_popularity = { ideology = social_liberal popularity = 0.3 }
		}
	}
	else_if = {
		limit = { has_idea = GER_Hans_Schlange_Schoningen_hog_ade }
		RPG = { 
			set_politics = { ruling_party = social_liberal }
			set_country_leader_ideology = soclib_agrarianism_subtype
			add_ideas = RPG_Vladimir_Vernadsky_hog_sli
			add_popularity = { ideology = social_liberal popularity = 0.3 }
		}
	}
	else_if = {
		limit = { 
			OR = {
			has_idea = GER_Max_Weber_hog_mli 
			has_idea = GER_Marianne_Weber_hog_mli  
			has_idea = GER_Carl_Schmitt_hog_ade  
			}
		}
		RPG = { 
			set_politics = { ruling_party = market_liberal }
			set_country_leader_ideology = liberalism_spirit_subtype
			add_ideas = RPG_Nikolay_Lossky_hog_mli
			add_popularity = { ideology = market_liberal popularity = 0.3 }
		}
	}
	else_if = {
		limit = { has_idea = GER_Gustav_Stresemann_hog_mli }
		RPG = { 
			set_politics = { ruling_party = market_liberal }
			set_country_leader_ideology = humanistic_capitalism_subtype
			add_ideas = RPG_Alexandr_Fedotov_hog_mli
			add_popularity = { ideology = market_liberal popularity = 0.3 }
		}
	}
	else_if = {
		limit = { 
			OR = {
			has_idea = GER_Matthias_Erzberger_hog_sco
			has_idea = GER_Heinrich_Bruening_hog_sco
			has_idea = GER_Ludwig_Kaas_hog_sco 
			has_idea = GER_Konrad_Adenauer_hog_sco 
			}
		}
		RPG = { 
			set_politics = { ruling_party = social_conservative }
			set_country_leader_ideology = christian_democracy_subtype
			add_ideas = RPG_Aloiziy_Kappes_hog_sco
			add_popularity = { ideology = social_conservative popularity = 0.3 }
		}
	}
	else_if = {
		limit = { has_idea = GER_Kurt_von_Schleicher_hog_pau }
		RPG = { 
			set_politics = { ruling_party = authoritarian_democrat }
			set_country_leader_ideology = police_state_subtype
			add_ideas = RPG_Konstantin_Globachyov_ade
			add_popularity = { ideology = authoritarian_democrat popularity = 0.3 }
		}
	}
	else_if = {
		limit = { has_idea = GER_Walther_Rathenau_hog_sli }
		RPG = { 
			set_politics = { ruling_party = paternal_autocrat }
			set_country_leader_ideology = right_technocracy_subtype
			add_ideas = RPG_Genrikh_Graftio_hog_pau
			add_popularity = { ideology = paternal_autocrat popularity = 0.3 }
		}
	}
	else_if = {
		limit = { 
			OR = {
			has_idea = GER_Kuno_von_Westarp_hog_ade 
			has_idea = GER_Franz_von_Papen_hog_sco
			}
		}
		RPG = { 
			set_politics = { ruling_party = paternal_autocrat }
			set_country_leader_ideology = pataut_oligarchy_subtype
			add_ideas = RPG_Vasily_Biskupsky_hog_pau
			add_popularity = { ideology = paternal_autocrat popularity = 0.3 }
		}
	}
	else_if = {
		limit = { 
			OR = {
			has_idea = GER_Manfred_Freiherr_von_Richthofen_hog_ade 
			has_idea = GER_Paul_von_Lettow_Vorbeck_hog_ade 
			}
		}
		RPG = { 
			set_politics = { ruling_party = paternal_autocrat }
			set_country_leader_ideology = junta_subtype
			add_ideas = RPG_Pavel_Bermondt_Avalov_hog_pau
			add_popularity = { ideology = paternal_autocrat popularity = 0.3 }
		}
	}
	else_if = {
		limit = { has_idea = GER_Alfred_Hugenberg_hog_pau }
		RPG = { 
			set_politics = { ruling_party = national_populist }
			set_country_leader_ideology = legionarism_subtype
			add_ideas = RPG_Nikolai_Markov_hog_npo
			add_popularity = { ideology = national_populist popularity = 0.3 }
		}
	}
	else_if = {
		limit = { has_idea = GER_Moeller_van_den_Bruck_hog_npo }
		RPG = { 
			set_politics = { ruling_party = national_populist }
			set_country_leader_ideology = solidarism_subtype
			add_ideas = RPG_Arkady_Stolypin_hog_npo
			add_popularity = { ideology = national_populist popularity = 0.3 }
		}
	}
	else_if = {
		limit = { 
			OR = {
			has_idea = GER_Erich_Ludendorff_hog_npo 
			has_idea = GER_Mathilde_Ludendorff_hog_npo 
			}
		}
		RPG = { 
			set_politics = { ruling_party = national_populist }
			set_country_leader_ideology = militarism_subtype
			add_ideas = RPG_Nikolai_Nazarenko_hog_npo
			add_popularity = { ideology = national_populist popularity = 0.3 }
		}
	}
}

GER_Setup_Neustria_Zone = {
	create_dynamic_country = {
		original_tag = NRM
		transfer_state = 980
		transfer_state = 17
		add_state_core = 980
		add_state_core = 17
		set_cosmetic_tag = NST
		set_war_support = 0.3
		set_stability = 0.35
		set_popularities = {
			totalist = 0
			radical_socialist = 0
			syndicalist = 0
			social_democrat = 0
			social_liberal = 0
			market_liberal = 0
			social_conservative = 0
			authoritarian_democrat = 0
			paternal_autocrat = 100
			national_populist = 0
		}
		set_politics = {
			ruling_party = paternal_autocrat
			elections_allowed = no
		}
		set_party_name = {
			ideology = paternal_autocrat
			name = GER_Neustria_party
			long_name = GER_Neustria_party_long
		}
		create_country_leader = {
			name = "Pierre Pucheu"
			picture = "gfx/leaders/FRP/Portrait_France_Pierre_Pucheu.png"
			expire = "1.1.1"
			ideology = right_technocracy_subtype
		}
		add_ideas = GER_Neustria_Industrial_Zone
	}
	GER = {
		set_autonomy = {
			target = 980.owner
			autonomous_state = kr_integrated_puppet
			freedom_level = 0.75
		}
	}
	var:980.owner = { 
		add_popularity = {
			ideology = paternal_autocrat
			popularity = 1
		}
		set_politics = {
			ruling_party = paternal_autocrat
			elections_allowed = no
		} 
		add_to_array = { global.european_tags_array = THIS }
	}
}

GER_Refresh_Political_Ideas = {
	custom_effect_tooltip = GER_Refresh_Political_Ideas_tooltip
	
	hidden_effect = {
		# PatAut Removal
		if = {
			limit = {
				NOT = { has_government = paternal_autocrat }
			}
			remove_ideas = {
				GER_baton_autocracy_idea
				GER_popular_autocracy_idea
				GER_kampffront_idea
				GER_verband_idea
				GER_ostsiedlung_idea
			}
		}
	
		# PatAut Re-Elected
		else_if = {
			limit = { 
				has_government = paternal_autocrat
				NOT = {
					OR = {
						has_idea = GER_baton_autocracy_idea
						has_idea = GER_popular_autocracy_idea
						has_idea = GER_kampffront_idea
						has_idea = GER_verband_idea
						has_idea = GER_ostsiedlung_idea
					}
				}
			}
			if = {
				limit = { has_completed_focus = GER_Baton_Built_Consent }
				add_ideas = GER_baton_autocracy_idea
			}
			if = {
				limit = { has_completed_focus = GER_Autocracy_by_Demand }
				add_ideas = GER_popular_autocracy_idea
			}
			if = {
				limit = { has_completed_focus = GER_Kampffront_Schwarz_Weiss_Rot }
				add_ideas = GER_kampffront_idea
			}
			if = {
				limit = { has_completed_focus = GER_All_In_with_the_Verband }
				add_ideas = GER_verband_idea
			}
			if = {
				limit = { has_completed_focus = GER_The_Modern_Ostsiedlung }
				add_ideas = GER_ostsiedlung_idea
			}
		}
		
		# AuthDem Removal
		if = {
			limit = {
				NOT = { has_government = authoritarian_democrat }
			}
			remove_ideas = {
				GER_elite_gymnasia_idea
				GER_Heir_of_Tirpitz_idea
				GER_prussian_constitutionalism_idea
				GER_Soldier_Model_idea
				GER_Unending_War_idea
				GER_ag_subsidies_idea
				GER_Free_Peasants_idea
			}
		}
		
		# AuthDem Re-Elected
		else_if = {
			limit = {
				has_government = authoritarian_democrat
				has_completed_focus = GER_A_Safe_Pair_of_Hands
				NOT = { has_idea = GER_elite_gymnasia_idea }
			}
			add_ideas = GER_elite_gymnasia_idea
		}
		
		if = {
			limit = {
				has_government = authoritarian_democrat
				NOT = { has_idea = GER_Kuno_von_Westarp_hog_ade }
			}
			remove_ideas = {
				GER_Heir_of_Tirpitz_idea
				GER_prussian_constitutionalism_idea
			}
		}
		
		else_if = {
			limit = {
				has_government = authoritarian_democrat
				has_idea = GER_Kuno_von_Westarp_hog_ade
				NOT = {
					OR = {
						has_idea = GER_Heir_of_Tirpitz_idea
						has_idea = GER_prussian_constitutionalism_idea
					}
				}
			}
			if = {
				limit = { has_completed_focus = GER_Carry_Tirpitzs_Torch }
				add_ideas = GER_Heir_of_Tirpitz_idea
			}
			if = {
				limit = { has_completed_focus = GER_The_Unshakeable_Prussian }
				add_ideas = GER_prussian_constitutionalism_idea
			}
		}
		
		if = {
			limit = {
				has_government = authoritarian_democrat
				NOT = { OR = { has_idea = GER_Paul_von_Lettow_Vorbeck_hog_ade has_idea = GER_Manfred_Freiherr_von_Richthofen_hog_ade } }
			}
			remove_ideas = {
				GER_Soldier_Model_idea
				GER_Unending_War_idea
			}
		}
		
		else_if = {
			limit = {
				has_government = authoritarian_democrat
				OR = { has_idea = GER_Paul_von_Lettow_Vorbeck_hog_ade has_idea = GER_Manfred_Freiherr_von_Richthofen_hog_ade }
				NOT = {
					OR = {
						has_idea = GER_Soldier_Model_idea
						has_idea = GER_Unending_War_idea
					}
				}
			}
			if = {
				limit = { has_completed_focus = GER_The_Soldier_as_a_Model_for_Humanity }
				add_ideas = GER_Soldier_Model_idea
			}
			if = {
				limit = { has_completed_focus = GER_The_War_is_Not_Yet_Over }
				add_ideas = GER_Unending_War_idea
			}
		}
		
		if = {
			limit = {
				has_government = authoritarian_democrat
				NOT = { has_idea = GER_Hans_Schlange_Schoningen_hog_ade }
			}
			remove_ideas = {
				GER_ag_subsidies_idea
				GER_Free_Peasants_idea
			}
		}
		
		else_if = {
			limit = {
				has_government = authoritarian_democrat
				has_idea = GER_Hans_Schlange_Schoningen_hog_ade
				NOT = {
					OR = {
						has_idea = GER_ag_subsidies_idea
						has_idea = GER_Free_Peasants_idea
					}
				}
			}
			if = {
				limit = { has_completed_focus = GER_Reach_Out_to_the_Moderate_Landvolk }
				add_ideas = GER_ag_subsidies_idea
			}
			if = {
				limit = { has_completed_focus = GER_Free_Peasants_for_a_Healthy_Empire }
				add_ideas = GER_Free_Peasants_idea
			}
		}
		
		# SocCon Removal
		if = {
			limit = {
				NOT = { has_government = social_conservative }
			}
			remove_ideas = {
				GER_Love_Thy_Neighbor_idea
				GER_christian_unions_idea
				GER_Catholic_Social_Teaching_idea
				GER_Subdued_Barons_idea
				GER_Burgerblock_idea
				GER_Schmittmaxxing_idea
				GER_Resist_Dogma_idea
				GER_federalization_idea
			}
		}
		
		# SocCon Re-Elected
		else_if = {
			limit = {
				has_government = social_conservative
				has_completed_focus = GER_Love_Thy_Neighbor
				NOT = { has_idea = GER_Love_Thy_Neighbor_idea }
			}
			add_ideas = GER_Love_Thy_Neighbor_idea
		}
		
		if = {
			limit = {
				has_government = social_conservative
				NOT = { has_idea = GER_Heinrich_Bruening_hog_sco }
			}
			remove_ideas = {
				GER_christian_unions_idea
				GER_Catholic_Social_Teaching_idea
			}
		}
		
		else_if = {
			limit = {
				has_government = social_conservative
				has_idea = GER_Heinrich_Bruening_hog_sco
				NOT = {
					OR = {
						has_idea = GER_christian_unions_idea
						has_idea = GER_Catholic_Social_Teaching_idea
					}
				}
			}
			if = {
				limit = { has_completed_focus = GER_Set_the_GCG_Against_the_SPD }
				add_ideas = GER_christian_unions_idea
			}
			if = {
				limit = { has_completed_focus = GER_Social_Teaching_for_a_Popular_Empire }
				add_ideas = GER_Catholic_Social_Teaching_idea
			}
		}
		
		if = {
			limit = {
				has_government = social_conservative
				NOT = { OR = { has_idea = GER_Ludwig_Kaas_hog_sco has_idea = GER_Konrad_Adenauer_hog_sco } } 
			}
			remove_ideas = {
				GER_Resist_Dogma_idea
				GER_federalization_idea
			}
		}
		
		else_if = {
			limit = {
				has_government = social_conservative
				has_idea = GER_Konrad_Adenauer_hog_sco # Kaas can never be re-elected so checking for him is useless.
				NOT = {
					OR = {
						has_idea = GER_Resist_Dogma_idea
						has_idea = GER_federalization_idea
					}
				}
			}
			if = {
				limit = { has_completed_focus = GER_Resist_Prussianist_Dogma }
				add_ideas = GER_Resist_Dogma_idea
			}
			if = {
				limit = { has_completed_focus = GER_The_Rhenish_Vanguard_of_Federalism }
				add_ideas = GER_federalization_idea
			}
		}
		
		if = {
			limit = {
				has_government = social_conservative
				NOT = { has_idea = GER_Franz_von_Papen_hog_sco }
			}
			remove_ideas = {
				GER_Subdued_Barons_idea
				GER_Burgerblock_idea
				GER_Schmittmaxxing_idea
			}
		}
		
		else_if = {
			limit = {
				has_government = social_conservative
				has_idea = GER_Franz_von_Papen_hog_sco
				NOT = {
					OR = {
						has_idea = GER_Subdued_Barons_idea
						has_idea = GER_Burgerblock_idea
						has_idea = GER_Schmittmaxxing_idea
					}
				}
			}
			if = {
				limit = { has_completed_focus = GER_Subdue_Misguided_Barons }
				add_ideas = GER_Subdued_Barons_idea
			}
			if = {
				limit = { has_completed_focus = GER_Burgerblock_to_Neutralize_SPD }
				add_ideas = GER_Burgerblock_idea
			}
			if = {
				limit = { has_completed_focus = GER_Ausnamehzustand_Made_Manifest }
				add_ideas = GER_Schmittmaxxing_idea
			}
		}
		
		# MarLib Removal
		if = {
			limit = {
				NOT = { has_government = market_liberal }
			}
			remove_ideas = {
				GER_Capitalist_Ethos_idea
				GER_Vindicate_March_idea
				GER_The_Softer_Weapon_idea
				GER_Verstehen_Model_idea
				GER_Dawn_Rises_idea
			}
		}
		
		# MarLib Re-Elected
		else_if = {
			limit = {
				has_government = market_liberal
				has_completed_focus = GER_The_Freer_the_Market_the_Freer_the_Empire
				NOT = { has_idea = GER_Capitalist_Ethos_idea }
			}
			add_ideas = GER_Capitalist_Ethos_idea
		}
		
		if = {
			limit = {
				has_government = market_liberal
				NOT = { has_idea = GER_Gustav_Stresemann_hog_mli }
			}
			remove_ideas = {
				GER_Vindicate_March_idea
				GER_The_Softer_Weapon_idea
			}
		}
		
		else_if = {
			limit = {
				has_government = market_liberal
				has_idea = GER_Gustav_Stresemann_hog_mli
				NOT = {
					OR = {
						has_idea = GER_Vindicate_March_idea
						has_idea = GER_The_Softer_Weapon_idea
					}
				}
			}
			if = {
				limit = { has_completed_focus = GER_Reapproach_the_Marzrevolutions_Spirit }
				add_ideas = GER_Vindicate_March_idea
			}
			if = {
				limit = { has_completed_focus = GER_The_Future_of_Economic_Power }
				add_ideas = GER_The_Softer_Weapon_idea
			}
		}
		
		if = {
			limit = {
				has_government = market_liberal
				NOT = {
					OR = {
						has_idea = GER_Max_Weber_hog_mli
						has_idea = GER_Marianne_Weber_hog_mli
						has_idea = GER_Carl_Schmitt_hog_ade
					}
				}
			}
			remove_ideas = {
				GER_Verstehen_Model_idea
				GER_Dawn_Rises_idea
			}
		}
		
		else_if = {
			limit = {
				has_government = market_liberal
				OR = { # Weber can never be re-elected so checking for him is useless.
					has_idea = GER_Carl_Schmitt_hog_ade
					has_idea = GER_Marianne_Weber_hog_mli
				}
				NOT = {
					OR = {
						has_idea = GER_Verstehen_Model_idea
						has_idea = GER_Dawn_Rises_idea
					}
				}
			}
			if = {
				limit = { has_completed_focus = GER_Sozialhilfe_zu_Verstehen }
				add_ideas = GER_Verstehen_Model_idea
			}
			if = {
				limit = { has_completed_focus = GER_Sensing_Dawn_in_the_Polar_Night }
				add_ideas = GER_Dawn_Rises_idea
			}
		}
		
		# SocLib Removal
		if = {
			limit = {
				NOT = { has_government = social_liberal }
			}
			remove_ideas = {
				GER_Modest_Decentralization_idea
				GER_hanse_idea
				GER_European_Peace_idea
				GER_Corporate_Creativity_idea
				GER_Machine1_idea
				GER_Machine2_idea
				GER_Ostwacht_idea
				GER_Germania_Scales_idea
			}
		}
		
		# SocLib Re-Elected
		else_if = {
			limit = {
				has_government = social_liberal
				has_completed_focus = GER_An_Olive_Branch_to_Decentralization
				NOT = { has_idea = GER_Modest_Decentralization_idea }
			}
			add_ideas = GER_Modest_Decentralization_idea
		}
		
		if = {
			limit = {
				has_government = social_liberal
				NOT = { has_idea = GER_Thomas_Mann_hog_sli }
			}
			remove_ideas = {
				GER_hanse_idea
				GER_European_Peace_idea
			}
		}
		
		else_if = {
			limit = {
				has_government = social_liberal
				has_idea = GER_Thomas_Mann_hog_sli
				NOT = {
					OR = {
						has_idea = GER_hanse_idea
						has_idea = GER_European_Peace_idea
					}
				}
			}
			if = {
				limit = { has_completed_focus = GER_Encourage_Hanseatic_Revival }
				add_ideas = GER_hanse_idea
			}
			if = {
				limit = { has_completed_focus = GER_The_German_Path_to_Peace_in_Europe }
				add_ideas = GER_European_Peace_idea
			}
		}
		
		if = {
			limit = {
				has_government = social_liberal
				NOT = { has_idea = GER_Walther_Rathenau_hog_sli }
			}
			remove_ideas = {
				GER_Corporate_Creativity_idea
				GER_Machine1_idea
				GER_Machine2_idea
			}
		}
		
		else_if = {
			limit = {
				has_government = social_liberal
				has_idea = GER_Walther_Rathenau_hog_sli
				NOT = {
					OR = {
						has_idea = GER_Corporate_Creativity_idea
						has_idea = GER_Machine1_idea
						has_idea = GER_Machine2_idea
					}
				}
			}
			if = {
				limit = { has_completed_focus = GER_Legacy_of_the_Deutsche_Edison }
				add_ideas = GER_Corporate_Creativity_idea
			}
			if = {
				limit = { has_country_flag = GER_Machine1_flag }
				add_ideas = GER_Machine1_idea
			}
			if = {
				limit = { has_country_flag = GER_Machine2_flag }
				add_ideas = GER_Machine2_idea
			}
		}
		
		if = {
			limit = {
				has_government = social_liberal
				NOT = { has_idea = GER_Friedrich_Meinecke_hog_sli }
			}
			remove_ideas = {
				GER_Ostwacht_idea
				GER_Germania_Scales_idea
			}
		}
		
		else_if = {
			limit = {
				has_government = social_liberal
				has_idea = GER_Friedrich_Meinecke_hog_sli
				NOT = {
					OR = {
						has_idea = GER_Ostwacht_idea
						has_idea = GER_Germania_Scales_idea
					}
				}
			}
			if = {
				limit = { has_completed_focus = GER_Observe_the_Simmering_East }
				add_ideas = GER_Ostwacht_idea
			}
			if = {
				limit = { has_completed_focus = GER_Germania_Holds_the_Scale_of_Kratos_and_Ethos }
				add_ideas = GER_Germania_Scales_idea
			}
		}
		
		# SocDem Removal
		if = {
			limit = {
				NOT = { has_government = social_democrat }
			}
			remove_ideas = {
				GER_Majoritarian_SPD_idea
				GER_Imperial_Community_idea
				GER_Lensch_Culture_idea
				GER_International_Outreach_idea
				GER_marxism_redeemed
				GER_Schutzkorps_Life_idea
				GER_Action_Not_Theory_idea
			}
		}
		
		# SocDem Re-Elected
		else_if = {
			limit = {
				has_government = social_democrat
				has_completed_focus = GER_Majoritarian_Balancing_Act
				NOT = { has_idea = GER_Majoritarian_SPD_idea }
			}
			add_ideas = GER_Majoritarian_SPD_idea
		}
		
		if = {
			limit = {
				has_government = social_democrat
				NOT = { OR = { has_idea = GER_Hans_Vogel_hog_sde has_idea = GER_Otto_Wels_hog_sde } }
			}
			remove_ideas = {
				GER_International_Outreach_idea
				GER_marxism_redeemed
			}
		}
		
		else_if = {
			limit = {
				has_government = social_democrat
				has_idea = GER_Hans_Vogel_hog_sde
				NOT = {
					OR = {
						has_idea = GER_International_Outreach_idea
						has_idea = GER_marxism_redeemed
					}
				}
			}
			if = {
				limit = { has_completed_focus = GER_Vogels_International_Tours }
				add_ideas = GER_International_Outreach_idea
			}
			if = {
				limit = { has_completed_focus = GER_Marx_the_German_Reformer }
				add_ideas = GER_marxism_redeemed
			}
		}
		
		if = {
			limit = {
				has_government = social_democrat
				NOT = { has_idea = GER_Gustav_Noske_hog_sde }
			}
			remove_ideas = {
				GER_Schutzkorps_Life_idea
				GER_Action_Not_Theory_idea
			}
		}
		
		else_if = {
			limit = {
				has_government = social_democrat
				has_idea = GER_Gustav_Noske_hog_sde
				NOT = {
					OR = {
						has_idea = GER_Schutzkorps_Life_idea
						has_idea = GER_Action_Not_Theory_idea
					}
				}
			}
			if = {
				limit = { has_completed_focus = GER_A_New_Life_in_the_Schutzkorps }
				add_ideas = GER_Schutzkorps_Life_idea
			}
			if = {
				limit = { has_completed_focus = GER_An_SPD_of_Action_Not_Theory }
				add_ideas = GER_Action_Not_Theory_idea
			}
		}
		
		if = {
			limit = {
				has_government = social_democrat
				NOT = { has_idea = GER_Paul_Lensch_hog_sde }
			}
			remove_ideas = {
				GER_Imperial_Community_idea
				GER_Lensch_Culture_idea
			}
		}
		
		else_if = {
			limit = {
				has_government = social_democrat
				has_idea = GER_Paul_Lensch_hog_sde
				NOT = {
					OR = {
						has_idea = GER_Imperial_Community_idea
						has_idea = GER_Lensch_Culture_idea
					}
				}
			}
			if = {
				limit = { has_completed_focus = GER_Kaiserliche_Volksgemeinschaft }
				add_ideas = GER_Imperial_Community_idea
			}
			if = {
				limit = { has_completed_focus = GER_True_Culture_Above_Autocratic_Civilization }
				add_ideas = GER_Lensch_Culture_idea
			}
		}
	}
}
		

# GEX Stuff
germany_flees_to_exile = {
	set_global_flag = GER_became_GEX
	hidden_effect = {
		event_target:current_german_exile_government = {
			clr_country_flag = current_german_exile_government
		}
		clear_global_event_target = current_german_exile_government
	}
	save_global_event_target_as = current_german_exile_government
	GER = {
		take_occupied_states_in_africa = yes
		every_owned_state = {
			limit = {
				OR = {
					is_on_continent = africa
					state = 710 #Diego Garcia
				}
				is_controlled_by = GER
			}
			event_target:Mittelafrika_Target = { transfer_state = PREV }
		}
	}
	
	add_manpower = 50000
	set_major = yes
	add_ideas = GEX_GEX_idea
	add_timed_idea = {
		idea = GEX_trauma
		days = 120
	}
	
	GER = {
		# transfer a sizeable amount of equipment
		set_temp_variable = { temp = num_equipment@infantry_equipment }
		if = {
			limit = {
				check_variable = { GER_Bifrost_Level = 0 }
			}
			multiply_temp_variable = { temp = 0.10 }
		}
		else_if = {
			limit = {
				check_variable = { GER_Bifrost_Level = 1 }
			}
			multiply_temp_variable = { temp = 0.20 }
		}
		else_if = {
			limit = {
				check_variable = { GER_Bifrost_Level = 2 }
			}
			multiply_temp_variable = { temp = 0.30 }
		}
		else_if = {
			limit = {
				check_variable = { GER_Bifrost_Level = 3 }
			}
			multiply_temp_variable = { temp = 0.40 }
		}
		else_if = {
			limit = {
				check_variable = { GER_Bifrost_Level = 4 }
			}
			multiply_temp_variable = { temp = 0.50 }
		}
		send_equipment = { target = PREV type = infantry_equipment amount = temp }

		set_temp_variable = { temp = num_equipment@artillery_equipment }
		if = {
			limit = {
				check_variable = { GER_Bifrost_Level = 0 }
			}
			multiply_temp_variable = { temp = 0.10 }
		}
		else_if = {
			limit = {
				check_variable = { GER_Bifrost_Level = 1 }
			}
			multiply_temp_variable = { temp = 0.20 }
		}
		else_if = {
			limit = {
				check_variable = { GER_Bifrost_Level = 2 }
			}
			multiply_temp_variable = { temp = 0.30 }
		}
		else_if = {
			limit = {
				check_variable = { GER_Bifrost_Level = 3 }
			}
			multiply_temp_variable = { temp = 0.40 }
		}
		else_if = {
			limit = {
				check_variable = { GER_Bifrost_Level = 4 }
			}
			multiply_temp_variable = { temp = 0.50 }
		}
		send_equipment = { target = PREV type = artillery_equipment amount = temp }

		set_temp_variable = { temp = num_equipment@support_equipment }
		if = {
			limit = {
				check_variable = { GER_Bifrost_Level = 0 }
			}
			multiply_temp_variable = { temp = 0.10 }
		}
		else_if = {
			limit = {
				check_variable = { GER_Bifrost_Level = 1 }
			}
			multiply_temp_variable = { temp = 0.20 }
		}
		else_if = {
			limit = {
				check_variable = { GER_Bifrost_Level = 2 }
			}
			multiply_temp_variable = { temp = 0.30 }
		}
		else_if = {
			limit = {
				check_variable = { GER_Bifrost_Level = 3 }
			}
			multiply_temp_variable = { temp = 0.40 }
		}
		else_if = {
			limit = {
				check_variable = { GER_Bifrost_Level = 4 }
			}
			multiply_temp_variable = { temp = 0.50 }
		}
		send_equipment = { target = PREV type = support_equipment amount = temp }

		set_temp_variable = { temp = num_equipment@mechanized_equipment }
		if = {
			limit = {
				check_variable = { GER_Bifrost_Level = 0 }
			}
			multiply_temp_variable = { temp = 0.10 }
		}
		else_if = {
			limit = {
				check_variable = { GER_Bifrost_Level = 1 }
			}
			multiply_temp_variable = { temp = 0.20 }
		}
		else_if = {
			limit = {
				check_variable = { GER_Bifrost_Level = 2 }
			}
			multiply_temp_variable = { temp = 0.30 }
		}
		else_if = {
			limit = {
				check_variable = { GER_Bifrost_Level = 3 }
			}
			multiply_temp_variable = { temp = 0.40 }
		}
		else_if = {
			limit = {
				check_variable = { GER_Bifrost_Level = 4 }
			}
			multiply_temp_variable = { temp = 0.50 }
		}
		send_equipment = { target = PREV type = mechanized_equipment amount = temp }

		set_temp_variable = { temp = num_equipment@motorized_equipment }
		if = {
			limit = {
				check_variable = { GER_Bifrost_Level = 0 }
			}
			multiply_temp_variable = { temp = 0.10 }
		}
		else_if = {
			limit = {
				check_variable = { GER_Bifrost_Level = 1 }
			}
			multiply_temp_variable = { temp = 0.20 }
		}
		else_if = {
			limit = {
				check_variable = { GER_Bifrost_Level = 2 }
			}
			multiply_temp_variable = { temp = 0.30 }
		}
		else_if = {
			limit = {
				check_variable = { GER_Bifrost_Level = 3 }
			}
			multiply_temp_variable = { temp = 0.40 }
		}
		else_if = {
			limit = {
				check_variable = { GER_Bifrost_Level = 4 }
			}
			multiply_temp_variable = { temp = 0.50 }
		}
		send_equipment = { target = PREV type = motorized_equipment amount = temp }

		if = {
			limit = {
				NOT = { has_dlc = "No Step Back" }
			}
			set_temp_variable = { temp = num_equipment@light_tank_equipment_1 }
			if = {
				limit = {
					check_variable = { GER_Bifrost_Level = 0 }
				}
			multiply_temp_variable = { temp = 0.10 }
			}
			else_if = {
				limit = {
					check_variable = { GER_Bifrost_Level = 1 }
				}
			multiply_temp_variable = { temp = 0.20 }
			}
			else_if = {
				limit = {
					check_variable = { GER_Bifrost_Level = 2 }
				}
			multiply_temp_variable = { temp = 0.30 }
			}
			else_if = {
				limit = {
					check_variable = { GER_Bifrost_Level = 3 }
				}
			multiply_temp_variable = { temp = 0.40 }
			}
			else_if = {
				limit = {
					check_variable = { GER_Bifrost_Level = 4 }
				}
			multiply_temp_variable = { temp = 0.50 }
			}
			send_equipment = { target = PREV type = light_tank_equipment_1 amount = temp }

			set_temp_variable = { temp = num_equipment@medium_tank_equipment_1 }
			if = {
				limit = {
					check_variable = { GER_Bifrost_Level = 0 }
				}
			multiply_temp_variable = { temp = 0.10 }
			}
			else_if = {
				limit = {
					check_variable = { GER_Bifrost_Level = 1 }
				}
			multiply_temp_variable = { temp = 0.20 }
			}
			else_if = {
				limit = {
					check_variable = { GER_Bifrost_Level = 2 }
				}
			multiply_temp_variable = { temp = 0.30 }
			}
			else_if = {
				limit = {
					check_variable = { GER_Bifrost_Level = 3 }
				}
			multiply_temp_variable = { temp = 0.40 }
			}
			else_if = {
				limit = {
					check_variable = { GER_Bifrost_Level = 4 }
				}
			multiply_temp_variable = { temp = 0.50 }
			}
			send_equipment = { target = PREV type = medium_tank_equipment_1 amount = temp }

			set_temp_variable = { temp = num_equipment@heavy_tank_equipment_1 }
			if = {
				limit = {
					check_variable = { GER_Bifrost_Level = 0 }
				}
			multiply_temp_variable = { temp = 0.10 }
			}
			else_if = {
				limit = {
					check_variable = { GER_Bifrost_Level = 1 }
				}
			multiply_temp_variable = { temp = 0.20 }
			}
			else_if = {
				limit = {
					check_variable = { GER_Bifrost_Level = 2 }
				}
			multiply_temp_variable = { temp = 0.30 }
			}
			else_if = {
				limit = {
					check_variable = { GER_Bifrost_Level = 3 }
				}
			multiply_temp_variable = { temp = 0.40 }
			}
			else_if = {
				limit = {
					check_variable = { GER_Bifrost_Level = 4 }
				}
			multiply_temp_variable = { temp = 0.50 }
			}
			send_equipment = { target = PREV type = heavy_tank_equipment_1 amount = temp }

			set_temp_variable = { temp = num_equipment@modern_tank_equipment_1 }
			if = {
				limit = {
					check_variable = { GER_Bifrost_Level = 0 }
				}
			multiply_temp_variable = { temp = 0.10 }
			}
			else_if = {
				limit = {
					check_variable = { GER_Bifrost_Level = 1 }
				}
			multiply_temp_variable = { temp = 0.20 }
			}
			else_if = {
				limit = {
					check_variable = { GER_Bifrost_Level = 2 }
				}
			multiply_temp_variable = { temp = 0.30 }
			}
			else_if = {
				limit = {
					check_variable = { GER_Bifrost_Level = 3 }
				}
			multiply_temp_variable = { temp = 0.40 }
			}
			else_if = {
				limit = {
					check_variable = { GER_Bifrost_Level = 4 }
				}
			multiply_temp_variable = { temp = 0.50 }
			}
			send_equipment = { target = PREV type = modern_tank_equipment_1 amount = temp }
		}
		if = {
			limit = {
				has_dlc = "No Step Back"
			}
			set_temp_variable = { temp = num_equipment@light_tank_chassis }
			if = {
				limit = {
					check_variable = { GER_Bifrost_Level = 0 }
				}
			multiply_temp_variable = { temp = 0.10 }
			}
			else_if = {
				limit = {
					check_variable = { GER_Bifrost_Level = 1 }
				}
			multiply_temp_variable = { temp = 0.20 }
			}
			else_if = {
				limit = {
					check_variable = { GER_Bifrost_Level = 2 }
				}
			multiply_temp_variable = { temp = 0.30 }
			}
			else_if = {
				limit = {
					check_variable = { GER_Bifrost_Level = 3 }
				}
			multiply_temp_variable = { temp = 0.40 }
			}
			else_if = {
				limit = {
					check_variable = { GER_Bifrost_Level = 4 }
				}
			multiply_temp_variable = { temp = 0.50 }
			}
			send_equipment = { target = PREV type = light_tank_chassis amount = temp }

			set_temp_variable = { temp = num_equipment@medium_tank_chassis }
			if = {
				limit = {
					check_variable = { GER_Bifrost_Level = 0 }
				}
			multiply_temp_variable = { temp = 0.10 }
			}
			else_if = {
				limit = {
					check_variable = { GER_Bifrost_Level = 1 }
				}
			multiply_temp_variable = { temp = 0.20 }
			}
			else_if = {
				limit = {
					check_variable = { GER_Bifrost_Level = 2 }
				}
			multiply_temp_variable = { temp = 0.30 }
			}
			else_if = {
				limit = {
					check_variable = { GER_Bifrost_Level = 3 }
				}
			multiply_temp_variable = { temp = 0.40 }
			}
			else_if = {
				limit = {
					check_variable = { GER_Bifrost_Level = 4 }
				}
			multiply_temp_variable = { temp = 0.50 }
			}
			send_equipment = { target = PREV type = medium_tank_chassis amount = temp }

			set_temp_variable = { temp = num_equipment@heavy_tank_chassis }
			if = {
				limit = {
					check_variable = { GER_Bifrost_Level = 0 }
				}
			multiply_temp_variable = { temp = 0.10 }
			}
			else_if = {
				limit = {
					check_variable = { GER_Bifrost_Level = 1 }
				}
			multiply_temp_variable = { temp = 0.20 }
			}
			else_if = {
				limit = {
					check_variable = { GER_Bifrost_Level = 2 }
				}
			multiply_temp_variable = { temp = 0.30 }
			}
			else_if = {
				limit = {
					check_variable = { GER_Bifrost_Level = 3 }
				}
			multiply_temp_variable = { temp = 0.40 }
			}
			else_if = {
				limit = {
					check_variable = { GER_Bifrost_Level = 4 }
				}
			multiply_temp_variable = { temp = 0.50 }
			}
			send_equipment = { target = PREV type = heavy_tank_chassis amount = temp }

			set_temp_variable = { temp = num_equipment@modern_tank_chassis }
			if = {
				limit = {
					check_variable = { GER_Bifrost_Level = 0 }
				}
			multiply_temp_variable = { temp = 0.10 }
			}
			else_if = {
				limit = {
					check_variable = { GER_Bifrost_Level = 1 }
				}
			multiply_temp_variable = { temp = 0.20 }
			}
			else_if = {
				limit = {
					check_variable = { GER_Bifrost_Level = 2 }
				}
			multiply_temp_variable = { temp = 0.30 }
			}
			else_if = {
				limit = {
					check_variable = { GER_Bifrost_Level = 3 }
				}
			multiply_temp_variable = { temp = 0.40 }
			}
			else_if = {
				limit = {
					check_variable = { GER_Bifrost_Level = 4 }
				}
			multiply_temp_variable = { temp = 0.50 }
			}
			send_equipment = { target = PREV type = modern_tank_chassis amount = temp }
		}

		set_temp_variable = { temp = num_equipment@small_plane_naval_bomber_airframe }
		if = {
			limit = {
				check_variable = { GER_Bifrost_Level = 0 }
			}
			multiply_temp_variable = { temp = 0.10 }
		}
		else_if = {
			limit = {
				check_variable = { GER_Bifrost_Level = 1 }
			}
			multiply_temp_variable = { temp = 0.20 }
		}
		else_if = {
			limit = {
				check_variable = { GER_Bifrost_Level = 2 }
			}
			multiply_temp_variable = { temp = 0.30 }
		}
		else_if = {
			limit = {
				check_variable = { GER_Bifrost_Level = 3 }
			}
			multiply_temp_variable = { temp = 0.40 }
		}
		else_if = {
			limit = {
				check_variable = { GER_Bifrost_Level = 4 }
			}
			multiply_temp_variable = { temp = 0.50 }
		}
		send_equipment = { target = PREV type = small_plane_naval_bomber_airframe amount = temp }

		set_temp_variable = { temp = num_equipment@small_plane_cas_airframe }
		if = {
			limit = {
				check_variable = { GER_Bifrost_Level = 0 }
			}
			multiply_temp_variable = { temp = 0.10 }
		}
		else_if = {
			limit = {
				check_variable = { GER_Bifrost_Level = 1 }
			}
			multiply_temp_variable = { temp = 0.20 }
		}
		else_if = {
			limit = {
				check_variable = { GER_Bifrost_Level = 2 }
			}
			multiply_temp_variable = { temp = 0.30 }
		}
		else_if = {
			limit = {
				check_variable = { GER_Bifrost_Level = 3 }
			}
			multiply_temp_variable = { temp = 0.40 }
		}
		else_if = {
			limit = {
				check_variable = { GER_Bifrost_Level = 4 }
			}
			multiply_temp_variable = { temp = 0.50 }
		}
		send_equipment = { target = PREV type = small_plane_cas_airframe amount = temp }

		set_temp_variable = { temp = num_equipment@small_plane_airframe }
		if = {
			limit = {
				check_variable = { GER_Bifrost_Level = 0 }
			}
			multiply_temp_variable = { temp = 0.10 }
		}
		else_if = {
			limit = {
				check_variable = { GER_Bifrost_Level = 1 }
			}
			multiply_temp_variable = { temp = 0.20 }
		}
		else_if = {
			limit = {
				check_variable = { GER_Bifrost_Level = 2 }
			}
			multiply_temp_variable = { temp = 0.30 }
		}
		else_if = {
			limit = {
				check_variable = { GER_Bifrost_Level = 3 }
			}
			multiply_temp_variable = { temp = 0.40 }
		}
		else_if = {
			limit = {
				check_variable = { GER_Bifrost_Level = 4 }
			}
			multiply_temp_variable = { temp = 0.50 }
		}
		send_equipment = { target = PREV type = small_plane_airframe amount = temp }

		set_temp_variable = { temp = num_equipment@medium_plane_fighter_airframe }
		if = {
			limit = {
				check_variable = { GER_Bifrost_Level = 0 }
			}
			multiply_temp_variable = { temp = 0.10 }
		}
		else_if = {
			limit = {
				check_variable = { GER_Bifrost_Level = 1 }
			}
			multiply_temp_variable = { temp = 0.20 }
		}
		else_if = {
			limit = {
				check_variable = { GER_Bifrost_Level = 2 }
			}
			multiply_temp_variable = { temp = 0.30 }
		}
		else_if = {
			limit = {
				check_variable = { GER_Bifrost_Level = 3 }
			}
			multiply_temp_variable = { temp = 0.40 }
		}
		else_if = {
			limit = {
				check_variable = { GER_Bifrost_Level = 4 }
			}
			multiply_temp_variable = { temp = 0.50 }
		}
		send_equipment = { target = PREV type = medium_plane_fighter_airframe amount = temp }

		set_temp_variable = { temp = num_equipment@medium_plane_airframe }
		if = {
			limit = {
				check_variable = { GER_Bifrost_Level = 0 }
			}
			multiply_temp_variable = { temp = 0.10 }
		}
		else_if = {
			limit = {
				check_variable = { GER_Bifrost_Level = 1 }
			}
			multiply_temp_variable = { temp = 0.20 }
		}
		else_if = {
			limit = {
				check_variable = { GER_Bifrost_Level = 2 }
			}
			multiply_temp_variable = { temp = 0.30 }
		}
		else_if = {
			limit = {
				check_variable = { GER_Bifrost_Level = 3 }
			}
			multiply_temp_variable = { temp = 0.40 }
		}
		else_if = {
			limit = {
				check_variable = { GER_Bifrost_Level = 4 }
			}
			multiply_temp_variable = { temp = 0.50 }
		}
		send_equipment = { target = PREV type = medium_plane_airframe amount = temp }

		set_temp_variable = { temp = num_equipment@large_plane_airframe }
		if = {
			limit = {
				check_variable = { GER_Bifrost_Level = 0 }
			}
			multiply_temp_variable = { temp = 0.10 }
		}
		else_if = {
			limit = {
				check_variable = { GER_Bifrost_Level = 1 }
			}
			multiply_temp_variable = { temp = 0.20 }
		}
		else_if = {
			limit = {
				check_variable = { GER_Bifrost_Level = 2 }
			}
			multiply_temp_variable = { temp = 0.30 }
		}
		else_if = {
			limit = {
				check_variable = { GER_Bifrost_Level = 3 }
			}
			multiply_temp_variable = { temp = 0.40 }
		}
		else_if = {
			limit = {
				check_variable = { GER_Bifrost_Level = 4 }
			}
			multiply_temp_variable = { temp = 0.50 }
		}
		send_equipment = { target = PREV type = large_plane_airframe amount = temp }

		set_temp_variable = { temp = num_equipment@convoy }
		if = {
			limit = {
				check_variable = { GER_Bifrost_Level = 0 }
			}
			multiply_temp_variable = { temp = 0.10 }
		}
		else_if = {
			limit = {
				check_variable = { GER_Bifrost_Level = 1 }
			}
			multiply_temp_variable = { temp = 0.20 }
		}
		else_if = {
			limit = {
				check_variable = { GER_Bifrost_Level = 2 }
			}
			multiply_temp_variable = { temp = 0.30 }
		}
		else_if = {
			limit = {
				check_variable = { GER_Bifrost_Level = 3 }
			}
			multiply_temp_variable = { temp = 0.40 }
		}
		else_if = {
			limit = {
				check_variable = { GER_Bifrost_Level = 4 }
			}
			multiply_temp_variable = { temp = 0.50 }
		}
		send_equipment = { target = PREV type = convoy amount = temp }
	}
	
	# puppet GEA if it's not at war
	if = {
		limit = {
			NOT = { tag = GEA }
			country_exists = GEA
			GEA = { is_subject_of = GER }
		}
		GEA = { get_current_government_type = yes }
		puppet = GEA
		GEA = { restore_previous_government_type = yes }
	}
	else = {
		GER = {
			set_autonomy = {
				target = GEA
				autonomy_state = autonomy_free
			}
		}
	}
	if = {
		limit = {
			NOT = { tag = LEP }
			country_exists = LEP
			LEP = { is_subject_of = GER }
		}
		LEP = { get_current_government_type = yes }
		puppet = LEP
		LEP = { restore_previous_government_type = yes }
	}
	else = {
		GER = {
			set_autonomy = {
				target = LEP
				autonomy_state = autonomy_free
			}
		}
	}
	change_tag_from = GER
}

german_ai_flees = {
	log = "GEX ai selection cycle"
	if = {
		limit = {
			OR = {
				MAF = { is_ai = no }
				has_global_flag = GEX_players_absent
				has_game_rule = {
					rule = GEX_exile
					option = GEX_EXILE_MAF
				}
			}
			GEX_can_flee_MAF = yes
		}
		event_target:Mittelafrika_Target = { country_event = GEX.2 }
	}
	else_if = {
		limit = {
			OR = {
				GEA = { is_ai = no }
				has_global_flag = GEX_players_absent
				has_game_rule = {
					rule = GEX_exile
					option = GEX_EXILE_GEA
				}
			}
			GEX_can_flee_GEA = yes
		}
		GEA = { country_event = GEX.2 }
	}
	else_if = {
		limit = {
			OR = {
				LEP = { is_ai = no }
				has_global_flag = GEX_players_absent
				has_game_rule = {
					rule = GEX_exile
					option = GEX_EXILE_AOG
				}
			}
			GEX_can_flee_AOG = yes
		}
		LEP = { country_event = GEX.2 }
	}
	else_if = {
		limit = {
			OR = {
				TXS = { is_ai = no }
				has_global_flag = GEX_players_absent
				has_game_rule = {
					rule = GEX_exile
					option = GEX_EXILE_TXS
				}
				has_game_rule = {
					rule = GEX_exile
					option = GEX_EXILE_TXS_KAISER
				}
			}
			GEX_can_flee_TXS = yes
		}
		TXS = { country_event = GEX.2 }
	}
	else_if = {
		limit = {
			OR = {
				TUR = { is_ai = no }
				has_global_flag = GEX_players_absent
				has_game_rule = {
					rule = GEX_exile
					option = GEX_EXILE_OTT
				}
			}
			GEX_can_flee_OTT = yes
		}
		TUR = { country_event = GEX.2 }
	}
	else_if = {#well fuck
		limit = {
			OR = {
				has_game_rule = {
					rule = GEX_exile
					option = DEFAULT
				}
				has_global_flag = GEX_game_rule_bypass
			}
			GEX_can_flee_MAF = no
			GEX_can_flee_GEA = no
			GEX_can_flee_AOG = no
			GEX_can_flee_TXS = no
			GEX_can_flee_OTT = no
		}
		log = "Germany is capitulating completely, no exile"
		set_country_flag = GER_capitulated
		custom_effect_tooltip = GER_will_capitulate
		swap_ideas = {
			add_idea = GEX_flight_of_the_reich_2
			remove_idea = GEX_flight_of_the_reich
		}
		germany_capitulates = yes
		set_global_flag = GER_did_not_became_GEX
	}
	else_if = {
		limit = {
			NOT = {
				has_game_rule = {
					rule = GEX_exile
					option = DEFAULT
				}
				has_global_flag = GEX_game_rule_bypass
			}
		}
		set_global_flag = GEX_game_rule_bypass
		country_event = {
			id = GEX.3
			hours = 1
		}
		log = "GEX ai selection cycle EXIT 1"
	}
	else_if = {
		limit = { has_global_flag = GEX_cycle_1 }
		clr_global_flag = GEX_cycle_1
		country_event = {
			id = GEX.5
			hours = 1
		}
		log = "GEX ai selection cycle EXIT 2"
	}
	else = {
		set_global_flag = GEX_players_absent
		country_event = {
			id = GEX.3
			hours = 1
		}
		log = "GEX ai selection cycle EXIT 3"
	}
}

germany_capitulates = {
	# add the idea which lowers Germany's surrender level, so they'll go in two days (after their allies)
	country_event = { id = capt.11 days = 2 }

	# mark things GEX will have to do shortly
	if = {
		limit = { country_exists = GEX }
		if = {
			limit = { GEA = { has_war_with = JAP } }
			GEX = { set_country_flag = GEX_war_with_japan }
		}
		if = {
			limit = { has_war_with = NFA }
			GEX = { set_country_flag = GEX_war_with_natfrance }
		}
		if = {
			limit = { GEA = { has_war_with = SIA } }
			GEX = { set_country_flag = GEX_war_with_siam }
		}
	}
	
	# let Austria reform the Donau-Adriabund, if it's currently in the Reichspakt
	if = {
		limit = {
			NOT = { has_global_flag = AUS_treaty_of_budapest }
			AUS = {
				is_in_faction_with = ROOT
				has_country_flag = AUS_intervened_in_weltkrieg
				has_capitulated = no
			}
		}
		AUS = {
			leave_faction = yes
			create_faction = austrian_sphere
			clr_country_flag = AUS_intervened_in_weltkrieg
			set_country_flag = former_reichspakt_member
			country_event = { id = aus.tree.4016 hours = 8 }
		}
		every_other_country = {
			limit = {
				is_subject = no
				is_in_faction_with = ROOT
				has_country_flag = AUS_former_faction_member
			}
			clr_country_flag = AUS_former_faction_member
			set_country_flag = former_reichspakt_member
			AUS = { add_to_faction = PREV }
		}
	}

	# dissolve the Reichspakt
	every_other_country = {
		limit = {
			OR = {
				is_in_faction_with = GER
				is_subject_of = GER
			}
		}
		set_country_flag = former_reichspakt_member
	}
	dismantle_faction = yes

	# free all puppets but MAF and GEA
	every_country = {
		limit = {
			is_subject_of = GER
			NOT = {
				tag = GEA
				tag = MAF
			}
		}
		GER = {
			set_autonomy = { target = PREV autonomy_state = autonomy_free }
		}
	}

	GEX = {
		mark_focus_tree_layout_dirty = yes
		if = {
			limit = { is_faction_leader = yes }
			set_faction_name = "Reichspakt Remnants"
		}
		else = {
			leave_faction = yes
			create_faction = "Reichspakt Remnants"
		}
	}

	# give Reichspakt members military access to each other
	every_country = {
		limit = {
			has_country_flag = former_reichspakt_member
			has_capitulated = no
		}
		every_other_country = {
			limit = {
				has_country_flag = former_reichspakt_member
				has_capitulated = no
			}
			give_military_access = PREV
		}
	}

	# release all occupied states
	restore_control_of_all_non_enemy_states = yes

	# get rid of specific states, if Germany still has them
	every_owned_state = {
		limit = {
			OR = {
				state = 422 #Ceylon
				state = 281 #Maldives
				state = 733 #Andaman Islands
			}
		}
		if = {
			limit = { country_exists = PRF }
			PRF = { transfer_state = PREV }
		}
		else_if = {
			limit = { country_exists = BHC }
			BHC = { transfer_state = PREV }
		}
		else_if = {
			limit = { country_exists = DEH }
			DEH = { transfer_state = PREV }
		}
	}
	every_state = {
		limit = {
			OR = {
				is_owned_by = GER
				is_owned_by = GEA
			}
			is_claimed_by = AST
			country_exists = AST
			AST = {
				is_subject = no
				controls_state = 523 #Papua
				controls_state = 285 #New South Wales
			}
			OR = {
				state = 711 #Christmas Island
				state = 757 #Kaiser Wilhelmsland
				state = 737 #Bismark Archipelago
				state = 634 #Solomon Islands
				state = 635 #New Caledonia
				state = 725 #Nawodo
				state = 734 #Thilenius Inseln
			}
		}
		AST = { transfer_state = PREV }
	}
	every_state = {
		limit = {
			country_exists = AST
			AST = {
				is_subject = no
				controls_state = 523 #Papua
				controls_state = 284 #North Island
				controls_state = 285 #New South Wales
			}
			OR = {
				is_owned_by = GER
				is_owned_by = GEA
			}
			OR = {
				state = 711 #Christmas Island
				state = 757 #Kaiser-Wilhelmsland
				state = 737 #Bismark Archipelago
				state = 635 #New Caledonia
				state = 634 #Solomon Islands
			}
		}
		AST = { transfer_state = PREV }
	}
	if = {
		limit = { has_war_with = JAP }
		every_state = {
			limit = {
				OR = {
					is_owned_by = GER
					is_owned_by = GEA
				}
				OR = {
					state = 647 #Pelew-Inseln
					state = 684 #Karolinen
					state = 646 #Marianen
					state = 633 #Marshall-Inseln
					state = 639 #Krusenstern-Inseln
					state = 725 #Nawodo
					state = 643 #Hansemann-Inseln
					state = 941 #Deutsch-Samoa
					state = 641 #Deutsch-Polynesien
					state = 635 #Neuelsass
					state = 734 #Thilenius-Inseln
					state = 634 #Salomon-Inseln
					state = 737 #Bismarck-Archipel
					state = 757 #Kaiser-Wilhelms-land
				}
			}
			JAP = { transfer_state = PREV }
		}
	}
	if = {
		limit = { 753 = { is_owned_by = GER } }
		random_country = {
			limit = {
				OR = {
					tag = TUR
					tag = EGY
				}
				owns_state = 453
			}
			transfer_state = 753
		}
	}
	if = {
		limit = {
			268 = { is_owned_by = GER } #Djibouti
		}
		if = {
			limit = { country_exists = SOM }
			SOM = { transfer_state = 268 }
		}
		else_if = {
			limit = { country_exists = ETH }
			ETH = { transfer_state = 268 }
		}
	}
	if = {
		limit = {
			118 = { is_owned_by = GER } #Gibraltar
		}
		var:169.owner = { transfer_state = 118 }
	}
	every_state = {
			limit = {
				is_owned_by = GER
				OR = {
					state = 709 #Seychelles
					state = 708 #Comoros
					state = 707 #Mauritius
					state = 706 #Reunion
					state = 543 #Madagascar
					state = 1177 #West Madagascar
					state = 1179 #South Madagascar
					state = 1178 #East Madagascar
				}
			}
			MAG = { transfer_state = PREV }
	}
	every_country = {
		limit = {
			exists = yes
			has_war_with = GER
		}
		set_country_flag = was_at_war_with_germany
	}
	random_country = {
		limit = {
			is_ai = yes
			has_war_with = GER
		}
		country_event = { id = capt.20 days = 4 } #clean-up event
	}
	# peace out with remaining Reichpakt members
	every_country = {
		limit = {
			has_war = yes
			is_subject = no
			NOT = { has_country_flag = former_reichspakt_member }
			any_enemy_country = { has_country_flag = former_reichspakt_member }
			OR = {
				is_in_faction = no
				is_faction_leader = yes
			}
		}
		country_event = capt.10
	}
	# fire post-collape events for GEX
	if = {
		limit = { country_exists = GEX }
		# puppet GEA if it's not at war
		if = {
			limit = {
				country_exists = GEA
				GEA = { has_country_flag = repuppet_to_GEX }
			}
			GER = {
				set_autonomy = { target = GEA autonomy_state = autonomy_free }
			}
			GEA = { country_event = { id = capt.23 hours = 1 } }
		}
		# now fire post-war events for GEX
		GEX = {
			if = {
				limit = {
					has_country_flag = GEX_war_with_siam
					NOT = { has_country_flag = GEX_war_with_japan }
				}
				country_event = { id = capt.5 days = 1 }
			}
			if = {
				limit = { has_country_flag = GEX_war_with_japan }
				country_event = { id = capt.7 days = 1 }
			}
			if = {
				limit = { has_country_flag = GEX_war_with_natfrance }
				NFA = { country_event = { id = capt.12 days = 2 } }
			}
		}
	}
}

GEX_JAP_buff_choosing_fire = {
	custom_effect_tooltip = GEX_JAP_choose_first_buff
	hidden_effect = { country_event = GEX_foreign_east.14 }
}

GEX_liberation_of_GER = {
	every_owned_state = {
		limit = {
			OR = {
				is_core_of = GER
				is_claimed_by = GER
				state = 779
			}
		}
		GER = { transfer_state = PREV }
	}
	add_to_faction = GER
	every_other_country = {
		if = {
			limit = {
				is_subject_of = PREV
				NOT = {
					OR = {
						tag = CIV
						tag = NGR
						tag = KTG
						tag = KEN
						tag = ZAM
						tag = MAG
					}
					is_subject_of = MAF
				}
			}
			GER = {
				PREV = { get_current_government_type = yes }
				puppet = PREV
				PREV = { restore_previous_government_type = yes }
			}
		}
	}
	if = {
		limit = { LEP = { is_subject_of = PREV } }
		GER = {
			LEP = { get_current_government_type = yes }
			puppet = LEP
			LEP = { restore_previous_government_type = yes }
		}
	}
	if = {
		limit = { GEA = { is_subject_of = PREV } }
		GER = {
			GEA = { get_current_government_type = yes }
			puppet = GEA
			GEA = { restore_previous_government_type = yes }
		}
	}
	GER = {
		remove_ideas = GEX_flight_of_the_reich
		remove_ideas = GEX_flight_of_the_reich_2
		add_stability = -0.70
		add_war_support = -0.5
		set_global_flag = GEX_GER_is_back
		PREV = { get_current_government_type = yes }
		puppet = PREV
		PREV = { restore_previous_government_type = yes }
		if = {
			limit = {
				PREV = {
					OR = {
						tag = MAF
						tag = TXS
						AND = {
							tag = LEP
							has_completed_focus = LEP_AOG_pacification_of_china
						}
					}
				}
			}
			set_autonomy = {
				target = PREV
				autonomy_state = autonomy_free
			}
		}
	}
	every_other_country = {
		limit = {
			OR = {
				tag = CIV
				tag = NGR
				tag = KTG
				tag = KEN
				tag = ZAM
				tag = MAG
			}
		}
		MAF = {
			PREV = { get_current_government_type = yes }
			puppet = PREV
			PREV = { restore_previous_government_type = yes }
		}
	}
}