debug_decisions = {

	KX_turn_off_debug_decision = {
		icon = GFX_decision_scales

		visible = {
			OR = {
				is_debug = yes
				has_global_flag = KR_state_transfer_tool_active
				has_global_flag = debug_decisons_on
				has_global_flag = KR_player_leads_conferences
				has_global_flag = KR_plpc_turned_off
			}
		}

		cost = 0

		ai_will_do = {
			factor = 0
		}

		complete_effect = {
			set_global_flag = debug_decisions_disabled
		}
	}

	turn_off_plpc_debug = {
		icon = generic_flags

		available = {
			has_global_flag = KR_player_leads_conferences
		}

		visible = {
			has_global_flag = KR_player_leads_conferences
			NOT = { has_global_flag = KR_plpc_turned_off }
		}

		fire_only_once = no
		cost = 0

		complete_effect = {
			custom_effect_tooltip = KR_plpc_disable_tt
			set_global_flag = KR_plpc_turned_off
		}
	}

	turn_on_plpc_debug = {
		icon = generic_flags

		available = {
			has_global_flag = KR_plpc_turned_off
		}

		visible = {
			has_global_flag = KR_player_leads_conferences
			has_global_flag = KR_plpc_turned_off
		}

		fire_only_once = no
		cost = 0

		complete_effect = {
			custom_effect_tooltip = KR_plpc_enable_tt
			clr_global_flag = KR_plpc_turned_off
		}
	}

	turn_off_stt_debug = {
		icon = generic_flags

		visible = {
			OR = {
				is_debug = yes
				has_global_flag = KR_state_transfer_tool_active
				has_global_flag = debug_decisons_on
			}
			has_global_flag = transfer_enabled
		}

		fire_only_once = no
		cost = 0

		complete_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision turn_off_stt_debug"
			clr_global_flag = transfer_enabled
			clear_variable = ROOT.update_stt_gui
		}
	}

	turn_on_stt_debug = {
		icon = generic_flags

		visible = {
			OR = {
				is_debug = yes
				has_global_flag = KR_state_transfer_tool_active
				has_global_flag = debug_decisons_on
			}
			NOT = { has_global_flag = transfer_enabled }
		}

		fire_only_once = no
		cost = 0

		complete_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision turn_on_stt_debug"
			set_global_flag = transfer_enabled
			clear_variable = ROOT.update_stt_gui
		}
	}

	stt_highlight_states = {
		icon = hand_grab

		highlight_states = {
			highlight_states_trigger = { has_state_flag = marked_for_transfer }
			highlight_color_while_active = 4
		}

		allowed = {
			always = no
		}

		available = {
			hidden_trigger = { always = no }
		}

		visible = {
			hidden_trigger = {
				is_ai = no
				check_variable = { ROOT.marked_states^num > 0 }
			}
		}

		fire_only_once = no
		on_map_mode = map_only
		cancel_if_not_visible = yes
		days_mission_timeout = 7
		is_good = yes

		complete_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision stt_highlight_states"
		}
		timeout_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision timeout stt_highlight_states"
			hidden_effect = {
				for_each_scope_loop = {
					array = ROOT.marked_states
					clr_state_flag = marked_for_transfer
				}
				clear_array = ROOT.marked_states
				clear_variable = ROOT.update_stt_gui
			}
		}
	}
	
	maf_collapse_debug = {
		icon = generic_flags

		available = {
			country_exists = MAF
		}

		visible = {
			OR = {
				is_debug = yes
				has_global_flag = debug_decisons_on
			}
		}

		fire_only_once = no
		cost = 0

		complete_effect = {
			MAF = {
				maf_collapse = yes
			}
		}
	}
	
	acw_start_debug = {
		icon = generic_flags

		available = {
			NOT = {
				has_global_flag = USA_civil_war_begun_flag
			}
		}

		visible = {
				OR = {
				is_debug = yes
				has_global_flag = debug_decisons_on
			}
		}

		fire_only_once = no
		cost = 0

		complete_effect = {
			USA = {
				USA_release_CSA = yes
				USA_release_COR = yes
				USA_release_TEX = yes
				USA_release_CAL = yes
				USA_release_WCC = yes
			}
			COR = {
				COR_release_BBR = yes
			}
		}
	}
	
	acw_start_debug_max = {
		icon = generic_flags

		available = {
			country_exists = COR
		}

		visible = {
			OR = {
				is_debug = yes
				has_global_flag = debug_decisons_on
			}
		}

		fire_only_once = no
		cost = 0

		complete_effect = {
			USA = {
				country_event = hawaii.1
				every_owned_state = {
					limit = {
						OR = {
							state = 357 #Maine
							state = 934 #New Hampshire
							state = 933 #Vermont
							state = 932 #Massachusetts
							state = 935 #Rhode Island
							state = 931 #Connecticut
							state = 796 #Upstate New York
						}
					}
					transfer_state_to = CAN
				}
			}
			CAN = {
				CAN_release_NEE = yes
			}
			NEE = {
				country_event = {
					id = newengland.101
					days = 9
				}
				country_event = {
					id = miscnee.153
					days = 245
					random = 30
				}
			}
			ALA = {
				add_state_core = 463
				transfer_state = 463
				add_state_core = 1348
				transfer_state = 1348
				add_state_core = 1349
				transfer_state = 1349
				add_state_core = 1350
				transfer_state = 1350
				add_state_core = 1273
				transfer_state = 1273
			}
			TXS = {
				country_event = {
					id = TXS.42
					days = 125
				}
				country_event = {
					id = TXS.93
					days = 47
				}
				country_event = {
					id = TXS.94
					days = 69
				}
				country_event = {
					id = TXS.118
					days = 23
				}
			}
			TXS = {
				transfer_state = 375
				transfer_state = 1166
				transfer_state = 833
			}	
			TXS = { transfer_technology = yes }		
			TXS = {
				add_state_core = 375
				add_state_core = 1166
				add_state_core = 833
			}
			USA = {
				TXS = { transfer_technology = yes }		
			}
			NYC = {
				add_state_core = 358
				transfer_state = 358
				load_oob = "NYCMIL"
			}
			set_global_flag = USA_civil_war_begun_flag
		}
	}
	
	ottoman_collapse_debug = {
		icon = generic_flags

		available = {
			country_exists = TUR
		}

		visible = {
			OR = {
				is_debug = yes
				has_global_flag = debug_decisons_on
			}
		}

		fire_only_once = no
		cost = 0

		complete_effect = {
		TUR = {
			hidden_effect = {
			every_state = {
				limit = { is_core_of = TUR }
				if = {
					limit = {
						OR = {
							OTT_is_turkish_state = yes
							OTT_is_syrian_state = yes
							OTT_is_iraqi_state = yes
						}
					}
					ott_set_authority_vilayet_high = yes
				}
			}

			### Iraq
			if = {
				limit = {
					NOT = { country_exists = IRQ }
					any_owned_state = { is_core_of = IRQ }
				}
				every_owned_state = {
					limit = {
						is_core_of = IRQ
					}
					IRQ = {
						transfer_state = PREV
					}
				}
				IRQ = {
					load_oob = IRQ
					declare_war_on = {
						target = TUR
						type = annex_everything
					}
				}
			}

			### Hejaz
			if = {
				limit = {
					NOT = { country_exists = HEJ }
					any_owned_state = { is_core_of = HEJ }
				}
				every_owned_state = {
					limit = {
						is_core_of = HEJ
					}
					HEJ = {
						transfer_state = PREV
					}
				}
				HEJ = {
					load_oob = HEJ_initial
					declare_war_on = {
						target = TUR
						type = annex_everything
					}
				}
			}

			### Tripolitania
			if = {
				limit = {
					NOT = { country_exists = TRP }
					any_owned_state = { is_core_of = TRP }
				}
				every_owned_state = {
					limit = {
						is_core_of = TRP
					}
					TRP = {
						transfer_state = PREV
					}
				}
				TRP = {
					load_oob = TRP
					set_politics = {
						ruling_party = social_democrat
						elections_allowed = no
					}
					declare_war_on = {
						target = TUR
						type = annex_everything
					}
				}
			}

			### Libya
			if = {
				limit = {
					owns_state = 663
					NOT = { country_exists = LBA }
				}
				every_owned_state = {
					limit = {
						is_core_of = LBA
					}
					LBA = {
						transfer_state = PREV
					}
				}
				LBA = {
					load_oob = LBA
					set_politics = {
						ruling_party = national_populist
						elections_allowed = no
					}
					declare_war_on = {
						target = TUR
						type = annex_everything
					}
				}
			}

			### Yemen
			if = {
				limit = {
					NOT = { country_exists = YEM }
					any_owned_state = { is_core_of = YEM }
				}
				every_owned_state = {
					limit = {
						is_core_of = YEM
					}
					YEM = {
						transfer_state = PREV
					}
				}
				YEM = {
					load_oob = YEM
					declare_war_on = {
						target = TUR
						type = annex_everything
					}
				}
			}

			### Arabia
			if = {
				limit = {
					NOT = {
						country_exists = SAU
						country_exists = JBS
					}
					any_owned_state = {
						OR = {
							is_core_of = SAU
							is_core_of = JBS
						}
					}
				}
				every_owned_state = {
					limit = {
						OR = {
							is_core_of = SAU
							is_core_of = JBS
						}
					}
					SAU = {
						transfer_state = PREV
					}
				}
				SAU = {
					create_country_leader = {# Saud bin Abdulaziz Al Saud
						name = "Saud bin Abdulaziz Al Saud"
						picture = "gfx/leaders/SAU/Portrait_Saudi_Arabia_Saud_bin_Abdulaziz_Al_Saud.png"
						expire = "1.1.1"
						ideology = paternal_autocrat_subtype
					}
					division_template = {
						name = "Saudi Loyalists"
						division_names_group = SAU_CAV_01
						regiments = {
							cavalry = { x = 0 y = 0 }
							cavalry = { x = 0 y = 1 }
							cavalry = { x = 1 y = 0 }
							cavalry = { x = 1 y = 1 }
						}
					}
					random_owned_controlled_state = {
						create_unit = {
							division = "name = \"Duwasir\" division_template = \"Saudi Loyalists\"  start_experience_factor = 0.3"
							allow_spawning_on_enemy_provs = yes
							owner = PREV
						}
						create_unit = {
							division = "name = \"Duwasir\" division_template = \"Saudi Loyalists\"  start_experience_factor = 0.3"
							allow_spawning_on_enemy_provs = yes
							owner = PREV
						}
						create_unit = {
							division = "name = \"Duwasir\" division_template = \"Saudi Loyalists\"  start_experience_factor = 0.3"
							allow_spawning_on_enemy_provs = yes
							owner = PREV
						}
						create_unit = {
							division = "name = \"Duwasir\" division_template = \"Saudi Loyalists\"  start_experience_factor = 0.3"
							allow_spawning_on_enemy_provs = yes
							owner = PREV
						}
					}
					declare_war_on = {
						target = TUR
						type = annex_everything
					}				
				}
			}

			### Yemen
			if = {
				limit = {
					owns_state = 293
					NOT = { country_exists = YEM }
				}
				every_owned_state = {
					limit = {
						is_core_of = YEM
					}
					YEM = {
						transfer_state = PREV
					}
				}
				YEM = {
					load_oob = YEM
					declare_war_on = {
						target = TUR
						type = annex_everything
					}
				}
			}

			### Egypt
			if = {
				limit = {
					owns_state = 446 #Cairo
					NOT = { country_exists = EGY }
				}
				every_owned_state = {
					limit = {
						is_core_of = EGY
					}
					EGY = {
						transfer_state = PREV
					}
				}
				EGY = {
					load_oob = EGY
					declare_war_on = {
						target = TUR
						type = annex_everything
					}
				}
			}

			### Persia
			if = {
				limit = {
					owns_state = 266
					NOT = { country_exists = PER }
				}
				every_owned_state = {
					limit = {
						is_core_of = PER
					}
					PER = {
						transfer_state = PREV
					}
				}
				PER = {
					load_oob = PER
					declare_war_on = {
						target = TUR
						type = annex_everything
					}				
				}
			}

			### Faction
			EGY = { create_faction = "Cairo Axis" }
			every_country = {
				limit = {
					OR = {
						tag = IRQ
						tag = HEJ
						tag = YEM
						tag = EGY
						tag = TRP
						tag = JBS
						tag = LBA
						tag = SAU
					}
				}
				EGY = { add_to_faction = PREV }
			}
		}
		}
		}
	}
	
	kill_nfa_debug = {
		icon = generic_flags

		available = {
			country_exists = NFA
		}

		visible = {
			OR = {
				is_debug = yes
				has_global_flag = debug_decisons_on
			}
		}

		fire_only_once = no
		cost = 0

		complete_effect = {
			every_state = {
				limit = {
					is_owned_by = NFA
					NOT = {
						is_core_of = NFA
					}
				}
				add_resistance = 90
			}
		}
	}
	
	socialist_russia_debug = {
		icon = generic_flags

		available = {
			NOT = {
				soviets_exist = yes
			}
		}

		visible = {
			OR = {
				is_debug = yes
				has_global_flag = debug_decisons_on
			}
		}

		fire_only_once = no
		cost = 0

		complete_effect = {
			RUS = {
				setup_soviet_russia = yes
			}
		}
	}
	
	meme_mode_debug = {
		icon = generic_flags

		visible = {
			OR = {
				is_debug = yes
				has_global_flag = debug_decisons_on
			}
		}

		fire_only_once = no
		cost = 0

		complete_effect = {
			meme_mode_start = yes
		}
	}

	spanish_cw_debug = {
		icon = generic_flags

		visible = {
			OR = {
				is_debug = yes
				has_global_flag = debug_decisons_on
			}
		}

		fire_only_once = no
		cost = 0

		complete_effect = {
			SPR = {
				country_event = sprc.7
			}
		}
	}

	kr_wales_is_literally_ai_only_debug = {
		icon = generic_flags

		visible = {
			OR = {
				is_debug = yes
				has_global_flag = debug_decisons_on
			}
		}

		fire_only_once = no
		cost = 0

		complete_effect = {
			ENG = {
				country_event = uob.504
			}
		}
	}

	zimps_folly_debug = {
		icon = generic_flags

		visible = {
			OR = {
				is_debug = yes
				has_global_flag = debug_decisons_on
			}
		}

		fire_only_once = no
		cost = 0

		complete_effect = {
			add_to_variable = {
			var = global.KORsupport
			value = 5
			}
			JAP = {
				country_event = {
					id = japfor.83
				}
			}
		}
	}
	
	navajo_debug = {
		icon = generic_flags

		available = {
			has_global_flag = USA_civil_war_begun_flag
		}

		visible = {
			OR = {
				is_debug = yes
				has_global_flag = debug_decisons_on
			}
		}

		fire_only_once = no
		cost = 0

		complete_effect = {
			country_event = {
				id = amcivwar.1864 
			}
		}
	}

	clear_debug = {
		icon = generic_flags


		visible = {
			has_global_flag = debug_decisons_on
		}

		fire_only_once = no
		cost = 0

		complete_effect = {
			clr_global_flag = debug_decisons_on
		}
	}
}

