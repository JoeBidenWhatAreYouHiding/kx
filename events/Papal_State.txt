###########################
# Papal State Events
###########################

add_namespace = papalstate
add_namespace = italy

# Black Monday Hits the Papal State!
country_event = {
	id = papalstate.1
	immediate = { log = "[GetDateText]: [Root.GetName]: event papalstate.1" }
	title = papalstate.1.t
	desc = papalstate.1.d
	picture = GFX_report_event_generic_run_on_the_banks

	is_triggered_only = yes

	option = {
		name = papalstate.1.a
		add_stability = -0.10
		set_country_flag = PAP_black_monday
		add_ideas = PAP_black_monday_1
	}
}

# Father Coughlin's radio broadcast
country_event = {
	id = papalstate.2
	immediate = { log = "[GetDateText]: [Root.GetName]: event papalstate.2" }
	title = papalstate.2.t
	desc = papalstate.2.d
	picture = GFX_report_event_USA_father_coughlin

	fire_only_once = yes

	is_triggered_only = yes

	option = {
		name = papalstate.2.a #Ask the President of the United States to shut down this 'Radio Priest'
		ai_chance = {
			factor = 75
		}
		add_stability = -0.04
		reverse_add_opinion_modifier = {
			target = USA
			modifier = PAP_denounced_coughlin
		}
		USA = {
			country_event = ustates.18
		}
	}
	option = {
		name = papalstate.2.b #It would be best if we did not interfere
		ai_chance = {
			factor = 25
		}
		add_stability = 0.02
		reverse_add_opinion_modifier = {
			target = USA
			modifier = PAP_did_not_denounce_coughlin
		}
	}
}

# Quadragesimo Quinto Anno
country_event = {
	id = papalstate.3
	immediate = { log = "[GetDateText]: [Root.GetName]: event papalstate.3" }
	title = papalstate.3.t
	desc = papalstate.3.d
	picture = GFX_report_event_PAP_vatican
	is_triggered_only = yes

	option = {
		name = papalstate.3.a
		add_stability = 0.04
	}
}

# Donations from the Faithful
country_event = {
	id = papalstate.4
	immediate = { log = "[GetDateText]: [Root.GetName]: event papalstate.4" }
	title = papalstate.4.t
	desc = papalstate.4.d
	picture = GFX_report_event_PAP_vatican

	fire_only_once = yes

	trigger = {
		tag = PAP
		has_war_with = SRI
	}

	mean_time_to_happen = {
		months = 1
	}

	option = {
		name = papalstate.4.a
		add_stability = 0.05
		add_equipment_to_stockpile = {
			type = infantry_equipment_1
			amount = 1000
			producer = PAP
		}
	}
}

# The Pontine Marshes begin to be cleared (This takes a year)
country_event = {
	id = papalstate.5
	immediate = { log = "[GetDateText]: [Root.GetName]: event papalstate.5" }
	title = papalstate.5.t
	desc = papalstate.5.d
	picture = GFX_report_event_PAP_marshes

	is_triggered_only = yes

	option = {
		name = papalstate.5.a
		add_political_power = 20
		set_global_flag = PAP_pontine_marshes
	}
}

# The clearing of the Pontine Marshes is finished
country_event = {
	id = papalstate.6
	immediate = { log = "[GetDateText]: [Root.GetName]: event papalstate.6" }
	title = papalstate.6.t
	desc = papalstate.6.d
	picture = GFX_report_event_PAP_marshes

	fire_only_once = yes

	trigger = {
		OR = {
			tag = PAP
			tag = SIC
			tag = ITA
			tag = SRD
		}
		2 = { is_owned_and_controlled_by = ROOT }
		has_global_flag = { flag = PAP_pontine_marshes days > 365 }
	}

	mean_time_to_happen = {
		days = 1
	}

	option = {
		name = papalstate.6.a
		add_manpower = 30000
		if = {
			limit = { tag = PAP }
			add_stability = 0.10
		}
		else = {
			add_stability = 0.05
		}
		2 = {
			add_extra_state_shared_building_slots = 2
			add_building_construction = {
				type = industrial_complex
				level = 2
				instant_build = yes
			}
		}
	}
}

# Death of Pius XI (triggered from history)
country_event = {
	id = papalstate.7
	immediate = { log = "[GetDateText]: [Root.GetName]: event papalstate.7" }
	title = worldnews.67.t
	desc = worldnews.67.d
	picture = GFX_report_event_ITA_pope_death

	is_triggered_only = yes

	option = {
		name = worldnews.67.a
		set_country_flag = PAP_Dead_Pius_XI
		remove_ideas = PAP_fading_pope_idea
		hidden_effect = { 
			remove_ideas_with_trait = head_of_government 
			add_ideas = PAP_Luigi_Maglione_hog_pau
		}
		create_country_leader = {
			name = "College of Cardinals"
			picture = "gfx/leaders/PAP/Portrait_Papal_State_College_of_Cardinals.png"
			desc = "POLITICS_COLLEGE_CARDINALS_DESC"
			expire = "1.1.1"
			ideology = theocracy_subtype
		}
		hidden_effect = {
			country_event = { id = papalstate.39 days = 4 }
			random_other_country = {
				news_event = { id = worldnews.67 hours = 5 }
			}
		}
	}
}

# The Successor to St. Peter (triggered by focus)
country_event = {
	id = papalstate.8
	immediate = { log = "[GetDateText]: [Root.GetName]: event papalstate.8" }
	title = papalstate.8.t
	desc = papalstate.8.d
	picture = GFX_report_event_PAP_papal_conclave

	is_triggered_only = yes

	option = {
		name = papalstate.8.a #Elect the pious and popular Eugenio Cardinal Pacelli as Pius XII
		ai_chance = {
			factor = 35
			modifier = {
				factor = 0
				OR = {
					has_game_rule = {
						rule = PAP_newconclave
						option = PAP_NEWCONCLAVE_AUTHDEM
					}
					has_game_rule = {
						rule = PAP_newconclave
						option = PAP_NEWCONCLAVE_SOCCON
					}
					has_game_rule = {
						rule = PAP_newconclave
						option = PAP_NEWCONCLAVE_SOCLIB
					}
					has_game_rule = {
						rule = PAP_newconclave
						option = PAP_NEWCONCLAVE_SOCDEM
					}
					has_game_rule = {
						rule = PAP_newconclave
						option = PAP_NEWCONCLAVE_NATPOP
					}
				}
			}
		}
		custom_effect_tooltip = ITA_Pius_XII_will_become_pope
		create_country_leader = {
			name = "Pius XII"
			picture = "gfx/leaders/PAP/Portrait_Papal_State_Pius_XII.png"
			desc = "POLITICS_PIUS_XII_DESC"
			expire = "1.1.1"
			ideology = theocracy_subtype
			traits = { ITA_the_mfing_pope} 
		}
		hidden_effect = {
			set_global_flag = Pope_Pius_XII
			random_other_country = {
				news_event = { id = worldnews.223 days = 1 }
			}
		}
		set_politics = {
			ruling_party = paternal_autocrat
		}
		add_popularity = {
			ideology = paternal_autocrat
			popularity = 0.2
		}
		set_country_flag = PAP_conclave
		hidden_effect = {
			set_global_flag = PAP_pius_xii
		}
	}
	option = {
		name = papalstate.8.b #Elect the charitable Elia Cardinal dalla Costa as John XXIII
		ai_chance = {
			factor = 13
			modifier = {
				factor = 0
				OR = {
					has_game_rule = {
						rule = PAP_newconclave
						option = PAP_NEWCONCLAVE_PATAUT
					}
					has_game_rule = {
						rule = PAP_newconclave
						option = PAP_NEWCONCLAVE_AUTHDEM
					}
					has_game_rule = {
						rule = PAP_newconclave
						option = PAP_NEWCONCLAVE_SOCLIB
					}
					has_game_rule = {
						rule = PAP_newconclave
						option = PAP_NEWCONCLAVE_SOCDEM
					}
					has_game_rule = {
						rule = PAP_newconclave
						option = PAP_NEWCONCLAVE_NATPOP
					}
				}
			}
		}
		add_stability = -0.10
		custom_effect_tooltip = ITA_John_XXIII_will_become_pope
		create_country_leader = {
			name = "John XXIII"
			picture = "gfx/leaders/PAP/Portrait_Papal_State_John.png"
			desc = "POLITICS_JOHN_XXIII_DESC"
			expire = "1.1.1"
			ideology = pataut_authoritarian_liberalism_subtype
			traits = { ITA_the_mfing_pope} 
		}
		hidden_effect = {
		create_country_leader = {
			name = "John XXIII"
			picture = "gfx/leaders/PAP/Portrait_Papal_State_John.png"
			desc = "POLITICS_JOHN_XXIII_DESC"
			expire = "1.1.1"
			ideology = christian_democracy_subtype
			traits = { ITA_the_mfing_pope} 
		}
		create_country_leader = {
			name = "John XXIII"
			picture = "gfx/leaders/PAP/Portrait_Papal_State_John.png"
			desc = "POLITICS_JOHN_XXIII_DESC"
			expire = "1.1.1"
			ideology = marlib_qualunquismo_subtype
			traits = { ITA_the_mfing_pope} 
		}
		create_country_leader = {
			name = "John XXIII"
			picture = "gfx/leaders/PAP/Portrait_Papal_State_John.png"
			desc = "POLITICS_JOHN_XXIII_DESC"
			expire = "1.1.1"
			ideology = soclib_christian_democracy_subtype
			traits = { ITA_the_mfing_pope} 
		}
		create_country_leader = {
			name = "John XXIII"
			picture = "gfx/leaders/PAP/Portrait_Papal_State_John.png"
			desc = "POLITICS_JOHN_XXIII_DESC"
			expire = "1.1.1"
			ideology = socdem_christian_socialism_subtype
			traits = { ITA_the_mfing_pope} 
		}
	    }
		hidden_effect = {
			set_global_flag = Pope_John_XXIII
			random_other_country = {
				news_event = { id = worldnews.224 days = 1 }
			}
		}
		set_politics = {
			ruling_party = paternal_autocrat
		}
		add_soccon_to_coalition = yes
		add_popularity = {
			ideology = social_conservative
			popularity = 0.1
		}
		set_country_flag = PAP_conclave
		hidden_effect = {
			set_global_flag = PAP_john_xxiii
		}
	}
	option = {
		name = papalstate.8.c #Elect the socialist cardinal, Achille Liènart, as Leo XIV
		ai_chance = {
			factor = 13
			modifier = {
				factor = 0
				OR = {
					has_game_rule = {
						rule = PAP_newconclave
						option = PAP_NEWCONCLAVE_PATAUT
					}
					has_game_rule = {
						rule = PAP_newconclave
						option = PAP_NEWCONCLAVE_AUTHDEM
					}
					has_game_rule = {
						rule = PAP_newconclave
						option = PAP_NEWCONCLAVE_SOCCON
					}
					has_game_rule = {
						rule = PAP_newconclave
						option = PAP_NEWCONCLAVE_SOCLIB
					}
					has_game_rule = {
						rule = PAP_newconclave
						option = PAP_NEWCONCLAVE_NATPOP
					}
				}
			}
		}
		custom_effect_tooltip = ITA_Leo_XIV_will_become_pope
		create_country_leader = {
			name = "Leo XIV"
			picture = "gfx/leaders/PAP/Portrait_Papal_State_Leo.png"
			desc = "POLITICS_LEO_XIV_DESC"
			expire = "1.1.1"
			ideology = pataut_authoritarian_liberalism_subtype
			traits = { ITA_the_mfing_pope} 
		}
		hidden_effect = {
		create_country_leader = {
			name = "Leo XIV"
			picture = "gfx/leaders/PAP/Portrait_Papal_State_Leo.png"
			desc = "POLITICS_LEO_XIV_DESC"
			expire = "1.1.1"
			ideology = christian_democracy_subtype
			traits = { ITA_the_mfing_pope} 
		}
		create_country_leader = {
			name = "Leo XIV"
			picture = "gfx/leaders/PAP/Portrait_Papal_State_Leo.png"
			desc = "POLITICS_LEO_XIV_DESC"
			expire = "1.1.1"
			ideology = marlib_qualunquismo_subtype
			traits = { ITA_the_mfing_pope} 
		}
		create_country_leader = {
			name = "Leo XIV"
			picture = "gfx/leaders/PAP/Portrait_Papal_State_Leo.png"
			desc = "POLITICS_LEO_XIV_DESC"
			expire = "1.1.1"
			ideology = soclib_christian_democracy_subtype
			traits = { ITA_the_mfing_pope} 
		}
		create_country_leader = {
			name = "Leo XIV"
			picture = "gfx/leaders/PAP/Portrait_Papal_State_Leo.png"
			desc = "POLITICS_LEO_XIV_DESC"
			expire = "1.1.1"
			ideology = socdem_christian_socialism_subtype
			traits = { ITA_the_mfing_pope} 
		}
	    }
		hidden_effect = {
			random_other_country = {
				news_event = { id = worldnews.225 days = 1 }
			}
			set_global_flag = Pope_Leo_XIV
		}
		set_politics = {
			ruling_party = paternal_autocrat
		}
		add_socdem_to_coalition = yes
		add_popularity = {
			ideology = social_democrat
			popularity = 0.1
		}
		every_country = {
			limit = {
				exists = yes
				OR = {
					tag = AUS
					tag = HUN
				}
			}
			add_opinion_modifier = { target = PAP modifier = KR_hates_govt }
		}
		if = {
			limit = { country_exists = GER }
			GER = {
				add_opinion_modifier = { target = PAP modifier = KR_disapproves_of_govt }
			}
		}
		set_country_flag = PAP_conclave
		hidden_effect = {
			set_global_flag = PAP_leo_xiv
		}
	}
	option = {
		name = papalstate.8.e #Elect the progressive cardinal, George Mundelein, as Benedict XVI
		ai_chance = {
			factor = 13
			modifier = {
				factor = 0
				OR = {
					has_game_rule = {
						rule = PAP_newconclave
						option = PAP_NEWCONCLAVE_PATAUT
					}
					has_game_rule = {
						rule = PAP_newconclave
						option = PAP_NEWCONCLAVE_AUTHDEM
					}
					has_game_rule = {
						rule = PAP_newconclave
						option = PAP_NEWCONCLAVE_SOCCON
					}
					has_game_rule = {
						rule = PAP_newconclave
						option = PAP_NEWCONCLAVE_SOCDEM
					}
					has_game_rule = {
						rule = PAP_newconclave
						option = PAP_NEWCONCLAVE_NATPOP
					}
				}
			}
		}
		custom_effect_tooltip = ITA_Benedict_XVI_will_become_pope
		create_country_leader = {
			name = "Benedict XVI"
			picture = "gfx/leaders/PAP/Portrait_Papal_State_Benedict.png"
			desc = "POLITICS_BENEDICT_XVI_DESC"
			expire = "1.1.1"
			ideology = pataut_authoritarian_liberalism_subtype
			traits = { ITA_the_mfing_pope} 
		}
		hidden_effect = {
		create_country_leader = {
			name = "Benedict XVI"
			picture = "gfx/leaders/PAP/Portrait_Papal_State_Benedict.png"
			desc = "POLITICS_BENEDICT_XVI_DESC"
			expire = "1.1.1"
			ideology = christian_democracy_subtype
			traits = { ITA_the_mfing_pope} 
		}
		create_country_leader = {
			name = "Benedict XVI"
			picture = "gfx/leaders/PAP/Portrait_Papal_State_Benedict.png"
			desc = "POLITICS_BENEDICT_XVI_DESC"
			expire = "1.1.1"
			ideology = marlib_qualunquismo_subtype
			traits = { ITA_the_mfing_pope} 
		}
		create_country_leader = {
			name = "Benedict XVI"
			picture = "gfx/leaders/PAP/Portrait_Papal_State_Benedict.png"
			desc = "POLITICS_BENEDICT_XVI_DESC"
			expire = "1.1.1"
			ideology = soclib_christian_democracy_subtype
			traits = { ITA_the_mfing_pope} 
		}
		create_country_leader = {
			name = "Benedict XVI"
			picture = "gfx/leaders/PAP/Portrait_Papal_State_Benedict.png"
			desc = "POLITICS_BENEDICT_XVI_DESC"
			expire = "1.1.1"
			ideology = socdem_christian_socialism_subtype
			traits = { ITA_the_mfing_pope} 
		}
	    }
		hidden_effect = {
			random_other_country = {
				news_event = { id = worldnews.2251 days = 1 }
			}
			set_global_flag = Pope_Benedict_XVI
		}
		set_politics = {
			ruling_party = paternal_autocrat
		}
		add_soclib_to_coalition = yes
		add_popularity = {
			ideology = social_liberal
			popularity = 0.1
		}
		if = {
			limit = { country_exists = USA }
			USA = {
				add_opinion_modifier = { target = PAP modifier = KR_approves_of_govt }
			}
		}
		set_country_flag = PAP_conclave
		hidden_effect = {
			set_global_flag = PAP_benedict_xvi
		}
	}
	option = {
		name = papalstate.8.f #Elect the populist cardinal Theodor Innitzer as Adrian VII
		ai_chance = {
			factor = 13
			modifier = {
				factor = 0
				OR = {
					has_game_rule = {
						rule = PAP_newconclave
						option = PAP_NEWCONCLAVE_NATPOP
					}
					has_game_rule = {
						rule = PAP_newconclave
						option = PAP_NEWCONCLAVE_PATAUT
					}
					has_game_rule = {
						rule = PAP_newconclave
						option = PAP_NEWCONCLAVE_SOCCON
					}
					has_game_rule = {
						rule = PAP_newconclave
						option = PAP_NEWCONCLAVE_SOCLIB
					}
					has_game_rule = {
						rule = PAP_newconclave
						option = PAP_NEWCONCLAVE_SOCDEM
					}
				}
			}
		}
		custom_effect_tooltip = ITA_Adrian_VII_will_become_pope
		create_country_leader = {
			name = "Adrian VII"
			picture = "gfx/leaders/PAP/Portrait_Papal_State_Adrian.png"
			desc = "POLITICS_ADRIAN_VII_DESC"
			expire = "1.1.1"
			ideology = authdem_austropopulism_subtype
			traits = { ITA_the_mfing_pope} 
		}
		hidden_effect = {
		create_country_leader = {
			name = "Adrian VII"
			picture = "gfx/leaders/PAP/Portrait_Papal_State_Adrian.png"
			desc = "POLITICS_ADRIAN_VII_DESC"
			expire = "1.1.1"
			ideology = theocracy_subtype
			traits = { ITA_the_mfing_pope} 
		}
		remove_all_ministers = yes
			add_ideas = {
				PAP_Ludovico_Spada_Veralli_Potenziani_hog_ade
				PAP_Filippo_Andrea_VI_Doria_Pamphili_for_ade
				PAP_Filippo_Cremonesi_eco_ade
				PAP_Piero_Colonna_sec_ade
			}
	    }
		hidden_effect = {
			set_global_flag = Pope_Adrian_VII
			random_other_country = {
				news_event = { id = worldnews.2261 days = 1 }
			}
		}
		set_politics = {
			ruling_party = authoritarian_democrat
		}
		add_pataut_to_coalition = yes
		add_popularity = {
			ideology = authoritarian_democrat
			popularity = 0.2
		}
		if = {
			limit = { country_exists = ITA }
			ITA = {
				add_opinion_modifier = { target = PAP modifier = KR_disapproves_of_govt }
			}
		}
		every_country = {
			limit = {
				exists = yes
				OR = {
					tag = CRO
					tag = HUN
					tag = SIC
					tag = AUS
				}
			}
			add_opinion_modifier = { target = PAP modifier = KR_approves_of_govt }
		}
		set_country_flag = PAP_conclave
		hidden_effect = {
			set_global_flag = PAP_adrian_vii
		}
	}
	option = {
		name = papalstate.8.g #Elect the hardline cardinal Alfredo Schuster as Julius IV
		ai_chance = {
			factor = 13
			modifier = {
				factor = 0
				OR = {
					has_game_rule = {
						rule = PAP_newconclave
						option = PAP_NEWCONCLAVE_PATAUT
					}
					has_game_rule = {
						rule = PAP_newconclave
						option = PAP_NEWCONCLAVE_AUTHDEM
					}
					has_game_rule = {
						rule = PAP_newconclave
						option = PAP_NEWCONCLAVE_SOCCON
					}
					has_game_rule = {
						rule = PAP_newconclave
						option = PAP_NEWCONCLAVE_SOCLIB
					}
					has_game_rule = {
						rule = PAP_newconclave
						option = PAP_NEWCONCLAVE_SOCDEM
					}
				}
			}
		}
		custom_effect_tooltip = ITA_Julius_IV_will_become_pope
		create_country_leader = {
			name = "Julius IV"
			picture = "gfx/leaders/PAP/Portrait_Papal_State_Julius.png"
			desc = "POLITICS_JULIUS_IV_DESC"
			expire = "1.1.1"
			ideology = italian_legionarism_subtype
			traits = { ITA_the_mfing_pope} 
		}
		hidden_effect = {
		create_country_leader = {
			name = "Julius IV"
			picture = "gfx/leaders/PAP/Portrait_Papal_State_Julius.png"
			desc = "POLITICS_JULIUS_IV_DESC"
			expire = "1.1.1"
			ideology = theocracy_subtype
			traits = { ITA_the_mfing_pope} 
		}
		remove_all_ministers = yes
			add_ideas = {
				PAP_Reginaldo_Giuliani_hog_npo
				PAP_Alfredo_Ildefonso_Schuster_for_npo
				PAP_Francesco_Boncompagni_Ludovisi_eco_npo
				PAP_Giangiacomo_Borghese_sec_npo
			}
	    }
		hidden_effect = {
			set_global_flag = Pope_Julius_IV
			random_other_country = {
				news_event = { id = worldnews.226 days = 1 }
			}
		}
		set_politics = {
			ruling_party = national_populist
		}
		add_pataut_to_coalition = yes
		add_popularity = {
			ideology = national_populist
			popularity = 0.2
		}
		if = {
			limit = { country_exists = GER }
			GER = {
				add_opinion_modifier = { target = PAP modifier = KR_disapproves_of_govt }
			}
		}
		every_country = {
			limit = {
				exists = yes
				OR = {
					tag = CRO
					tag = HUN
					tag = SIC
				}
			}
			add_opinion_modifier = { target = PAP modifier = KR_approves_of_govt }
		}
		set_country_flag = PAP_conclave
		hidden_effect = {
			set_global_flag = PAP_julius_iv
		}
	}
}

# The First Roman Elections (triggered by focus)
country_event = {
	id = papalstate.9
	immediate = { log = "[GetDateText]: [Root.GetName]: event papalstate.9" }
	title = papalstate.9.t
	desc = papalstate.9.d
	picture = GFX_report_event_PAP_vatican

	is_triggered_only = yes

	fire_only_once = yes

	option = {
		name = papalstate.9.a
		ai_chance = {
			factor = 25
			modifier = {
			factor = 0
			    OR = {
				has_game_rule = {
					rule = PAP_first_roman_election
					option = PAP_FIRST_ROMAN_ELECTION_MARLIB
				}
				has_game_rule = {
					rule = PAP_first_roman_election
					option = PAP_FIRST_ROMAN_ELECTION_SOCLIB
				}
				has_game_rule = {
					rule = PAP_first_roman_election
					option = PAP_FIRST_ROMAN_ELECTION_SOCDEM
				}
			    }
			}
		}
		effect_tooltip = {
			set_politics = {
				ruling_party = social_conservative
				election_frequency = 60
				elections_allowed = yes
			}
		}
		hidden_effect = {
			meta_effect = {
				text = {
					set_politics = {
						ruling_party = social_conservative
						last_election = "[CURRENT_DATE]"
						election_frequency = 60
						elections_allowed = yes
					}
				}
				CURRENT_DATE = "[?global.date.GetDateStringNoHour]"
			}
		}
		add_popularity = {
			ideology = social_conservative
			popularity = 0.2
		}
		hidden_effect = {
			remove_all_ministers = yes
			add_ideas = {
				PAP_Giuseppe_Donati_hog_sco
				PAP_Domenico_Tardini_for_pau
				PAP_Eligio_Cacciaguerra_eco_sco
				PAP_Marco_Ciriani_sec_sco
			}
			end_coalition = yes
			add_pataut_to_coalition = yes
		}
	}
	option = {
		name = papalstate.9.b
		ai_chance = {
			factor = 25
			modifier = {
			factor = 0
				OR = {
				has_game_rule = {
					rule = PAP_first_roman_election
					option = PAP_FIRST_ROMAN_ELECTION_SOCCON
				}
				has_game_rule = {
					rule = PAP_first_roman_election
					option = PAP_FIRST_ROMAN_ELECTION_SOCLIB
				}
				has_game_rule = {
					rule = PAP_first_roman_election
					option = PAP_FIRST_ROMAN_ELECTION_SOCDEM
				}
			    }
			}
		}
		effect_tooltip = {
			set_politics = {
				ruling_party = market_liberal
				election_frequency = 60
				elections_allowed = yes
			}
		}
		hidden_effect = {
			meta_effect = {
				text = {
					set_politics = {
						ruling_party = market_liberal
						last_election = "[CURRENT_DATE]"
						election_frequency = 60
						elections_allowed = yes
					}
				}
				CURRENT_DATE = "[?global.date.GetDateStringNoHour]"
			}
		}
		add_popularity = {
			ideology = market_liberal
			popularity = 0.2
		}
		hidden_effect = {
			remove_all_ministers = yes
			add_ideas = {
				PAP_Guglielmo_Giannini_hog_mli
				PAP_Crescenzo_Mazza_for_mli
				PAP_Vito_Ciampoli_eco_mli
				PAP_Ottavia_Penna_Buscemi_sec_mli
			}
			end_coalition = yes
			add_pataut_to_coalition = yes
		}
	}
	option = {
		name = papalstate.9.c
		ai_chance = {
			factor = 25
			modifier = {
			factor = 0
				OR = {
				has_game_rule = {
					rule = PAP_first_roman_election
					option = PAP_FIRST_ROMAN_ELECTION_SOCCON
				}
				has_game_rule = {
					rule = PAP_first_roman_election
					option = PAP_FIRST_ROMAN_ELECTION_MARLIB
				}
				has_game_rule = {
					rule = PAP_first_roman_election
					option = PAP_FIRST_ROMAN_ELECTION_SOCDEM
				}
			    }
			}
		}
		effect_tooltip = {
			set_politics = {
				ruling_party = social_liberal
				election_frequency = 60
				elections_allowed = yes
			}
		}
		hidden_effect = {
			meta_effect = {
				text = {
					set_politics = {
						ruling_party = social_liberal
						last_election = "[CURRENT_DATE]"
						election_frequency = 60
						elections_allowed = yes
					}
				}
				CURRENT_DATE = "[?global.date.GetDateStringNoHour]"
			}
		}
		add_popularity = {
			ideology = social_liberal
			popularity = 0.2
		}
		hidden_effect = {
			remove_all_ministers = yes
			add_ideas = {
				PAP_Romolo_Murri_hog_sli
				PAP_Tommaso_Gallarati_Scotti_for_sli
				PAP_Carlo_Zucchini_eco_sli
				PAP_Giuseppe_Fuschini_sec_sli
			}
			end_coalition = yes
			add_pataut_to_coalition = yes
		}
	}
	option = {
		name = papalstate.9.e
		ai_chance = {
			factor = 25
			modifier = {
			factor = 0
				OR = {
				has_game_rule = {
					rule = PAP_first_roman_election
					option = PAP_FIRST_ROMAN_ELECTION_SOCCON
				}
				has_game_rule = {
					rule = PAP_first_roman_election
					option = PAP_FIRST_ROMAN_ELECTION_MARLIB
				}
				has_game_rule = {
					rule = PAP_first_roman_election
					option = PAP_FIRST_ROMAN_ELECTION_SOCLIB
				}
			    }
			}
		}
		effect_tooltip = {
			set_politics = {
				ruling_party = social_democrat
				election_frequency = 60
				elections_allowed = yes
			}
		}
		hidden_effect = {
			meta_effect = {
				text = {
					set_politics = {
						ruling_party = social_democrat
						last_election = "[CURRENT_DATE]"
						election_frequency = 60
						elections_allowed = yes
					}
				}
				CURRENT_DATE = "[?global.date.GetDateStringNoHour]"
			}
		}
		add_popularity = {
			ideology = social_democrat
			popularity = 0.2
		}
		remove_all_ministers = yes
		hidden_effect = {
			remove_all_ministers = yes
			add_ideas = {
				PAP_Gerardo_Bruni_hog_sde
				PAP_Domenico_Tardini_for_pau
				PAP_Giovanni_Minzoni_eco_sde
				PAP_Giovanni_Battista_Montini_sec_pau
			}
			end_coalition = yes
			add_pataut_to_coalition = yes
		}
	}
}

# Regular Election Event
country_event = {
	id = papalstate.10
	immediate = { log = "[GetDateText]: [Root.GetName]: event papalstate.10" }
	title = papalstate.10.t
	desc = papalstate.10.d
	picture = GFX_report_event_PAP_vatican

	is_triggered_only = yes

	option = {
		name = papalstate.10.a
		ai_chance = {
			factor = 25
			modifier = {
			factor = 0
				OR = {
				has_game_rule = {
					rule = PAP_first_roman_election
					option = PAP_FIRST_ROMAN_ELECTION_MARLIB
				}
				has_game_rule = {
					rule = PAP_first_roman_election
					option = PAP_FIRST_ROMAN_ELECTION_SOCLIB
				}
				has_game_rule = {
					rule = PAP_first_roman_election
					option = PAP_FIRST_ROMAN_ELECTION_SOCDEM
				}
			    }
			}
			modifier = {
				factor = 2
				has_government = social_conservative
			}
		}
		if = {
			limit = {
				NOT = { has_government = social_conservative }
			}
			hidden_effect = {
				remove_all_ministers = yes
				add_ideas = {
					PAP_Giuseppe_Donati_hog_sco
				    PAP_Domenico_Tardini_for_pau
				    PAP_Eligio_Cacciaguerra_eco_sco
				    PAP_Marco_Ciriani_sec_sco
				}
			}
		}
		set_politics = {
			ruling_party = social_conservative
			election_frequency = 60
			elections_allowed = yes
		}
		add_popularity = {
			ideology = social_conservative
			popularity = 0.2
		}
	}
	option = {
		name = papalstate.10.b
		ai_chance = {
			factor = 25
			modifier = {
			factor = 0
				OR = {
				has_game_rule = {
					rule = PAP_first_roman_election
					option = PAP_FIRST_ROMAN_ELECTION_SOCCON
				}
				has_game_rule = {
					rule = PAP_first_roman_election
					option = PAP_FIRST_ROMAN_ELECTION_SOCLIB
				}
				has_game_rule = {
					rule = PAP_first_roman_election
					option = PAP_FIRST_ROMAN_ELECTION_SOCDEM
				}
			    }
			}
			modifier = {
				factor = 2
				has_government = market_liberal
			}
		}
		if = {
			limit = {
				NOT = { has_government = market_liberal }
			}
			hidden_effect = {
				remove_all_ministers = yes
				add_ideas = {
					PAP_Guglielmo_Giannini_hog_mli
					PAP_Crescenzo_Mazza_for_mli
					PAP_Vito_Ciampoli_eco_mli
					PAP_Ottavia_Penna_Buscemi_sec_mli
				}
			}
		}
		set_politics = {
			ruling_party = market_liberal
			election_frequency = 60
			elections_allowed = yes
		}
		add_popularity = {
			ideology = market_liberal
			popularity = 0.2
		}
	}
	option = {
		name = papalstate.10.c
		ai_chance = {
			factor = 25
			modifier = {
			factor = 0
				OR = {
				has_game_rule = {
					rule = PAP_first_roman_election
					option = PAP_FIRST_ROMAN_ELECTION_SOCCON
				}
				has_game_rule = {
					rule = PAP_first_roman_election
					option = PAP_FIRST_ROMAN_ELECTION_MARLIB
				}
				has_game_rule = {
					rule = PAP_first_roman_election
					option = PAP_FIRST_ROMAN_ELECTION_SOCDEM
				}
			    }
			}
			modifier = {
				factor = 2
				has_government = social_liberal
			}
		}
		if = {
			limit = {
				NOT = { has_government = social_liberal }
			}
			hidden_effect = {
				remove_all_ministers = yes
				add_ideas = {
					PAP_Romolo_Murri_hog_sli
					PAP_Tommaso_Gallarati_Scotti_for_sli
					PAP_Carlo_Zucchini_eco_sli
					PAP_Giuseppe_Fuschini_sec_sli
				}
			}
		}
		set_politics = {
			ruling_party = social_liberal
			election_frequency = 60
			elections_allowed = yes
		}
		add_popularity = {
			ideology = social_liberal
			popularity = 0.2
		}
	}
	option = {
		name = papalstate.10.e
		ai_chance = {
			factor = 25
			modifier = {
			factor = 0
				OR = {
				has_game_rule = {
					rule = PAP_first_roman_election
					option = PAP_FIRST_ROMAN_ELECTION_SOCCON
				}
				has_game_rule = {
					rule = PAP_first_roman_election
					option = PAP_FIRST_ROMAN_ELECTION_MARLIB
				}
				has_game_rule = {
					rule = PAP_first_roman_election
					option = PAP_FIRST_ROMAN_ELECTION_SOCLIB
				}
			    }
			}
			modifier = {
				factor = 2
				has_government = social_democrat
			}
		}
		if = {
			limit = {
				NOT = { has_government = social_democrat }
			}
			hidden_effect = {
				remove_all_ministers = yes
				add_ideas = {
					PAP_Gerardo_Bruni_hog_sde
				    PAP_Domenico_Tardini_for_pau
				    PAP_Giovanni_Minzoni_eco_sde
				    PAP_Giovanni_Battista_Montini_sec_pau
				}
			}
		}
		set_politics = {
			ruling_party = social_democrat
			election_frequency = 60
			elections_allowed = yes
		}
		add_popularity = {
			ideology = social_democrat
			popularity = 0.2
		}
	}
}

# Financial Aid from the Two Sicilies?
country_event = {
	id = papalstate.11
	immediate = { log = "[GetDateText]: [Root.GetName]: event papalstate.11" }
	title = papalstate.11.t
	desc = papalstate.11.d
	picture = GFX_report_event_PAP_vatican

	is_triggered_only = yes

	option = {
		name = papalstate.11.a #Ask the Sicilians to take our whole debt
		ai_chance = {
			factor = 40
		}
		if = {
			limit = { is_subject = no }
			custom_effect_tooltip = PAP_warning_puppet
		}
		if = {
			limit = { is_subject_of = SIC }
			custom_effect_tooltip = PAP_warning_annex
		}
		add_political_power = -25
		SIC = {
			country_event = { id = papalstate.12 days = 1 }
		}
	}

	option = {
		name = papalstate.11.b #Only ask them to take some of our debt
		ai_chance = {
			factor = 60
		}
		SIC = {
			country_event = { id = papalstate.16 days = 1 }
		}
	}
}

# Asking Sicily to take the whole debt - Sicily decides
country_event = {
	id = papalstate.12
	immediate = { log = "[GetDateText]: [Root.GetName]: event papalstate.12" }
	title = papalstate.12.t
	desc = papalstate.12.d
	picture = GFX_report_event_PAP_vatican

	is_triggered_only = yes

	option = {
		name = papalstate.12.a #Accept their request
		ai_chance = {
			factor = 70
		}
		add_political_power = -200
		add_stability = -0.05
		set_country_flag = PAP_all_debts
		if = {
			limit = { PAP = { is_subject = no } }
			PAP = { get_current_government_type = yes }
			puppet = PAP
			PAP = { restore_previous_government_type = yes }
		}
		else = {
			effect_tooltip = {
				annex_country = { target = PAP }
			}
		}
		PAP = {
			add_opinion_modifier = { target = SIC modifier = KR_approves_of_govt }
			country_event = papalstate.13
		}
	}
	option = {
		name = papalstate.12.b #Take on some of their debts
		ai_chance = {
			factor = 20
		}
		add_political_power = -100
		add_stability = -0.035
		set_country_flag = PAP_some_debts
		PAP = {
			add_opinion_modifier = { target = SIC modifier = KR_approves_of_govt }
			country_event = papalstate.14
		}
	}
	option = {
		name = papalstate.12.c #Refuse - our own nation must come first
		ai_chance = {
			factor = 10
		}
		PAP = {
			add_opinion_modifier = { target = SIC modifier = KR_hates_govt }
			country_event = papalstate.15
		}
	}
}

# Sicily accepted the whole debt
country_event = {
	id = papalstate.13
	immediate = { log = "[GetDateText]: [Root.GetName]: event papalstate.13" }
	title = papalstate.13.t
	desc = papalstate.13.d
	picture = GFX_report_event_SRI_palace

	is_triggered_only = yes

	option = {
		name = papalstate.13.a
		add_stability = 0.05
		remove_ideas = PAP_black_monday_1

		if = {
			limit = { is_subject_of = FROM }
			every_state = {
				limit = { is_claimed_by = PAP }
				remove_claim_by = PAP
			}
			every_state = {
				limit = { is_core_of = PAP }
				if = {
					limit = { is_claimed_by = SIC }
					remove_claim_by = SIC
				}
				if = {
					limit = { NOT = { is_core_of = SIC } }
					add_core_of = SIC
				}
			}
			FROM = {
				annex_country = { target = PAP transfer_troops = yes }
				change_tag_from = PAP
			}
		}
	}
}

# Sicily accepted some of the debt
country_event = {
	id = papalstate.14
	immediate = { log = "[GetDateText]: [Root.GetName]: event papalstate.14" }
	title = papalstate.14.t
	desc = papalstate.14.d
	picture = GFX_report_event_SRI_palace

	is_triggered_only = yes

	option = {
		name = papalstate.14.a
		add_stability = 0.025
		if = {
			limit = { has_idea = PAP_black_monday_1 }
			swap_ideas = {
				remove_idea = PAP_black_monday_1
				add_idea = PAP_black_monday_2
			}
		}
	}
}

# Sicily refused to take any debt
country_event = {
	id = papalstate.15
	immediate = { log = "[GetDateText]: [Root.GetName]: event papalstate.15" }
	title = papalstate.15.t
	desc = papalstate.15.d
	picture = GFX_report_event_SRI_palace

	is_triggered_only = yes

	option = {
		name = papalstate.15.a
		add_stability = -0.03
	}
}

# Sicily asked to take some of the debt - Sicily decides
country_event = {
	id = papalstate.16
	immediate = { log = "[GetDateText]: [Root.GetName]: event papalstate.16" }
	title = papalstate.16.t
	desc = papalstate.16.d
	picture = GFX_report_event_PAP_vatican

	is_triggered_only = yes

	option = {
		name = papalstate.16.a #Accept their request
		ai_chance = {
			factor = 90
		}
		add_political_power = -100
		add_stability = -0.035
		set_country_flag = PAP_some_debts
		PAP = {
			add_opinion_modifier = { target = SIC modifier = KR_approves_of_govt }
			country_event = papalstate.17
		}
	}

	option = {
		name = papalstate.16.b #Refuse
		ai_chance = {
			factor = 10
		}
		PAP = {
			add_opinion_modifier = { target = SIC modifier = KR_hates_govt }
			country_event = papalstate.15
		}
	}
}

# Sicily accepted some of the debt
country_event = {
	id = papalstate.17
	immediate = { log = "[GetDateText]: [Root.GetName]: event papalstate.17" }
	title = papalstate.17.t
	desc = papalstate.17.d
	picture = GFX_report_event_SRI_palace

	is_triggered_only = yes

	option = {
		name = papalstate.17.a
		add_stability = 0.025
		if = {
			limit = { has_idea = PAP_black_monday_1 }
			swap_ideas = {
				remove_idea = PAP_black_monday_1
				add_idea = PAP_black_monday_2
			}
		}
	}
}

# Asking SIC for military aid (from focus)
country_event = {
	id = papalstate.18
	immediate = { log = "[GetDateText]: [Root.GetName]: event papalstate.18" }
	title = papalstate.18.t
	desc = papalstate.18.d
	picture = GFX_report_event_PAP_vatican

	is_triggered_only = yes

	trigger = {
		PAP = {
			exists = yes
			OR = {
				is_subject_of = SIC
				is_in_faction_with = SIC
				is_guaranteed_by = SIC
			}
		}
	}

	option = {
		name = papalstate.18.a #Assist them as much as possible
		ai_chance = {
			factor = 60
		}
		set_country_flag = PAP_all_military_aid
		add_political_power = -100
		add_stability = -0.050
		PAP = {
			add_opinion_modifier = { target = SIC modifier = KR_approves_of_govt }
			country_event = papalstate.19
		}
	}
	option = {
		name = papalstate.18.b #We can spare them some help
		ai_chance = {
			factor = 30
		}
		set_country_flag = PAP_some_military_aid
		add_political_power = -50
		add_stability = -0.025
		PAP = {
			country_event = papalstate.20
		}
	}
	option = {
		name = papalstate.18.c #No need - we can protect them ourselves
		ai_chance = {
			factor = 10
		}
		PAP = {
			add_opinion_modifier = { target = SIC modifier = KR_disapproves_of_govt }
			country_event = papalstate.21
		}
	}
}

# SIC grants aid
country_event = {
	id = papalstate.19
	immediate = { log = "[GetDateText]: [Root.GetName]: event papalstate.19" }
	title = papalstate.19.t
	desc = papalstate.19.d
	picture = GFX_report_event_SRI_palace

	is_triggered_only = yes

	option = {
		name = papalstate.19.a
		army_experience = 25
		navy_experience = 25
		air_experience = 25
		add_tech_bonus = {
			name = papalstate.19.t
			bonus = 0.50
			uses = 1
			category = infantry_weapons
			category = artillery
		}
		add_doctrine_cost_reduction = {
			name = land_doc_bonus
			cost_reduction = 0.5
			uses = 1
			category = land_doctrine
		}
	}
}

# SIC grants some aid
country_event = {
	id = papalstate.20
	immediate = { log = "[GetDateText]: [Root.GetName]: event papalstate.20" }
	title = papalstate.20.t
	desc = papalstate.20.d
	picture = GFX_report_event_SRI_palace

	is_triggered_only = yes

	option = {
		name = papalstate.20.a
		army_experience = 10
		navy_experience = 10
		air_experience = 10
		add_doctrine_cost_reduction = {
			name = land_doc_bonus
			cost_reduction = 0.5
			uses = 1
			category = land_doctrine
		}
	}
}

# SIC refuses
country_event = {
	id = papalstate.21
	immediate = { log = "[GetDateText]: [Root.GetName]: event papalstate.21" }
	title = papalstate.21.t
	desc = papalstate.21.d
	picture = GFX_report_event_SRI_palace

	is_triggered_only = yes

	option = {
		name = papalstate.21.a
	}
}

# Syndicalist Guerrilla Campaign
country_event = {
	id = papalstate.22
	immediate = { log = "[GetDateText]: [Root.GetName]: event papalstate.22" }
	title = papalstate.22.t
	desc = papalstate.22.d
	picture = GFX_report_event_GRE_army

	trigger = {
		tag = PAP
		OR = {
			owns_state = 157
			owns_state = 161
			owns_state = 764
			owns_state = 981
		}
	}

	fire_only_once = yes

	option = {
		name = papalstate.22.a #These subversives must be brought to justice!
		add_stability = -0.1
		add_ideas = PAP_resistance
		country_event = {
			id = papalstate.23
			days = 10
		}
	}
}

# Syndicalist Riots
country_event = {
	id = papalstate.23
	immediate = { log = "[GetDateText]: [Root.GetName]: event papalstate.23" }
	title = papalstate.23.t
	desc = papalstate.23.d
	picture = GFX_report_event_IRE_civil_war2

	fire_only_once = yes
	is_triggered_only = yes

	option = {
		name = papalstate.23.a
		add_stability = -0.02
		set_country_flag = PAP_had_riots
		country_event = {
			id = papalstate.24
			days = 8
		}
	}
}

# Syndicalist Ambushes
country_event = {
	id = papalstate.24
	immediate = { log = "[GetDateText]: [Root.GetName]: event papalstate.24" }
	title = papalstate.24.t
	desc = papalstate.24.d
	picture = GFX_report_event_IRE_civil_war

	fire_only_once = yes
	is_triggered_only = yes

	option = {
		name = papalstate.24.a
		add_manpower = -250
		country_event = {
			id = papalstate.25
			days = 12
		}
	}
}

# Syndicalist Bombing
country_event = {
	id = papalstate.25
	immediate = { log = "[GetDateText]: [Root.GetName]: event papalstate.25" }
	title = papalstate.25.t
	desc = papalstate.25.d
	picture = GFX_report_event_IRE_bombing

	fire_only_once = yes
    is_triggered_only = yes

	option = {
		name = papalstate.25.a
		add_stability = -0.02
		add_manpower = -300
		random_owned_controlled_state = {
			limit = {
				OR = {
					state = 157
					state = 161
					state = 764
					state = 981
					state = 2
				}
				industrial_complex > 0
			}
			damage_building = {
				type = infrastructure
				damage = 0.9
			}
		}
		country_event = {
			id = papalstate.26
			days = 16
		}
	}
}

# Syndicalist Sabotage
country_event = {
	id = papalstate.26
	immediate = { log = "[GetDateText]: [Root.GetName]: event papalstate.26" }
	title = papalstate.26.t
	desc = papalstate.26.d
	picture = GFX_report_event_IRE_fire

	fire_only_once = yes
    is_triggered_only = yes

	option = {
		name = papalstate.26.a
		random_owned_controlled_state = {
			limit = {
				OR = {
					state = 157
					state = 161
					state = 764
					state = 981
					state = 2
				}
				industrial_complex > 0
			}
			damage_building = {
				type = industrial_complex
				damage = 0.8
			}
		}
		country_event = {
			id = papalstate.27
			days = 6
		}
	}
}

# End of the syndicalist resistance
country_event = {
	id = papalstate.27
	immediate = { log = "[GetDateText]: [Root.GetName]: event papalstate.27" }
	title = papalstate.27.t
	desc = papalstate.27.d
	picture = GFX_report_event_SRI_arrests

	fire_only_once = yes
    is_triggered_only = yes

	option = {
		name = papalstate.27.a
		add_stability = 0.10
		remove_ideas = PAP_resistance
	}
}

# Effects of Black Monday end!
country_event = {
	id = papalstate.38
	immediate = { log = "[GetDateText]: [Root.GetName]: event papalstate.38" }
	title = papalstate.38.t
	desc = papalstate.38.d

	trigger = {
		tag = PAP
		has_country_flag = PAP_black_monday
		NOT = {
			has_idea = PAP_black_monday_1
			has_idea = PAP_black_monday_2
			has_idea = PAP_black_monday_3
		}
	}

	fire_only_once = yes

	option = {
		name = papalstate.38.a
		add_stability = 0.05
		clr_country_flag = PAP_black_monday
	}
}

# The Papal Conclave
country_event = {
	id = papalstate.39
	immediate = { log = "[GetDateText]: [Root.GetName]: event papalstate.39" }
	title = papalstate.39.t
	desc = papalstate.39.d
	picture = GFX_report_event_PAP_papal_conclave

	is_triggered_only = yes

	option = {
		name = papalstate.39.a #Godspeed
	}
}

# Intro Event
country_event = {
	id = papalstate.40
	immediate = { log = "[GetDateText]: [Root.GetName]: event papalstate.40" }
	title = papalstate.40.t
	desc = papalstate.40.d
	picture = GFX_report_event_PAP_vatican

	is_triggered_only = yes

	option = {
		name = papalstate.40.a #Neato
	}
}

# The Siculo-Papal Joint Planning Staff
country_event = {
	id = papalstate.41
	immediate = { log = "[GetDateText]: [Root.GetName]: event papalstate.41" }
	title = papalstate.41.t
	desc = papalstate.41.d
	picture = GFX_report_event_GRE_army

	is_triggered_only = yes

	trigger = {
		OR = {
			is_subject_of = SIC
			is_in_faction_with = SIC
		}
	}

	option = {
		name = papalstate.41.a #Neato
		add_ideas = PAP_jointstaff
	}
}

# PAP declares independence from SIC
country_event = {
	id = papalstate.50
	immediate = { log = "[GetDateText]: [Root.GetName]: event papalstate.50" }
	title = papalstate.50.t
	picture = GFX_report_event_PAP_vatican

	desc = {
		text = papalstate.50.SRIhelped
		trigger = {
			country_exists = SRI
			OR = {
				has_country_flag = PAP_all_debts
				has_country_flag = PAP_some_debts
				has_country_flag = PAP_all_military_aid
				has_country_flag = PAP_some_military_aid
			}
		}
	}
	desc = {
		text = papalstate.50.SRInothelped
		trigger = {
			country_exists = SRI
			NOT = {
				has_country_flag = PAP_all_debts
				has_country_flag = PAP_some_debts
				has_country_flag = PAP_all_military_aid
				has_country_flag = PAP_some_military_aid
			}
		}
	}
	desc = {
		text = papalstate.50.noSRIhelped
		trigger = {
			NOT = { country_exists = SRI }
			OR = {
				has_country_flag = PAP_all_debts
				has_country_flag = PAP_some_debts
				has_country_flag = PAP_all_military_aid
				has_country_flag = PAP_some_military_aid
			}
		}
	}
	desc = {
		text = papalstate.50.noSRInothelped
		trigger = {
			NOT = { country_exists = SRI }
			NOT = {
				has_country_flag = PAP_all_debts
				has_country_flag = PAP_some_debts
				has_country_flag = PAP_all_military_aid
				has_country_flag = PAP_some_military_aid
			}
		}
	}

	is_triggered_only = yes

	option = {
		name = papalstate.50.a # They must repay the aid we've given
		trigger = {
			OR = {
				has_country_flag = PAP_all_debts
				has_country_flag = PAP_some_debts
				has_country_flag = PAP_all_military_aid
				has_country_flag = PAP_some_military_aid
			}
		}
		ai_chance = {
			factor = 30
		}
		PAP = { country_event = papalstate.51 }
	}
	option = {
		name = papalstate.50.b # No, it can't be permitted
		trigger = { has_government = national_populist }
		ai_chance = {
			factor = 20
			modifier = {
				factor = 5
				has_country_flag = SIC_confed
			}
			modifier = {
				factor = 0.5
				has_war = yes
			}
			modifier = {
				factor = 0
				surrender_progress > 0.05
			}
		}
		PAP = { country_event = papalstate.54 }
	}
	option = {
		name = papalstate.50.c # We still offer protection
		trigger = { country_exists = SRI }
		ai_chance = {
			factor = 50
		}
		PAP = { country_event = papalstate.55 }
	}
	option = {
		name = papalstate.50.e # We wish them well
		ai_chance = {
			factor = 30
			modifier = {
				factor = 0.5
				has_government = national_populist
			}
			modifier = {
				factor = 0.5
				has_government = social_conservative
			}
		}
		PAP = { country_event = papalstate.58 }
	}
}

# SIC demands repayment of debt
country_event = {
	id = papalstate.51
	title = papalstate.51.t
	picture = GFX_report_event_SRI_palace

	desc = {
		text = papalstate.51.d.all
		trigger = {
			OR = {
				SIC = { has_country_flag = PAP_all_debts }
				SIC = { has_country_flag = PAP_some_debts }
			}
			OR = {
				SIC = { has_country_flag = PAP_all_military_aid }
				SIC = { has_country_flag = PAP_some_military_aid }
			}
		}
	}
	desc = {
		text = papalstate.51.d.debts
		trigger = {
			OR = {
				SIC = { has_country_flag = PAP_all_debts }
				SIC = { has_country_flag = PAP_some_debts }
			}
			NOT = {
				SIC = { has_country_flag = PAP_all_military_aid }
				SIC = { has_country_flag = PAP_some_military_aid }
			}
		}
	}
	desc = {
		text = papalstate.51.d.military
		trigger = {
			NOT = {
				SIC = { has_country_flag = PAP_all_debts }
				SIC = { has_country_flag = PAP_some_debts }
			}
			OR = {
				SIC = { has_country_flag = PAP_all_military_aid }
				SIC = { has_country_flag = PAP_some_military_aid }
			}
		}
	}

	is_triggered_only = yes

	immediate = {
		log = "[GetDateText]: [Root.GetName]: event papalstate.51"
		hidden_effect = {
			set_variable = { repaypp = 0 }
			set_variable = { repaystab = 0 }
			if = {
				limit = { SIC = { has_country_flag = PAP_all_debts } }
				add_to_variable = { repaypp = -200 }
				add_to_variable = { repaystab = -0.1 }
			}
			if = {
				limit = { SIC = { has_country_flag = PAP_some_debts } }
				add_to_variable = { repaypp = -100 }
				add_to_variable = { repaystab = -0.05 }
			}
			if = {
				limit = { SIC = { has_country_flag = PAP_all_military_aid } }
				add_to_variable = { repaypp = -100 }
				add_to_variable = { repaystab = -0.05 }
			}
			if = {
				limit = { SIC = { has_country_flag = PAP_some_military_aid } }
				add_to_variable = { repaypp = -50 }
				add_to_variable = { repaystab = -0.03 }
			}
		}
	}

	option = {
		name = papalstate.51.a #We will repay what we can
		add_political_power = var:repaypp
		add_stability = var:repaystab
		SIC = {
			add_opinion_modifier = { target = PAP modifier = KR_disapproves_of_govt }
			country_event = { id = papalstate.52 days = 1 }
		}
	}
	option = {
		name = papalstate.51.b #We thank them for their contribution
		SIC = {
			add_opinion_modifier = { target = PAP modifier = KR_outraged }
			country_event = { id = papalstate.53 days = 1 }
		}
	}
}

# Papacy repays debt
country_event = {
	id = papalstate.52
	title = papalstate.52.t
	desc = papalstate.52.d
	picture = GFX_report_event_PAP_vatican

	is_triggered_only = yes

	immediate = {
		log = "[GetDateText]: [Root.GetName]: event papalstate.52"
		hidden_effect = {
			PAP = {
				multiply_variable = { var = repaypp value = -1 }
			}
		}
	}

	option = {
		name = papalstate.52.a
		add_political_power = var:PAP.repaypp
		PAP = {
			clear_variable = repaypp
			clear_variable = repaystab
		}
	}
}

# Papacy refuses to pay debt
country_event = {
	id = papalstate.53
	immediate = { log = "[GetDateText]: [Root.GetName]: event papalstate.53" }
	title = papalstate.53.t
	desc = papalstate.53.d
	picture = GFX_report_event_PAP_vatican

	is_triggered_only = yes

	option = {
		name = papalstate.53.a #So be it
		ai_chance = {
			factor = 50
			modifier = {
				factor = 0
				has_government = national_populist
			}
		}
		add_political_power = -50
	}
	option = {
		name = papalstate.53.b #Then their land is forfeit
		ai_chance = {
			factor = 50
			modifier = {
				factor = 0.5
				has_government = social_conservative
			}
		}
		every_state = {
			limit = {
				is_core_of = PAP
				is_not_claim_or_core_of_ROOT = yes
			}
			add_claim_by = SIC
		}
	}
}

# Sicily refuses to let Papacy go
country_event = {
	id = papalstate.54
	immediate = { log = "[GetDateText]: [Root.GetName]: event papalstate.54" }
	title = papalstate.54.t
	desc = papalstate.54.d
	picture = GFX_report_event_SRI_palace

	is_triggered_only = yes

	option = {
		name = papalstate.54.a #Fine, have it your way
		ai_chance = {
			factor = 25
		}
		add_political_power = -200
		get_current_government_type = yes
		SIC = { puppet = PAP }
		restore_previous_government_type = yes
	}
	option = {
		name = papalstate.54.b #War it is!
		ai_chance = {
			factor = 75
		}
		add_war_support = 0.20
		SIC = {
			declare_war_on = {
				target = PAP
				type = annex_everything
			}
		}
	}
}

# Sicily offers protection
country_event = {
	id = papalstate.55
	immediate = { log = "[GetDateText]: [Root.GetName]: event papalstate.55" }
	title = papalstate.55.t
	desc = papalstate.55.d
	picture = GFX_report_event_SRI_palace

	is_triggered_only = yes

	option = {
		name = papalstate.55.a #Very well
		diplomatic_relation = {
			country = SIC
			relation = non_aggression_pact
			active = yes
		}
		give_military_access = SIC
		SIC = {
			give_guarantee = PAP
			country_event = { id = papalstate.57 days = 1 }
		}
	}
	option = {
		name = papalstate.55.b #Not necessary
		diplomatic_relation = {
			country = SIC
			relation = non_aggression_pact
			active = yes
		}
		SIC = {
			country_event = { id = papalstate.56 days = 1 }
		}
	}
}

# Papacy refuses protection
country_event = {
	id = papalstate.56
	immediate = { log = "[GetDateText]: [Root.GetName]: event papalstate.56" }
	title = papalstate.56.t
	desc = papalstate.56.d
	picture = GFX_report_event_PAP_vatican

	is_triggered_only = yes

	option = {
		name = papalstate.56.a
	}
}

# Papacy agrees to protection
country_event = {
	id = papalstate.57
	immediate = { log = "[GetDateText]: [Root.GetName]: event papalstate.57" }
	title = papalstate.57.t
	desc = papalstate.57.d
	picture = GFX_report_event_PAP_vatican

	is_triggered_only = yes

	option = {
		name = papalstate.57.a
	}
}

# Sicily wishes the Papacy well
country_event = {
	id = papalstate.58
	immediate = { log = "[GetDateText]: [Root.GetName]: event papalstate.58" }
	title = papalstate.58.t
	desc = papalstate.58.d
	picture = GFX_report_event_SRI_palace

	is_triggered_only = yes

	option = {
		name = papalstate.58.a
	}
}

# Pope rallies the faithful in the SRI
country_event = {
	id = papalstate.64
	immediate = { log = "[GetDateText]: [Root.GetName]: event papalstate.64" }
	title = papalstate.64.t
	desc = papalstate.64.d
	picture = GFX_report_event_GRE_army

	is_triggered_only = yes

	option = {
		name = papalstate.64.a
		add_stability = -0.05
	}
}

# Deleting partisan units
country_event = {
	id = papalstate.65

	hidden = yes
	is_triggered_only = yes

	trigger = {
		OR = {
			has_template = "Partigiano NeoSanfedisti"
			has_template = "Fanteria NeoSanfedisti"
			has_template = "Partigiano Cattolico"
			has_template = "Fanteria Cattolico"
		}
	}

	immediate = {
		log = "[GetDateText]: [Root.GetName]: event papalstate.65"
		if = {
			limit = { has_template = "Partigiano NeoSanfedisti" }
			delete_unit_template_and_units = { division_template = "Partigiano NeoSanfedisti" }
		}
		if = {
			limit = { has_template = "Fanteria NeoSanfedisti" }
			delete_unit_template_and_units = { division_template = "Fanteria NeoSanfedisti" }
		}
		if = {
			limit = { has_template = "Partigiano Cattolico" }
			delete_unit_template_and_units = { division_template = "Partigiano Cattolico" }
		}
		if = {
			limit = { has_template = "Fanteria Cattolico" }
			delete_unit_template_and_units = { division_template = "Fanteria Cattolico" }
		}
	}
}

country_event = {
	id = papalstate.66
	immediate = { log = "[GetDateText]: [Root.GetName]: event papalstate.66" }
	title = papalstate.66.t
	desc = papalstate.66.d
	picture = GFX_report_event_PAP_numismatics

	is_triggered_only = yes

	option = {
		name = papalstate.66.a
		add_political_power = 25
		2 = { 
				add_extra_state_shared_building_slots = 1
				add_building_construction = {
					type = industrial_complex
					level = 1
					instant_build = yes
			}
		}
		ITA = { add_opinion_modifier = { target = PAP modifier = small_increase } }
	}
}

# Death of the pope (Second time)
country_event = {
	id = italy.150
	title = italy.150.t
	desc = italy.150.d
	picture = GFX_report_event_ITA_pope_death

	fire_only_once = yes

	is_triggered_only = yes

	option = {
		name = italy.150.a
		set_country_flag = ITA_new_pope_dead
		if = {
			limit = { has_country_leader = { name = "Pius XII" } }
			clr_country_flag = Pope_Pius_XII
			set_country_flag = Pius_XII_dead
			set_country_flag = Eugenio_Cardinal_Pacelli_dead
		}
		if = {
			limit = { has_country_leader = { name = "John XXIII" } }
			clr_country_flag = Pope_John_XXIII
			set_country_flag = John_XXIII_dead
			set_country_flag = Elia_Cardinal_dalla_Costa_dead
		}
		if = {
			limit = { has_country_leader = { name = "Benedict XVI" } }
			clr_country_flag = Pope_Benedict_XVI
			set_country_flag = Benedict_XVI_dead
		}
		if = {
			limit = { has_country_leader = { name = "Leo XIV" } }
			clr_country_flag = Pope_Leo_XIV
			set_country_flag = Leo_XIV_dead
		}
		if = {
			limit = { has_country_leader = { name = "Adrian VII" } }
			clr_country_flag = Pope_Adrian_VII
			set_country_flag = Adrian_VII_dead
			set_country_flag = Theodor_Cardinal_Innitzer_dead
		}
		if = {
			limit = { has_country_leader = { name = "Julius IV" } }
			clr_country_flag = Pope_Julius_IV
			set_country_flag = Julius_IV_dead
		}
		PAP = {	
			ITA_create_college_of_cardinals = yes
		}
		hidden_effect = {
			country_event = { id = italy.151 days = 30 }
		}
		news_event = {
			id = worldnews.4250
			days = 1
		}	
	}

	option = {#I lived H E R E T I C
		name = italy.150.b
		set_country_flag = ITA_new_pope_lived
		add_stability = -0.10
				add_political_power = -10
				news_event = {
			id = worldnews.4260
			days = 1
		}
	}
}

# The Second Papal Conclave
country_event = {
	id = italy.151
	title = italy.151.t
	desc = italy.151.d
	picture = GFX_report_event_PAP_papal_conclave

	is_triggered_only = yes

	option = {
		name = italy.55.a #Elect the pious and popular Eugenio Cardinal Pacelli as Pius XII
		trigger = {
			NOT = {
				has_country_flag = Pius_XII_dead
				has_country_flag = Eugenio_Cardinal_Pacelli_dead
				tag = NFA
			}
		}
		ai_chance = {
			factor = 20
		}
		ITA_create_Pius_XII = yes
	}
	option = {
		name = italy.151.b #Elect Alfredo Ottaviani as Gregorius XVII
		ai_chance = {
			factor = 25
		}
		if = {
			limit = {
				tag = PAP
			}
			ITA_create_Gregorius_XVII = yes
		}
		if = {
			limit = {
				tag = NFA
			}
			create_country_leader = {
				name = "Gregorius XVII"
				picture = "gfx/leaders/PAP/Portrait_Papal_State_Gregorius_XVII.png"
				expire = "1.1.1"
				ideology = legionarism_subtype
				traits = { NFA_the_mfing_pope} 
			}
		}
	}
	option = {
		name = italy.151.c #Elect Angelo Giuseppe Roncalli as John XXIII
		ai_chance = {
			factor = 30
			modifier = {
				factor = 1.3
				has_country_flag = Pius_XII_dead
			}
		}
		trigger = {
			NOT = { has_global_flag = Pope_John_XXIII }
		}
		if = {
			limit = {
				tag = PAP
			}
			ITA_create_John_XXIV = yes 
		}
		if = {
			limit = {
				tag = NFA
			}
			create_country_leader = {
				name = "John XXIII"
				picture = "gfx/leaders/PAP/Portrait_Papal_State_John_XXIV.png"
				expire = "1.1.1"
				ideology = legionarism_subtype
				traits = { NFA_the_mfing_pope} 
			}
		}
	}
	option = {
		name = italy.151.c_2 #Elect Angelo Giuseppe Roncalli as John XXIV
		ai_chance = {
			factor = 30
			modifier = {
				factor = 1.3
				has_country_flag = Pius_XII_dead
			}
		}
		trigger = {
			has_global_flag = Pope_John_XXIII
		}
		if = {
			limit = {
				tag = PAP
			}
			ITA_create_John_XXIV = yes 
		}
		if = {
			limit = {
				tag = NFA
			}
			create_country_leader = {
				name = "John XXIV"
				picture = "gfx/leaders/PAP/Portrait_Papal_State_John_XXIV.png"
				expire = "1.1.1"
				ideology = legionarism_subtype
				traits = { NFA_the_mfing_pope} 
			}
		}
	}
	option = {
		name = italy.151.e #Elect Giovanni Battista Montini as Paulus VI
		ai_chance = {
			factor = 25
		}
		if = {
			limit = {
				tag = PAP
			}
			ITA_create_Paulus_VI = yes
		}
		if = {
			limit = {
				tag = NFA
			}
			create_country_leader = {
				name = "Paulus VI"
				picture = "gfx/leaders/PAP/Portrait_Papal_State_Paulus_VI.png"
				expire = "1.1.1"
				ideology = legionarism_subtype
				traits = { NFA_the_mfing_pope} 
			}
		}
	}
}